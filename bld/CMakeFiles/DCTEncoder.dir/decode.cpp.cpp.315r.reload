
;; Function av_image_copy2 (av_image_copy2, funcdef_no=4, decl_uid=3622, cgraph_uid=5, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
         Considering alt=2 of insn 2:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 2:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 2:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 2:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 3:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 3:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 3:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 3:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 4:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 4:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 4:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 4:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 5:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 5:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 5:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 5:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 6:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 6:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 7:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 7:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 11:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 12:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 13:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 13:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 14:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 14:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 14:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 15:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 15:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 16:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 16:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 17:   (0) =rm  (1) %0  (2) re
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 17:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=1 of insn 17:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=2 of insn 17:   (0) r  (1) r  (2) 0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=3 of insn 17:   (0) r  (1) r  (2) le
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
      Choosing alt 0 in insn 17:  (0) =rm  (1) %0  (2) re {*adddi_1}
         Considering alt=0 of insn 18:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal} (sp_off=-8)
         Considering alt=0 of insn 19:   (0) =X  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 19:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
         Considering alt=0 of insn 26:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 26:  (0) rBwBz {*call} (sp_off=-16)
         Considering alt=0 of insn 27:   (0) =rm  (1) %0  (2) re
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 27:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=1 of insn 27:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=2 of insn 27:   (0) r  (1) r  (2) 0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=3 of insn 27:   (0) r  (1) r  (2) le
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
      Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*adddi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 31: point = 0, n_alt = -1
  BB 2
   Insn 27: point = 0, n_alt = 0
   Insn 26: point = 0, n_alt = 0
   Insn 25: point = 0, n_alt = -2
   Insn 24: point = 1, n_alt = -2
   Insn 23: point = 2, n_alt = -2
   Insn 22: point = 3, n_alt = -2
   Insn 21: point = 4, n_alt = -2
   Insn 20: point = 5, n_alt = -2
   Insn 19: point = 6, n_alt = 0
   Insn 18: point = 7, n_alt = 0
   Insn 17: point = 8, n_alt = 0
   Insn 16: point = 8, n_alt = 3
   Insn 15: point = 9, n_alt = 3
   Insn 14: point = 10, n_alt = 3
   Insn 13: point = 11, n_alt = 3
   Insn 12: point = 12, n_alt = 0
   Insn 11: point = 13, n_alt = 0
   Insn 7: point = 14, n_alt = 1
   Insn 6: point = 14, n_alt = 1
   Insn 5: point = 14, n_alt = 5
   Insn 4: point = 14, n_alt = 5
   Insn 3: point = 14, n_alt = 5
   Insn 2: point = 14, n_alt = 5
 r98: [5..13]
 r99: [4..12]
 r100: [3..11]
 r101: [2..10]
 r102: [1..9]
 r103: [0..8]
 r104: [6..7]
Compressing live ranges: from 14 to 2 - 14%
Ranges after the compression:
 r98: [0..1]
 r99: [0..1]
 r100: [0..1]
 r101: [0..1]
 r102: [0..1]
 r103: [0..1]
 r104: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 11
changing reg in insn 20
changing reg in insn 12
changing reg in insn 21
changing reg in insn 13
changing reg in insn 22
changing reg in insn 14
changing reg in insn 23
changing reg in insn 15
changing reg in insn 24
changing reg in insn 16
changing reg in insn 25
changing reg in insn 18
changing reg in insn 19
deleting insn with uid = 20.
deleting insn with uid = 21.
deleting insn with uid = 22.
deleting insn with uid = 23.
deleting insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 26.


av_image_copy2

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 76 [r16] 77 [r17] 78 [r18] 79 [r19] 80 [r20] 81 [r21] 82 [r22] 83 [r23] 84 [r24] 85 [r25] 86 [r26] 87 [r27] 88 [r28] 89 [r29] 90 [r30] 91 [r31]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={3d,1u} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={4d,3u} r6={1d,16u} r7={4d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={3d} r18={1d} r19={1d,1u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={3d,2u} r37={3d,2u} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} 
;;    total ref usage 155{114d,41u,0e} in 19{18 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [4 dst_data+0 S8 A64])
        (reg:DI 5 di [ dst_data ])) "/home/anand/ffmpeg/libavutil/imgutils.h":187:1 84 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [23 dst_linesizes+0 S8 A64])
        (reg:DI 4 si [ dst_linesizes ])) "/home/anand/ffmpeg/libavutil/imgutils.h":187:1 84 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [4 src_data+0 S8 A64])
        (reg:DI 1 dx [ src_data ])) "/home/anand/ffmpeg/libavutil/imgutils.h":187:1 84 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [23 src_linesizes+0 S8 A64])
        (reg:DI 2 cx [ src_linesizes ])) "/home/anand/ffmpeg/libavutil/imgutils.h":187:1 84 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [22 pix_fmt+0 S4 A32])
        (reg:SI 36 r8 [ pix_fmt ])) "/home/anand/ffmpeg/libavutil/imgutils.h":187:1 85 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 width+0 S4 A32])
        (reg:SI 37 r9 [ width ])) "/home/anand/ffmpeg/libavutil/imgutils.h":187:1 85 {*movsi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 37 r9 [98])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 width+0 S4 A32])) "/home/anand/ffmpeg/libavutil/imgutils.h":188:18 85 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 36 r8 [99])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [22 pix_fmt+0 S4 A32])) "/home/anand/ffmpeg/libavutil/imgutils.h":188:18 85 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 2 cx [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [23 src_linesizes+0 S8 A64])) "/home/anand/ffmpeg/libavutil/imgutils.h":188:18 84 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 1 dx [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [4 src_data+0 S8 A64])) "/home/anand/ffmpeg/libavutil/imgutils.h":188:18 84 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si [102])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [23 dst_linesizes+0 S8 A64])) "/home/anand/ffmpeg/libavutil/imgutils.h":188:18 84 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [4 dst_data+0 S8 A64])) "/home/anand/ffmpeg/libavutil/imgutils.h":188:18 84 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/ffmpeg/libavutil/imgutils.h":188:18 272 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 18 17 19 2 (set (reg:SI 5 di [104])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [1 height+0 S4 A64])) "/home/anand/ffmpeg/libavutil/imgutils.h":188:18 85 {*movsi_internal}
     (nil))
(insn 19 18 25 2 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [1  S4 A32])
        (reg:SI 5 di [104])) "/home/anand/ffmpeg/libavutil/imgutils.h":188:18 59 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 25 19 26 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [103])) "/home/anand/ffmpeg/libavutil/imgutils.h":188:18 84 {*movdi_internal}
     (nil))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:DI ("av_image_copy") [flags 0x41]  <function_decl 0x7522a0d49c00 av_image_copy>) [0 av_image_copy S1 A8])
        (const_int 16 [0x10])) "/home/anand/ffmpeg/libavutil/imgutils.h":188:18 1137 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 27 26 30 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/ffmpeg/libavutil/imgutils.h":188:18 272 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 30 27 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 3 (const_int 0 [0]) "/home/anand/ffmpeg/libavutil/imgutils.h":191:1 1167 {nop}
     (nil))
(note 32 31 0 NOTE_INSN_DELETED)

;; Function av_make_error_string (av_make_error_string, funcdef_no=1246, decl_uid=30927, cgraph_uid=570, symbol_order=1209)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
         Considering alt=2 of insn 2:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 2:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 2:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 2:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 3:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 3:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 3:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 3:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 4:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 4:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 8:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 8:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 9:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 9:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 10:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 14:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 14:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 15:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 15:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 23: point = 0, n_alt = -1
   Insn 22: point = 0, n_alt = -2
   Insn 18: point = 1, n_alt = -2
   Insn 15: point = 3, n_alt = 3
   Insn 14: point = 4, n_alt = 0
   Insn 13: point = 4, n_alt = -2
   Insn 12: point = 5, n_alt = -2
   Insn 11: point = 6, n_alt = -2
   Insn 10: point = 7, n_alt = 0
   Insn 9: point = 8, n_alt = 3
   Insn 8: point = 9, n_alt = 3
   Insn 4: point = 10, n_alt = 1
   Insn 3: point = 10, n_alt = 5
   Insn 2: point = 10, n_alt = 5
 r98: [2..3]
 r99: [0..1]
 r100: [6..9]
 r101: [5..8]
 r102: [4..7]
Compressing live ranges: from 10 to 6 - 60%
Ranges after the compression:
 r98: [2..3]
 r99: [0..1]
 r100: [4..5]
 r101: [4..5]
 r102: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 18
changing reg in insn 18
changing reg in insn 22
changing reg in insn 8
changing reg in insn 11
changing reg in insn 9
changing reg in insn 12
changing reg in insn 10
changing reg in insn 13
deleting insn with uid = 11.
deleting insn with uid = 18.
deleting insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.


av_make_error_string

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 76 [r16] 77 [r17] 78 [r18] 79 [r19] 80 [r20] 81 [r21] 82 [r22] 83 [r23] 84 [r24] 85 [r25] 86 [r26] 87 [r27] 88 [r28] 89 [r29] 90 [r30] 91 [r31]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,9u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d,1u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} 
;;    total ref usage 130{107d,23u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [43 errbuf+0 S8 A64])
        (reg:DI 5 di [ errbuf ])) "/home/anand/ffmpeg/libavutil/error.h":113:1 84 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [7 errbuf_size+0 S8 A64])
        (reg:DI 4 si [ errbuf_size ])) "/home/anand/ffmpeg/libavutil/error.h":113:1 84 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 errnum+0 S4 A32])
        (reg:SI 1 dx [ errnum ])) "/home/anand/ffmpeg/libavutil/error.h":113:1 85 {*movsi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 1 dx [100])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [7 errbuf_size+0 S8 A64])) "/home/anand/ffmpeg/libavutil/error.h":114:16 84 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 2 cx [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [43 errbuf+0 S8 A64])) "/home/anand/ffmpeg/libavutil/error.h":114:16 84 {*movdi_internal}
     (nil))
(insn 10 9 12 2 (set (reg:SI 0 ax [102])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 errnum+0 S4 A32])) "/home/anand/ffmpeg/libavutil/error.h":114:16 85 {*movsi_internal}
     (nil))
(insn 12 10 13 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [101])) "/home/anand/ffmpeg/libavutil/error.h":114:16 84 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (reg:SI 0 ax [102])) "/home/anand/ffmpeg/libavutil/error.h":114:16 85 {*movsi_internal}
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_strerror") [flags 0x41]  <function_decl 0x75229f283c00 av_strerror>) [0 av_strerror S1 A8])
            (const_int 0 [0]))) "/home/anand/ffmpeg/libavutil/error.h":114:16 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 15 14 23 2 (set (reg/f:DI 0 ax [orig:98 _6 ] [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [43 errbuf+0 S8 A64])) "/home/anand/ffmpeg/libavutil/error.h":115:12 84 {*movdi_internal}
     (nil))
(insn 23 15 25 2 (use (reg/i:DI 0 ax)) "/home/anand/ffmpeg/libavutil/error.h":116:1 -1
     (nil))
(note 25 23 0 NOTE_INSN_DELETED)

;; Function av_ts_make_time_string (av_ts_make_time_string, funcdef_no=1276, decl_uid=31417, cgraph_uid=600, symbol_order=1239)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
         Considering alt=2 of insn 2:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 2:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 2:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 2:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 3:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 3:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 3:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 3:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 4:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 4:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 4:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 4:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 8:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 8:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 9:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 9:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 10:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 10:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 11:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 11:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 15:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 15:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 24: point = 0, n_alt = -1
   Insn 23: point = 0, n_alt = -2
   Insn 19: point = 1, n_alt = -2
   Insn 16: point = 3, n_alt = -2
   Insn 15: point = 4, n_alt = 0
   Insn 14: point = 4, n_alt = -2
   Insn 13: point = 5, n_alt = -2
   Insn 12: point = 6, n_alt = -2
   Insn 11: point = 7, n_alt = 3
   Insn 10: point = 8, n_alt = 3
   Insn 9: point = 9, n_alt = 3
   Insn 8: point = 11, n_alt = 3
   Insn 4: point = 12, n_alt = 5
   Insn 3: point = 12, n_alt = 5
   Insn 2: point = 12, n_alt = 5
 r98: [2..3]
 r99: [0..1]
 r100: [10..11]
 r101: [6..9]
 r102: [5..8]
 r103: [4..7]
Compressing live ranges: from 12 to 8 - 66%
Ranges after the compression:
 r98: [2..3]
 r99: [0..1]
 r100: [6..7]
 r101: [4..5]
 r102: [4..5]
 r103: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 16
changing reg in insn 19
changing reg in insn 19
changing reg in insn 23
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 12
changing reg in insn 10
changing reg in insn 13
changing reg in insn 11
changing reg in insn 14
deleting insn with uid = 12.
deleting insn with uid = 16.
deleting insn with uid = 19.
deleting insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.


av_ts_make_time_string

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 76 [r16] 77 [r17] 78 [r18] 79 [r19] 80 [r20] 81 [r21] 82 [r22] 83 [r23] 84 [r24] 85 [r25] 86 [r26] 87 [r27] 88 [r28] 89 [r29] 90 [r30] 91 [r31]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,8u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d,1u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} 
;;    total ref usage 130{107d,23u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [43 buf+0 S8 A64])
        (reg:DI 5 di [ buf ])) "/home/anand/ffmpeg/libavutil/timestamp.h":75:1 84 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [7 ts+0 S8 A64])
        (reg:DI 4 si [ ts ])) "/home/anand/ffmpeg/libavutil/timestamp.h":75:1 84 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [26 tb+0 S8 A64])
        (reg:DI 1 dx [ tb ])) "/home/anand/ffmpeg/libavutil/timestamp.h":75:1 84 {*movdi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [26 tb+0 S8 A64])) "/home/anand/ffmpeg/libavutil/timestamp.h":76:35 84 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 1 dx [101])
        (mem:DI (reg/f:DI 0 ax [100]) [6 MEM[(const struct AVRational &)tb_4(D)]+0 S8 A32])) "/home/anand/ffmpeg/libavutil/timestamp.h":76:35 84 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 2 cx [102])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [7 ts+0 S8 A64])) "/home/anand/ffmpeg/libavutil/timestamp.h":76:35 84 {*movdi_internal}
     (nil))
(insn 11 10 13 2 (set (reg:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [43 buf+0 S8 A64])) "/home/anand/ffmpeg/libavutil/timestamp.h":76:35 84 {*movdi_internal}
     (nil))
(insn 13 11 14 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [102])) "/home/anand/ffmpeg/libavutil/timestamp.h":76:35 84 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [103])) "/home/anand/ffmpeg/libavutil/timestamp.h":76:35 84 {*movdi_internal}
     (nil))
(call_insn 15 14 24 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_ts_make_time_string2") [flags 0x41]  <function_decl 0x75229f2cc200 av_ts_make_time_string2>) [0 av_ts_make_time_string2 S1 A8])
            (const_int 0 [0]))) "/home/anand/ffmpeg/libavutil/timestamp.h":76:35 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 24 15 26 2 (use (reg/i:DI 0 ax)) "/home/anand/ffmpeg/libavutil/timestamp.h":77:1 -1
     (nil))
(note 26 24 0 NOTE_INSN_DELETED)

;; Function output_video_frame (_ZL18output_video_frameP7AVFrame, funcdef_no=1279, decl_uid=34496, cgraph_uid=603, symbol_order=1266)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-32, prev_offset=0)
         Considering alt=2 of insn 2:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 2:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 2:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 2:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 6:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 6:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 6:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 7:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 8:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 9:   (0) rm  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
         Considering alt=2 of insn 12:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 12:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 13:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 14:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 15:   (0) rm  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 15:  (0) rm  (1) re {*cmpsi_1}
         Considering alt=2 of insn 18:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 18:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 19:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 20:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 21:   (0) rm  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 21:  (0) rm  (1) re {*cmpsi_1}
         Considering alt=2 of insn 25:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 25:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 25:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 26:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 28:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 28:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 30:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 30:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 30:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 31:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 32:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 32:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 32:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 33:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 34:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 36:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 36:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 38:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 39:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 40:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 40:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 40:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 41:   (0) =<  (1) re*m
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 41:  (0) =<  (1) re*m {*pushdi2_rex64}
         Considering alt=0 of insn 42:   (0) =X  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 42:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
         Considering alt=2 of insn 47:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 47:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 47:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 47:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
         Considering alt=0 of insn 50:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 50:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 50:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 50:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 50:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
         Considering alt=0 of insn 51:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 51:  (1) rBwBz {*call_value} (sp_off=-16)
         Considering alt=0 of insn 52:   (0) =rm  (1) %0  (2) re
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 52:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=1 of insn 52:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=2 of insn 52:   (0) r  (1) r  (2) 0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=3 of insn 52:   (0) r  (1) r  (2) le
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
      Choosing alt 0 in insn 52:  (0) =rm  (1) %0  (2) re {*adddi_1} (sp_off=-16)
         Considering alt=0 of insn 53:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 58:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 59:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
          overall=8,losers=1,rld_nregs=1
         Considering alt=1 of insn 59:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            Bad operand -- refuse
         Considering alt=2 of insn 59:   (0) r  (1) r  (2) 0
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=3 of insn 59:   (0) r  (1) r  (2) le
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 59:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=1 of insn 59:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=2 of insn 59:   (0) r  (1) r  (2) 0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=3 of insn 59:   (0) r  (1) r  (2) le
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
      Choosing alt 3 in insn 59:  (0) r  (1) r  (2) le {*addsi_1}
         Considering alt=0 of insn 60:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 60:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 60:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 62:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 62:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 62:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 62:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 64:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 64:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 64:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 64:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 64:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 65:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 65:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 66:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 67:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 68:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 69:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 69:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 69:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 70:   (0) =rm  (1) %0  (2) re
          overall=6,losers=1,rld_nregs=1
         Considering alt=1 of insn 70:   (0) r  (1) 0  (2) BM
            Bad operand -- refuse
         Considering alt=2 of insn 70:   (0) r  (1) r  (2) 0
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=3 of insn 70:   (0) r  (1) r  (2) le
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 70:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=1 of insn 70:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=2 of insn 70:   (0) r  (1) r  (2) 0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=3 of insn 70:   (0) r  (1) r  (2) le
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
      Choosing alt 3 in insn 70:  (0) r  (1) r  (2) le {*adddi_1}
         Considering alt=2 of insn 71:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 71:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 71:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 72:   (0) =rm  (1) %0  (2) re
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 72:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=1 of insn 72:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=2 of insn 72:   (0) r  (1) r  (2) 0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=3 of insn 72:   (0) r  (1) r  (2) le
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
      Choosing alt 0 in insn 72:  (0) =rm  (1) %0  (2) re {*adddi_1}
         Considering alt=0 of insn 73:   (0) =X  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 73:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
         Considering alt=2 of insn 78:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 78:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 78:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 78:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
         Considering alt=2 of insn 80:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 80:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 80:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 80:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
         Considering alt=0 of insn 82:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 82:  (0) rBwBz {*call} (sp_off=-16)
         Considering alt=0 of insn 83:   (0) =rm  (1) %0  (2) re
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 83:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=1 of insn 83:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=2 of insn 83:   (0) r  (1) r  (2) 0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=3 of insn 83:   (0) r  (1) r  (2) le
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
      Choosing alt 0 in insn 83:  (0) =rm  (1) %0  (2) re {*adddi_1} (sp_off=-16)
         Considering alt=2 of insn 84:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 84:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 84:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 85:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 86:   (0) =*a  (1) *0
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          overall=15,losers=1,rld_nregs=2
         Considering alt=1 of insn 86:   (0) r  (1) rm
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 86:  (0) r  (1) rm {*extendsidi2_rex64}
         Considering alt=2 of insn 87:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 87:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 87:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 90:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 90:  (0) r  (1) Z {*movdi_internal}
         Considering alt=0 of insn 92:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 92:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 93:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 101: point = 0, n_alt = -1
   Insn 100: point = 0, n_alt = -2
   Insn 96: point = 1, n_alt = -2
  BB 5
   Insn 103: point = 4, n_alt = -1
   Insn 53: point = 4, n_alt = 0
   Insn 52: point = 5, n_alt = 0
   Insn 51: point = 5, n_alt = 0
   Insn 50: point = 5, n_alt = 3
   Insn 49: point = 5, n_alt = -2
   Insn 48: point = 6, n_alt = -2
   Insn 47: point = 7, n_alt = 4
   Insn 46: point = 8, n_alt = -2
   Insn 45: point = 9, n_alt = -2
   Insn 44: point = 10, n_alt = -2
   Insn 43: point = 11, n_alt = -2
   Insn 42: point = 12, n_alt = 0
   Insn 41: point = 13, n_alt = 0
   Insn 40: point = 14, n_alt = 3
   Insn 39: point = 15, n_alt = 0
   Insn 38: point = 16, n_alt = 0
   Insn 37: point = 17, n_alt = -2
   Insn 36: point = 18, n_alt = 0
   Insn 35: point = 18, n_alt = -2
   Insn 34: point = 19, n_alt = 0
   Insn 33: point = 20, n_alt = 0
   Insn 32: point = 22, n_alt = 3
   Insn 31: point = 23, n_alt = 0
   Insn 30: point = 25, n_alt = 3
   Insn 29: point = 26, n_alt = -2
   Insn 28: point = 27, n_alt = 0
   Insn 27: point = 27, n_alt = -2
   Insn 26: point = 28, n_alt = 0
   Insn 25: point = 30, n_alt = 3
  BB 6
   Insn 93: point = 31, n_alt = 0
   Insn 92: point = 32, n_alt = 0
   Insn 91: point = 32, n_alt = -2
   Insn 90: point = 33, n_alt = 2
   Insn 89: point = 33, n_alt = -2
   Insn 88: point = 34, n_alt = -2
   Insn 87: point = 35, n_alt = 3
   Insn 86: point = 36, n_alt = 1
   Insn 85: point = 38, n_alt = 0
   Insn 84: point = 39, n_alt = 3
   Insn 83: point = 40, n_alt = 0
   Insn 82: point = 40, n_alt = 0
   Insn 81: point = 40, n_alt = -2
   Insn 80: point = 41, n_alt = 4
   Insn 79: point = 42, n_alt = -2
   Insn 78: point = 43, n_alt = 4
   Insn 77: point = 44, n_alt = -2
   Insn 76: point = 45, n_alt = -2
   Insn 75: point = 46, n_alt = -2
   Insn 74: point = 47, n_alt = -2
   Insn 73: point = 48, n_alt = 0
   Insn 72: point = 49, n_alt = 0
   Insn 71: point = 49, n_alt = 3
   Insn 70: point = 50, n_alt = 3
   Insn 69: point = 52, n_alt = 3
   Insn 68: point = 53, n_alt = 0
   Insn 67: point = 54, n_alt = 0
   Insn 66: point = 55, n_alt = 0
   Insn 65: point = 56, n_alt = 0
   Insn 64: point = 56, n_alt = 3
   Insn 63: point = 56, n_alt = -2
   Insn 62: point = 57, n_alt = 4
   Insn 61: point = 58, n_alt = -2
   Insn 60: point = 59, n_alt = 1
   Insn 59: point = 60, n_alt = 3
   Insn 58: point = 61, n_alt = 0
  BB 4
   Insn 22: point = 62, n_alt = -1
   Insn 21: point = 62, n_alt = 0
   Insn 20: point = 63, n_alt = 0
   Insn 19: point = 64, n_alt = 0
   Insn 18: point = 66, n_alt = 3
  BB 3
   Insn 16: point = 67, n_alt = -1
   Insn 15: point = 67, n_alt = 0
   Insn 14: point = 68, n_alt = 0
   Insn 13: point = 69, n_alt = 0
   Insn 12: point = 71, n_alt = 3
  BB 2
   Insn 10: point = 72, n_alt = -1
   Insn 9: point = 72, n_alt = 0
   Insn 8: point = 73, n_alt = 0
   Insn 7: point = 74, n_alt = 0
   Insn 6: point = 76, n_alt = 3
   Insn 2: point = 77, n_alt = 5
 r98: [72..74]
 r99: [72..73]
 r100: [67..69]
 r101: [67..68]
 r102: [62..64]
 r103: [62..63]
 r104: [27..28]
 r105: [13..26]
 r106: [12..23]
 r107: [11..20]
 r108: [18..19]
 r109: [10..17]
 r110: [9..16]
 r111: [8..15]
 r112: [5..14]
 r113: [58..61]
 r114: [59..60]
 r115: [48..55]
 r116: [47..54]
 r117: [46..53]
 r118: [45..50]
 r119: [44..49]
 r120: [34..39]
 r121: [37..38]
 r122: [33..36]
 r123: [32..35]
 r124: [31..31] [2..4]
 r125: [0..1]
 r126: [75..76]
 r127: [70..71]
 r128: [65..66]
 r129: [29..30]
 r130: [24..25]
 r131: [21..22]
 r132: [6..7]
 r133: [56..57]
 r134: [51..52]
 r135: [42..43]
 r136: [40..41]
Compressing live ranges: from 77 to 47 - 61%
Ranges after the compression:
 r98: [43..44]
 r99: [43..44]
 r100: [39..40]
 r101: [39..40]
 r102: [35..36]
 r103: [35..36]
 r104: [14..15]
 r105: [6..13]
 r106: [6..11]
 r107: [6..9]
 r108: [8..9]
 r109: [6..7]
 r110: [6..7]
 r111: [6..7]
 r112: [4..7]
 r113: [33..34]
 r114: [33..34]
 r115: [27..30]
 r116: [27..30]
 r117: [27..30]
 r118: [27..28]
 r119: [27..28]
 r120: [19..22]
 r121: [21..22]
 r122: [19..20]
 r123: [19..20]
 r124: [18..18] [2..3]
 r125: [0..1]
 r126: [45..46]
 r127: [41..42]
 r128: [37..38]
 r129: [16..17]
 r130: [12..13]
 r131: [10..11]
 r132: [4..5]
 r133: [31..32]
 r134: [29..30]
 r135: [25..26]
 r136: [23..24]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-32, prev_offset=-32)
changing reg in insn 7
changing reg in insn 9
changing reg in insn 8
changing reg in insn 9
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 21
changing reg in insn 20
changing reg in insn 21
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 41
changing reg in insn 31
changing reg in insn 42
changing reg in insn 33
changing reg in insn 43
changing reg in insn 34
changing reg in insn 35
changing reg in insn 37
changing reg in insn 44
changing reg in insn 38
changing reg in insn 45
changing reg in insn 39
changing reg in insn 46
changing reg in insn 40
changing reg in insn 49
changing reg in insn 58
changing reg in insn 61
changing reg in insn 59
changing reg in insn 59
changing reg in insn 60
changing reg in insn 66
changing reg in insn 73
changing reg in insn 67
changing reg in insn 74
changing reg in insn 68
changing reg in insn 75
changing reg in insn 70
changing reg in insn 76
changing reg in insn 71
changing reg in insn 77
changing reg in insn 84
changing reg in insn 88
changing reg in insn 85
changing reg in insn 86
changing reg in insn 86
changing reg in insn 89
changing reg in insn 87
changing reg in insn 91
changing reg in insn 93
changing reg in insn 53
changing reg in insn 96
changing reg in insn 96
changing reg in insn 100
changing reg in insn 6
changing reg in insn 7
changing reg in insn 12
changing reg in insn 13
changing reg in insn 18
changing reg in insn 19
changing reg in insn 25
changing reg in insn 26
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 47
changing reg in insn 48
changing reg in insn 62
changing reg in insn 63
changing reg in insn 69
changing reg in insn 70
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
deleting insn with uid = 45.
deleting insn with uid = 46.
deleting insn with uid = 48.
deleting insn with uid = 88.
deleting insn with uid = 89.
deleting insn with uid = 96.
deleting insn with uid = 100.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 92.


output_video_frame

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 76 [r16] 77 [r17] 78 [r18] 79 [r19] 80 [r20] 81 [r21] 82 [r22] 83 [r23] 84 [r24] 85 [r25] 86 [r26] 87 [r27] 88 [r28] 89 [r29] 90 [r30] 91 [r31]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9] 40 [r12] 41 [r13]
;;  ref usage 	r0={31d,27u} r1={15d,8u} r2={11d,4u} r3={1d,1u} r4={13d,6u} r5={14d,8u} r6={1d,16u} r7={7d,24u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={14d,3u} r18={6d} r19={1d,1u,1e} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={9d,2u} r37={9d,2u} r38={6d} r39={6d} r40={1d,1u} r41={1d,1u} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} 
;;    total ref usage 691{586d,104u,1e} in 78{72 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])
        (reg:DI 5 di [ frame ])) "/home/anand/Decode/decode.cpp":71:2 84 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":72:17 84 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 1 dx [orig:98 _1 ] [98])
        (mem:SI (plus:DI (reg/f:DI 0 ax [126])
                (const_int 104 [0x68])) [1 frame_31(D)->width+0 S4 A64])) "/home/anand/Decode/decode.cpp":72:17 85 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 ax [orig:99 width.0_2 ] [99])
        (mem/c:SI (symbol_ref:DI ("_ZL5width") [flags 0x2]  <var_decl 0x75229f5dbea0 width>) [1 width+0 S4 A32])) "/home/anand/Decode/decode.cpp":72:23 85 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:98 _1 ] [98])
            (reg:SI 0 ax [orig:99 width.0_2 ] [99]))) "/home/anand/Decode/decode.cpp":72:6 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "/home/anand/Decode/decode.cpp":72:6 1130 {*jcc}
     (nil)
 -> 23)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:DI 0 ax [127])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":72:42 discrim 1 84 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:SI 1 dx [orig:100 _3 ] [100])
        (mem:SI (plus:DI (reg/f:DI 0 ax [127])
                (const_int 108 [0x6c])) [1 frame_31(D)->height+0 S4 A32])) "/home/anand/Decode/decode.cpp":72:42 discrim 1 85 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 0 ax [orig:101 height.1_4 ] [101])
        (mem/c:SI (symbol_ref:DI ("_ZL6height") [flags 0x2]  <var_decl 0x75229f5dbf30 height>) [1 height+0 S4 A32])) "/home/anand/Decode/decode.cpp":72:49 discrim 1 85 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:100 _3 ] [100])
            (reg:SI 0 ax [orig:101 height.1_4 ] [101]))) "/home/anand/Decode/decode.cpp":72:32 discrim 1 11 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "/home/anand/Decode/decode.cpp":72:32 discrim 1 1130 {*jcc}
     (nil)
 -> 23)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:DI 0 ax [128])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":73:17 84 {*movdi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:SI 1 dx [orig:102 _5 ] [102])
        (mem:SI (plus:DI (reg/f:DI 0 ax [128])
                (const_int 116 [0x74])) [1 frame_31(D)->format+0 S4 A32])) "/home/anand/Decode/decode.cpp":73:17 85 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:SI 0 ax [orig:103 pix_fmt.2_6 ] [103])
        (mem/c:SI (symbol_ref:DI ("_ZL7pix_fmt") [flags 0x2]  <var_decl 0x75229f05e000 pix_fmt>) [22 pix_fmt+0 S4 A32])) "/home/anand/Decode/decode.cpp":73:27 85 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:102 _5 ] [102])
            (reg:SI 0 ax [orig:103 pix_fmt.2_6 ] [103]))) "/home/anand/Decode/decode.cpp":72:59 discrim 2 11 {*cmpsi_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "/home/anand/Decode/decode.cpp":72:59 discrim 2 1130 {*jcc}
     (nil)
 -> 56)
(code_label 23 22 24 5 7 (nil) [2 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:DI 0 ax [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":83:60 84 {*movdi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:SI 0 ax [orig:104 _7 ] [104])
        (mem:SI (plus:DI (reg/f:DI 0 ax [129])
                (const_int 116 [0x74])) [1 frame_31(D)->format+0 S4 A32])) "/home/anand/Decode/decode.cpp":83:60 85 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:104 _7 ] [104])) "/home/anand/Decode/decode.cpp":76:17 85 {*movsi_internal}
     (nil))
(call_insn 28 27 29 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_get_pix_fmt_name") [flags 0x41]  <function_decl 0x7522a0d30900 av_get_pix_fmt_name>) [0 av_get_pix_fmt_name S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":76:17 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 29 28 30 5 (set (reg/f:DI 3 bx [orig:105 _8 ] [105])
        (reg:DI 0 ax)) "/home/anand/Decode/decode.cpp":76:17 84 {*movdi_internal}
     (nil))
(insn 30 29 31 5 (set (reg/f:DI 0 ax [130])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":76:17 discrim 1 84 {*movdi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:SI 40 r12 [orig:106 _9 ] [106])
        (mem:SI (plus:DI (reg/f:DI 0 ax [130])
                (const_int 108 [0x6c])) [1 frame_31(D)->height+0 S4 A32])) "/home/anand/Decode/decode.cpp":76:17 discrim 1 85 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 0 ax [131])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":76:17 discrim 1 84 {*movdi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:SI 41 r13 [orig:107 _10 ] [107])
        (mem:SI (plus:DI (reg/f:DI 0 ax [131])
                (const_int 104 [0x68])) [1 frame_31(D)->width+0 S4 A64])) "/home/anand/Decode/decode.cpp":76:17 discrim 1 85 {*movsi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:SI 0 ax [orig:108 pix_fmt.3_11 ] [108])
        (mem/c:SI (symbol_ref:DI ("_ZL7pix_fmt") [flags 0x2]  <var_decl 0x75229f05e000 pix_fmt>) [22 pix_fmt+0 S4 A32])) "/home/anand/Decode/decode.cpp":76:17 discrim 1 85 {*movsi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:108 pix_fmt.3_11 ] [108])) "/home/anand/Decode/decode.cpp":76:17 discrim 1 85 {*movsi_internal}
     (nil))
(call_insn 36 35 37 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_get_pix_fmt_name") [flags 0x41]  <function_decl 0x7522a0d30900 av_get_pix_fmt_name>) [0 av_get_pix_fmt_name S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":76:17 discrim 1 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 37 36 38 5 (set (reg/f:DI 4 si [orig:109 _12 ] [109])
        (reg:DI 0 ax)) "/home/anand/Decode/decode.cpp":76:17 discrim 1 84 {*movdi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:SI 2 cx [orig:110 height.4_13 ] [110])
        (mem/c:SI (symbol_ref:DI ("_ZL6height") [flags 0x2]  <var_decl 0x75229f5dbf30 height>) [1 height+0 S4 A32])) "/home/anand/Decode/decode.cpp":76:17 discrim 2 85 {*movsi_internal}
     (nil))
(insn 39 38 40 5 (set (reg:SI 1 dx [orig:111 width.5_14 ] [111])
        (mem/c:SI (symbol_ref:DI ("_ZL5width") [flags 0x2]  <var_decl 0x75229f5dbea0 width>) [1 width+0 S4 A32])) "/home/anand/Decode/decode.cpp":76:17 discrim 2 85 {*movsi_internal}
     (nil))
(insn 40 39 41 5 (set (reg/f:DI 0 ax [orig:112 stderr.6_15 ] [112])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":76:17 discrim 2 84 {*movdi_internal}
     (nil))
(insn 41 40 42 5 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [43  S8 A64])
        (reg/f:DI 3 bx [orig:105 _8 ] [105])) "/home/anand/Decode/decode.cpp":76:17 discrim 2 58 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 42 41 43 5 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [1  S4 A32])
        (reg:SI 40 r12 [orig:106 _9 ] [106])) "/home/anand/Decode/decode.cpp":76:17 discrim 2 59 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 43 42 44 5 (set (reg:SI 37 r9)
        (reg:SI 41 r13 [orig:107 _10 ] [107])) "/home/anand/Decode/decode.cpp":76:17 discrim 2 85 {*movsi_internal}
     (nil))
(insn 44 43 47 5 (set (reg:DI 36 r8)
        (reg/f:DI 4 si [orig:109 _12 ] [109])) "/home/anand/Decode/decode.cpp":76:17 discrim 2 84 {*movdi_internal}
     (nil))
(insn 47 44 49 5 (set (reg:DI 4 si [132])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x75229efef990 *.LC0>)) "/home/anand/Decode/decode.cpp":76:17 discrim 2 84 {*movdi_internal}
     (nil))
(insn 49 47 50 5 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:112 stderr.6_15 ] [112])) "/home/anand/Decode/decode.cpp":76:17 discrim 2 84 {*movdi_internal}
     (nil))
(insn 50 49 51 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":76:17 discrim 2 87 {*movqi_internal}
     (nil))
(call_insn 51 50 52 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 16 [0x10]))) "/home/anand/Decode/decode.cpp":76:17 discrim 2 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:DI (use (reg:DI 36 r8))
                            (expr_list:SI (use (reg:SI 37 r9))
                                (nil)))))))))
(insn 52 51 53 5 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":76:17 discrim 2 272 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 53 52 103 5 (set (reg:SI 0 ax [orig:124 _28 ] [124])
        (const_int -1 [0xffffffffffffffff])) "/home/anand/Decode/decode.cpp":84:18 85 {*movsi_internal}
     (nil))
(jump_insn 103 53 104 5 (set (pc)
        (label_ref 94)) "/home/anand/Decode/decode.cpp":84:18 1131 {jump}
     (nil)
 -> 94)
(barrier 104 103 56)
(code_label 56 104 57 6 8 (nil) [1 uses])
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (set (reg:SI 0 ax [orig:113 video_frame_count.7_16 ] [113])
        (mem/c:SI (symbol_ref:DI ("_ZL17video_frame_count") [flags 0x2]  <var_decl 0x75229f05e870 video_frame_count>) [1 video_frame_count+0 S4 A32])) "/home/anand/Decode/decode.cpp":87:12 85 {*movsi_internal}
     (nil))
(insn 59 58 60 6 (parallel [
            (set (reg:SI 1 dx [orig:114 _18 ] [114])
                (plus:SI (reg:SI 0 ax [orig:113 video_frame_count.7_16 ] [113])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":87:12 271 {*addsi_1}
     (nil))
(insn 60 59 61 6 (set (mem/c:SI (symbol_ref:DI ("_ZL17video_frame_count") [flags 0x2]  <var_decl 0x75229f05e870 video_frame_count>) [1 video_frame_count+0 S4 A32])
        (reg:SI 1 dx [orig:114 _18 ] [114])) "/home/anand/Decode/decode.cpp":87:12 85 {*movsi_internal}
     (nil))
(insn 61 60 62 6 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:113 video_frame_count.7_16 ] [113])) "/home/anand/Decode/decode.cpp":87:12 85 {*movsi_internal}
     (nil))
(insn 62 61 63 6 (set (reg:DI 0 ax [133])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x75229efefa20 *.LC1>)) "/home/anand/Decode/decode.cpp":87:12 84 {*movdi_internal}
     (nil))
(insn 63 62 64 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [133])) "/home/anand/Decode/decode.cpp":87:12 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x75229efefa20 *.LC1>)
        (nil)))
(insn 64 63 65 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":87:12 87 {*movqi_internal}
     (nil))
(call_insn 65 64 66 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7522a1326600 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":87:12 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 66 65 67 6 (set (reg:SI 2 cx [orig:115 height.9_19 ] [115])
        (mem/c:SI (symbol_ref:DI ("_ZL6height") [flags 0x2]  <var_decl 0x75229f5dbf30 height>) [1 height+0 S4 A32])) "/home/anand/Decode/decode.cpp":92:20 85 {*movsi_internal}
     (nil))
(insn 67 66 68 6 (set (reg:SI 5 di [orig:116 width.10_20 ] [116])
        (mem/c:SI (symbol_ref:DI ("_ZL5width") [flags 0x2]  <var_decl 0x75229f5dbea0 width>) [1 width+0 S4 A32])) "/home/anand/Decode/decode.cpp":92:20 85 {*movsi_internal}
     (nil))
(insn 68 67 69 6 (set (reg:SI 4 si [orig:117 pix_fmt.11_21 ] [117])
        (mem/c:SI (symbol_ref:DI ("_ZL7pix_fmt") [flags 0x2]  <var_decl 0x75229f05e000 pix_fmt>) [22 pix_fmt+0 S4 A32])) "/home/anand/Decode/decode.cpp":92:20 85 {*movsi_internal}
     (nil))
(insn 69 68 70 6 (set (reg/f:DI 0 ax [134])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":93:41 84 {*movdi_internal}
     (nil))
(insn 70 69 71 6 (parallel [
            (set (reg/f:DI 1 dx [orig:118 _22 ] [118])
                (plus:DI (reg/f:DI 0 ax [134])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":93:41 272 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [27 frame+0 S8 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 71 70 72 6 (set (reg/f:DI 0 ax [orig:119 _23 ] [119])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":93:28 84 {*movdi_internal}
     (nil))
(insn 72 71 73 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":92:20 272 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 73 72 74 6 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [1  S4 A32])
        (reg:SI 2 cx [orig:115 height.9_19 ] [115])) "/home/anand/Decode/decode.cpp":92:20 59 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 74 73 75 6 (set (reg:SI 37 r9)
        (reg:SI 5 di [orig:116 width.10_20 ] [116])) "/home/anand/Decode/decode.cpp":92:20 85 {*movsi_internal}
     (nil))
(insn 75 74 76 6 (set (reg:SI 36 r8)
        (reg:SI 4 si [orig:117 pix_fmt.11_21 ] [117])) "/home/anand/Decode/decode.cpp":92:20 85 {*movsi_internal}
     (nil))
(insn 76 75 77 6 (set (reg:DI 2 cx)
        (reg/f:DI 1 dx [orig:118 _22 ] [118])) "/home/anand/Decode/decode.cpp":92:20 84 {*movdi_internal}
     (nil))
(insn 77 76 78 6 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:119 _23 ] [119])) "/home/anand/Decode/decode.cpp":92:20 84 {*movdi_internal}
     (nil))
(insn 78 77 79 6 (set (reg:DI 0 ax [135])
        (symbol_ref:DI ("_ZL18video_dst_linesize") [flags 0x2]  <var_decl 0x75229f05e510 video_dst_linesize>)) "/home/anand/Decode/decode.cpp":92:20 84 {*movdi_internal}
     (nil))
(insn 79 78 80 6 (set (reg:DI 4 si)
        (reg:DI 0 ax [135])) "/home/anand/Decode/decode.cpp":92:20 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL18video_dst_linesize") [flags 0x2]  <var_decl 0x75229f05e510 video_dst_linesize>)
        (nil)))
(insn 80 79 81 6 (set (reg:DI 0 ax [136])
        (symbol_ref:DI ("_ZL14video_dst_data") [flags 0x2]  <var_decl 0x75229f05e480 video_dst_data>)) "/home/anand/Decode/decode.cpp":92:20 84 {*movdi_internal}
     (nil))
(insn 81 80 82 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [136])) "/home/anand/Decode/decode.cpp":92:20 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL14video_dst_data") [flags 0x2]  <var_decl 0x75229f05e480 video_dst_data>)
        (nil)))
(call_insn 82 81 83 6 (call (mem:QI (symbol_ref:DI ("av_image_copy2") [flags 0x3]  <function_decl 0x7522a0d49d00 av_image_copy2>) [0 av_image_copy2 S1 A8])
        (const_int 16 [0x10])) "/home/anand/Decode/decode.cpp":92:20 1137 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 83 82 84 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":92:20 272 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 84 83 85 6 (set (reg/f:DI 2 cx [orig:120 video_dst_file.12_24 ] [120])
        (mem/f/c:DI (symbol_ref:DI ("_ZL14video_dst_file") [flags 0x2]  <var_decl 0x75229f05e360 video_dst_file>) [24 video_dst_file+0 S8 A64])) "/home/anand/Decode/decode.cpp":97:12 84 {*movdi_internal}
     (nil))
(insn 85 84 86 6 (set (reg:SI 0 ax [orig:121 video_dst_bufsize.13_25 ] [121])
        (mem/c:SI (symbol_ref:DI ("_ZL17video_dst_bufsize") [flags 0x2]  <var_decl 0x75229f05e5a0 video_dst_bufsize>) [1 video_dst_bufsize+0 S4 A32])) "/home/anand/Decode/decode.cpp":97:12 85 {*movsi_internal}
     (nil))
(insn 86 85 87 6 (set (reg:DI 1 dx [orig:122 _26 ] [122])
        (sign_extend:DI (reg:SI 0 ax [orig:121 video_dst_bufsize.13_25 ] [121]))) "/home/anand/Decode/decode.cpp":97:12 173 {*extendsidi2_rex64}
     (nil))
(insn 87 86 90 6 (set (reg/f:DI 0 ax [orig:123 _27 ] [123])
        (mem/f/c:DI (symbol_ref:DI ("_ZL14video_dst_data") [flags 0x2]  <var_decl 0x75229f05e480 video_dst_data>) [3 video_dst_data[0]+0 S8 A256])) "/home/anand/Decode/decode.cpp":97:29 84 {*movdi_internal}
     (nil))
(insn 90 87 91 6 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":97:12 84 {*movdi_internal}
     (nil))
(insn 91 90 92 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:123 _27 ] [123])) "/home/anand/Decode/decode.cpp":97:12 84 {*movdi_internal}
     (nil))
(call_insn 92 91 93 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7522a1326000 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":97:12 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 93 92 94 6 (set (reg:SI 0 ax [orig:124 _28 ] [124])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":98:13 85 {*movsi_internal}
     (nil))
(code_label 94 93 95 7 9 (nil) [1 uses])
(note 95 94 101 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 101 95 105 7 (use (reg/i:SI 0 ax)) "/home/anand/Decode/decode.cpp":99:2 -1
     (nil))
(note 105 101 0 NOTE_INSN_DELETED)

;; Function output_audio_frame (_ZL18output_audio_frameP7AVFrame, funcdef_no=1280, decl_uid=34529, cgraph_uid=604, symbol_order=1267)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-16, prev_offset=0)
         Considering alt=2 of insn 2:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 2:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 2:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 2:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 6:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 6:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 6:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 7:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 8:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 8:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 9:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 11:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 11:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 13:   (0) =r  (1) %rm  (2) K
            Bad operand -- refuse
         Considering alt=1 of insn 13:   (0) r  (1) rm  (2) e
            Bad operand -- refuse
         Considering alt=2 of insn 13:   (0) r  (1) 0  (2) BMr
          overall=6,losers=1,rld_nregs=1
         Considering alt=0 of insn 13:   (0) =r  (1) %rm  (2) K
            Bad operand -- refuse
         Considering alt=1 of insn 13:   (0) r  (1) rm  (2) e
            Bad operand -- refuse
         Considering alt=2 of insn 13:   (0) r  (1) 0  (2) BMr
          overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 13
      Choosing alt 2 in insn 13:  (0) r  (1) 0  (2) BMr {*mulsi3_1}
         Considering alt=0 of insn 14:   (0) =*a  (1) *0
            0 Costly set: reject++
          overall=1,losers=0,rld_nregs=0
      Choosing alt 0 in insn 14:  (0) =*a  (1) *0 {*extendsidi2_rex64}
         Considering alt=2 of insn 15:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 15:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 15:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 15:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 15:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 16:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 16:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 17:   (0) =rm  (1) %0  (2) re
          overall=6,losers=1,rld_nregs=1
         Considering alt=1 of insn 17:   (0) r  (1) 0  (2) BM
            Bad operand -- refuse
         Considering alt=2 of insn 17:   (0) r  (1) r  (2) 0
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=3 of insn 17:   (0) r  (1) r  (2) le
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 17:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=1 of insn 17:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=2 of insn 17:   (0) r  (1) r  (2) 0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=3 of insn 17:   (0) r  (1) r  (2) le
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
      Choosing alt 3 in insn 17:  (0) r  (1) r  (2) le {*adddi_1}
         Considering alt=2 of insn 18:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 18:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 19:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 19:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 22:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 22:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 22:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 22:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 24:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 24:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 26:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 26:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 26:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 27:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 28:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 29:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
          overall=8,losers=1,rld_nregs=1
         Considering alt=1 of insn 29:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            Bad operand -- refuse
         Considering alt=2 of insn 29:   (0) r  (1) r  (2) 0
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=3 of insn 29:   (0) r  (1) r  (2) le
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 29:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=1 of insn 29:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=2 of insn 29:   (0) r  (1) r  (2) 0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=3 of insn 29:   (0) r  (1) r  (2) le
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
      Choosing alt 3 in insn 29:  (0) r  (1) r  (2) le {*addsi_1}
         Considering alt=0 of insn 30:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 30:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 30:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 34:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 34:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 34:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 34:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 36:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 36:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 36:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 36:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 36:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 37:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 37:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 38:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 38:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 38:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 39:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 39:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 39:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 40:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 40:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 40:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 41:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 41:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 41:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 42:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 42:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 45:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 45:  (0) r  (1) Z {*movdi_internal}
         Considering alt=0 of insn 47:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 47:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 48:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 56: point = 0, n_alt = -1
   Insn 55: point = 0, n_alt = -2
   Insn 51: point = 1, n_alt = -2
   Insn 48: point = 3, n_alt = 0
   Insn 47: point = 4, n_alt = 0
   Insn 46: point = 4, n_alt = -2
   Insn 45: point = 5, n_alt = 2
   Insn 44: point = 5, n_alt = -2
   Insn 43: point = 6, n_alt = -2
   Insn 42: point = 7, n_alt = 3
   Insn 41: point = 8, n_alt = 3
   Insn 40: point = 10, n_alt = 3
   Insn 39: point = 12, n_alt = 3
   Insn 38: point = 13, n_alt = 3
   Insn 37: point = 14, n_alt = 0
   Insn 36: point = 14, n_alt = 3
   Insn 35: point = 14, n_alt = -2
   Insn 34: point = 15, n_alt = 4
   Insn 33: point = 16, n_alt = -2
   Insn 32: point = 17, n_alt = -2
   Insn 31: point = 18, n_alt = -2
   Insn 30: point = 19, n_alt = 1
   Insn 29: point = 20, n_alt = 3
   Insn 28: point = 21, n_alt = 0
   Insn 27: point = 22, n_alt = 0
   Insn 26: point = 24, n_alt = 3
   Insn 25: point = 25, n_alt = -2
   Insn 24: point = 26, n_alt = 0
   Insn 23: point = 26, n_alt = -2
   Insn 22: point = 27, n_alt = 4
   Insn 21: point = 28, n_alt = -2
   Insn 20: point = 29, n_alt = -2
   Insn 19: point = 30, n_alt = 3
   Insn 18: point = 32, n_alt = 3
   Insn 17: point = 33, n_alt = 3
   Insn 16: point = 35, n_alt = 3
   Insn 15: point = 36, n_alt = 5
   Insn 14: point = 37, n_alt = 0
   Insn 13: point = 39, n_alt = 2
   Insn 12: point = 41, n_alt = -2
   Insn 11: point = 42, n_alt = 0
   Insn 10: point = 42, n_alt = -2
   Insn 9: point = 43, n_alt = 0
   Insn 8: point = 45, n_alt = 3
   Insn 7: point = 46, n_alt = 0
   Insn 6: point = 48, n_alt = 3
   Insn 2: point = 49, n_alt = 5
 r98: [40..46]
 r99: [42..43]
 r100: [40..41]
 r101: [38..39]
 r102: [34..35]
 r103: [29..33]
 r104: [28..30]
 r105: [18..25]
 r106: [17..22]
 r107: [16..21]
 r108: [19..20]
 r109: [6..13]
 r110: [9..10]
 r111: [4..8]
 r112: [2..3]
 r113: [0..1]
 r114: [47..48]
 r115: [44..45]
 r116: [36..37]
 r117: [31..32]
 r118: [26..27]
 r119: [23..24]
 r120: [14..15]
 r121: [11..12]
 r122: [5..7]
Compressing live ranges: from 49 to 36 - 73%
Ranges after the compression:
 r98: [28..33]
 r99: [30..31]
 r100: [28..29]
 r101: [26..27]
 r102: [22..23]
 r103: [18..21]
 r104: [18..19]
 r105: [12..15]
 r106: [12..13]
 r107: [12..13]
 r108: [12..13]
 r109: [4..9]
 r110: [6..7]
 r111: [4..5]
 r112: [2..3]
 r113: [0..1]
 r114: [34..35]
 r115: [32..33]
 r116: [24..25]
 r117: [20..21]
 r118: [16..17]
 r119: [14..15]
 r120: [10..11]
 r121: [8..9]
 r122: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 7
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 20
changing reg in insn 19
changing reg in insn 21
changing reg in insn 25
changing reg in insn 31
changing reg in insn 27
changing reg in insn 32
changing reg in insn 28
changing reg in insn 33
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 38
changing reg in insn 43
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 46
changing reg in insn 48
changing reg in insn 51
changing reg in insn 51
changing reg in insn 55
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 14
changing reg in insn 15
changing reg in insn 18
changing reg in insn 19
changing reg in insn 22
changing reg in insn 23
changing reg in insn 26
changing reg in insn 27
changing reg in insn 34
changing reg in insn 35
changing reg in insn 39
changing reg in insn 40
changing reg in insn 42
changing reg in insn 44
deleting insn with uid = 12.
deleting insn with uid = 20.
deleting insn with uid = 32.
deleting insn with uid = 43.
deleting insn with uid = 44.
deleting insn with uid = 51.
deleting insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 47.


output_audio_frame

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 76 [r16] 77 [r17] 78 [r18] 79 [r19] 80 [r20] 81 [r21] 82 [r22] 83 [r23] 84 [r24] 85 [r25] 86 [r26] 87 [r27] 88 [r28] 89 [r29] 90 [r30] 91 [r31]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={22d,21u} r1={8d,3u} r2={8d,3u} r3={1d,1u} r4={9d,4u} r5={9d,5u} r6={1d,10u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={7d} r18={4d} r19={1d,1u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} 
;;    total ref usage 439{385d,54u,0e} in 40{36 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])
        (reg:DI 5 di [ frame ])) "/home/anand/Decode/decode.cpp":102:2 84 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":103:40 84 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 bx [orig:98 _1 ] [98])
        (mem:SI (plus:DI (reg/f:DI 0 ax [114])
                (const_int 112 [0x70])) [1 frame_17(D)->nb_samples+0 S4 A64])) "/home/anand/Decode/decode.cpp":103:40 85 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":103:100 84 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:99 _2 ] [99])
        (mem:SI (plus:DI (reg/f:DI 0 ax [115])
                (const_int 116 [0x74])) [1 frame_17(D)->format+0 S4 A32])) "/home/anand/Decode/decode.cpp":103:100 85 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:99 _2 ] [99])) "/home/anand/Decode/decode.cpp":103:76 85 {*movsi_internal}
     (nil))
(call_insn 11 10 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_get_bytes_per_sample") [flags 0x41]  <function_decl 0x7522a0d55e00 av_get_bytes_per_sample>) [0 av_get_bytes_per_sample S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":103:76 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 13 11 14 2 (parallel [
            (set (reg:SI 0 ax [orig:101 _4 ] [101])
                (mult:SI (reg:SI 0 ax [orig:100 _3 ] [100])
                    (reg:SI 3 bx [orig:98 _1 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":103:51 discrim 1 520 {*mulsi3_1}
     (nil))
(insn 14 13 15 2 (set (reg:DI 0 ax [116])
        (sign_extend:DI (reg:SI 0 ax [orig:101 _4 ] [101]))) "/home/anand/Decode/decode.cpp":103:106 discrim 1 173 {*extendsidi2_rex64}
     (nil))
(insn 15 14 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 unpadded_linesize+0 S8 A64])
        (reg:DI 0 ax [116])) "/home/anand/Decode/decode.cpp":103:106 discrim 1 84 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [orig:102 audio_dec_ctx.14_5 ] [102])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13audio_dec_ctx") [flags 0x2]  <var_decl 0x75229f5dbd80 audio_dec_ctx>) [25 audio_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":106:13 84 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 1 dx [orig:103 _6 ] [103])
                (plus:DI (reg/f:DI 0 ax [orig:102 audio_dec_ctx.14_5 ] [102])
                    (const_int 84 [0x54])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":106:13 272 {*adddi_1}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 0 ax [117])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":104:12 84 {*movdi_internal}
     (nil))
(insn 19 18 21 2 (set (reg:DI 0 ax [orig:104 _7 ] [104])
        (mem:DI (plus:DI (reg/f:DI 0 ax [117])
                (const_int 136 [0x88])) [7 frame_17(D)->pts+0 S8 A64])) "/home/anand/Decode/decode.cpp":104:12 84 {*movdi_internal}
     (nil))
(insn 21 19 22 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [orig:104 _7 ] [104])) "/home/anand/Decode/decode.cpp":104:12 84 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 0 ax [118])
        (symbol_ref:DI ("_ZL6ts_str") [flags 0x2]  <var_decl 0x75229f05e990 ts_str>)) "/home/anand/Decode/decode.cpp":104:12 84 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [118])) "/home/anand/Decode/decode.cpp":104:12 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL6ts_str") [flags 0x2]  <var_decl 0x75229f05e990 ts_str>)
        (nil)))
(call_insn 24 23 25 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_ts_make_time_string") [flags 0x3]  <function_decl 0x75229f2cc300 av_ts_make_time_string>) [0 av_ts_make_time_string S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":104:12 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 25 24 26 2 (set (reg/f:DI 4 si [orig:105 _8 ] [105])
        (reg:DI 0 ax)) "/home/anand/Decode/decode.cpp":104:12 84 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg/f:DI 0 ax [119])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":104:12 discrim 1 84 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 1 dx [orig:106 _9 ] [106])
        (mem:SI (plus:DI (reg/f:DI 0 ax [119])
                (const_int 112 [0x70])) [1 frame_17(D)->nb_samples+0 S4 A64])) "/home/anand/Decode/decode.cpp":104:12 discrim 1 85 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:SI 0 ax [orig:107 audio_frame_count.15_10 ] [107])
        (mem/c:SI (symbol_ref:DI ("_ZL17audio_frame_count") [flags 0x2]  <var_decl 0x75229f05e900 audio_frame_count>) [1 audio_frame_count+0 S4 A32])) "/home/anand/Decode/decode.cpp":104:12 discrim 1 85 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg:SI 2 cx [orig:108 _12 ] [108])
                (plus:SI (reg:SI 0 ax [orig:107 audio_frame_count.15_10 ] [107])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":104:12 discrim 1 271 {*addsi_1}
     (nil))
(insn 30 29 31 2 (set (mem/c:SI (symbol_ref:DI ("_ZL17audio_frame_count") [flags 0x2]  <var_decl 0x75229f05e900 audio_frame_count>) [1 audio_frame_count+0 S4 A32])
        (reg:SI 2 cx [orig:108 _12 ] [108])) "/home/anand/Decode/decode.cpp":104:12 discrim 1 85 {*movsi_internal}
     (nil))
(insn 31 30 33 2 (set (reg:DI 2 cx)
        (reg/f:DI 4 si [orig:105 _8 ] [105])) "/home/anand/Decode/decode.cpp":104:12 discrim 1 84 {*movdi_internal}
     (nil))
(insn 33 31 34 2 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:107 audio_frame_count.15_10 ] [107])) "/home/anand/Decode/decode.cpp":104:12 discrim 1 85 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:DI 0 ax [120])
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x75229efff120 *.LC2>)) "/home/anand/Decode/decode.cpp":104:12 discrim 1 84 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [120])) "/home/anand/Decode/decode.cpp":104:12 discrim 1 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x75229efff120 *.LC2>)
        (nil)))
(insn 36 35 37 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":104:12 discrim 1 87 {*movqi_internal}
     (nil))
(call_insn 37 36 38 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7522a1326600 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":104:12 discrim 1 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 38 37 39 2 (set (reg/f:DI 2 cx [orig:109 audio_dst_file.17_13 ] [109])
        (mem/f/c:DI (symbol_ref:DI ("_ZL14audio_dst_file") [flags 0x2]  <var_decl 0x75229f05e3f0 audio_dst_file>) [24 audio_dst_file+0 S8 A64])) "/home/anand/Decode/decode.cpp":116:12 84 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg/f:DI 0 ax [121])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":116:20 84 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg/f:DI 0 ax [orig:110 _14 ] [110])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [121])
                (const_int 96 [0x60])) [4 frame_17(D)->extended_data+0 S8 A64])) "/home/anand/Decode/decode.cpp":116:20 84 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg/f:DI 0 ax [orig:111 _15 ] [111])
        (mem/f:DI (reg/f:DI 0 ax [orig:110 _14 ] [110]) [3 *_14+0 S8 A64])) "/home/anand/Decode/decode.cpp":116:12 84 {*movdi_internal}
     (nil))
(insn 42 41 45 2 (set (reg:DI 1 dx [122])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 unpadded_linesize+0 S8 A64])) "/home/anand/Decode/decode.cpp":116:12 84 {*movdi_internal}
     (nil))
(insn 45 42 46 2 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":116:12 84 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:111 _15 ] [111])) "/home/anand/Decode/decode.cpp":116:12 84 {*movdi_internal}
     (nil))
(call_insn 47 46 48 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7522a1326000 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":116:12 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 48 47 56 2 (set (reg:SI 0 ax [orig:112 _26 ] [112])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":118:13 85 {*movsi_internal}
     (nil))
(insn 56 48 58 2 (use (reg/i:SI 0 ax)) "/home/anand/Decode/decode.cpp":119:2 -1
     (nil))
(note 58 56 0 NOTE_INSN_DELETED)

;; Function decode_packet (_ZL13decode_packetP14AVCodecContextPK8AVPacket, funcdef_no=1281, decl_uid=34534, cgraph_uid=605, symbol_order=1268)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
         Considering alt=2 of insn 2:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 2:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 2:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 2:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 3:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 3:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 3:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 3:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 7:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 7:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 8:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 8:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 9:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 9:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 12:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 12:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 14:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 14:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 17:   (0) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 17:   (0) ?mr
            Staticly defined alt reject+=6
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 17:  (0) ?mr {*cmpsi_ccno_1}
         Considering alt=0 of insn 20:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 22:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 22:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 23:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 23:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 23:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 23:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 25:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 25:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 27:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 27:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 29:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 29:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 29:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 29:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 32:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 32:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 32:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 32:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 32:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 33:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 33:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 34:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 42:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 42:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 43:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 43:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 43:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 46:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 46:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 48:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 48:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 48:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 51:   (0) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 51:   (0) ?mr
            Staticly defined alt reject+=6
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 51:  (0) ?mr {*cmpsi_ccno_1}
         Considering alt=0 of insn 54:   (0) rm  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 54:  (0) rm  (1) re {*cmpsi_1}
         Considering alt=0 of insn 57:   (0) rm  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 57:  (0) rm  (1) re {*cmpsi_1}
         Considering alt=0 of insn 61:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 66:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 68:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 68:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 69:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 69:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 69:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 69:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 71:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 71:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 73:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 73:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 73:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 75:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 75:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 75:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 75:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 78:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 78:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 78:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 78:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 78:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 79:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 79:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 80:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 85:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 85:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 85:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 86:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 86:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 86:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 87:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 88:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 88:  (0) r {*cmpsi_ccno_1}
         Considering alt=2 of insn 91:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 91:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 91:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 93:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 93:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 95:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 95:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 95:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 100:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 100:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 100:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 102:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 102:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 104:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 104:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 104:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 107:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 107:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 107:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 109:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 109:  (0) rBwBz {*call}
         Considering alt=0 of insn 115:   (0) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 115:   (0) ?mr
            Staticly defined alt reject+=6
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 115:  (0) ?mr {*cmpsi_ccno_1}
         Considering alt=0 of insn 118:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6 7
EBB 8
EBB 9
EBB 10 11
EBB 12
EBB 13
EBB 14 15
EBB 16

********** Pseudo live ranges #1: **********

  BB 16
   Insn 126: point = 0, n_alt = -1
   Insn 125: point = 0, n_alt = -2
   Insn 121: point = 1, n_alt = -2
  BB 9
   Insn 134: point = 4, n_alt = -1
   Insn 80: point = 4, n_alt = 0
   Insn 79: point = 5, n_alt = 0
   Insn 78: point = 5, n_alt = 3
   Insn 77: point = 5, n_alt = -2
   Insn 76: point = 6, n_alt = -2
   Insn 75: point = 7, n_alt = 4
   Insn 74: point = 8, n_alt = -2
   Insn 73: point = 9, n_alt = 3
   Insn 72: point = 10, n_alt = -2
   Insn 71: point = 11, n_alt = 0
   Insn 70: point = 11, n_alt = -2
   Insn 69: point = 12, n_alt = 4
   Insn 68: point = 13, n_alt = 2
   Insn 67: point = 13, n_alt = -2
   Insn 66: point = 14, n_alt = 0
  BB 8
   Insn 132: point = 15, n_alt = -1
   Insn 61: point = 15, n_alt = 0
  BB 7
   Insn 58: point = 16, n_alt = -1
   Insn 57: point = 16, n_alt = 0
  BB 6
   Insn 55: point = 16, n_alt = -1
   Insn 54: point = 16, n_alt = 0
  BB 3
   Insn 128: point = 16, n_alt = -1
   Insn 34: point = 16, n_alt = 0
   Insn 33: point = 17, n_alt = 0
   Insn 32: point = 17, n_alt = 3
   Insn 31: point = 17, n_alt = -2
   Insn 30: point = 18, n_alt = -2
   Insn 29: point = 19, n_alt = 4
   Insn 28: point = 20, n_alt = -2
   Insn 27: point = 21, n_alt = 3
   Insn 26: point = 22, n_alt = -2
   Insn 25: point = 23, n_alt = 0
   Insn 24: point = 23, n_alt = -2
   Insn 23: point = 24, n_alt = 4
   Insn 22: point = 25, n_alt = 2
   Insn 21: point = 25, n_alt = -2
   Insn 20: point = 26, n_alt = 0
  BB 15
   Insn 118: point = 27, n_alt = 0
  BB 14
   Insn 116: point = 28, n_alt = -1
   Insn 115: point = 28, n_alt = 1
  BB 4
   Insn 130: point = 28, n_alt = -1
  BB 2
   Insn 18: point = 28, n_alt = -1
   Insn 17: point = 28, n_alt = 1
   Insn 14: point = 28, n_alt = 1
   Insn 13: point = 29, n_alt = -2
   Insn 12: point = 30, n_alt = 0
   Insn 11: point = 30, n_alt = -2
   Insn 10: point = 31, n_alt = -2
   Insn 9: point = 32, n_alt = 3
   Insn 8: point = 33, n_alt = 3
   Insn 7: point = 34, n_alt = 1
   Insn 3: point = 34, n_alt = 5
   Insn 2: point = 34, n_alt = 5
  BB 13
   Insn 109: point = 34, n_alt = 0
   Insn 108: point = 34, n_alt = -2
   Insn 107: point = 35, n_alt = 3
  BB 11
   Insn 136: point = 36, n_alt = -1
   Insn 95: point = 36, n_alt = 1
   Insn 94: point = 37, n_alt = -2
   Insn 93: point = 38, n_alt = 0
   Insn 92: point = 38, n_alt = -2
   Insn 91: point = 39, n_alt = 3
  BB 12
   Insn 104: point = 40, n_alt = 1
   Insn 103: point = 41, n_alt = -2
   Insn 102: point = 42, n_alt = 0
   Insn 101: point = 42, n_alt = -2
   Insn 100: point = 43, n_alt = 3
  BB 10
   Insn 89: point = 44, n_alt = -1
   Insn 88: point = 44, n_alt = 0
   Insn 87: point = 45, n_alt = 0
   Insn 86: point = 47, n_alt = 3
   Insn 85: point = 49, n_alt = 3
  BB 5
   Insn 52: point = 50, n_alt = -1
   Insn 51: point = 50, n_alt = 1
   Insn 48: point = 50, n_alt = 1
   Insn 47: point = 51, n_alt = -2
   Insn 46: point = 52, n_alt = 0
   Insn 45: point = 52, n_alt = -2
   Insn 44: point = 53, n_alt = -2
   Insn 43: point = 54, n_alt = 3
   Insn 42: point = 55, n_alt = 3
 r98: [20..22]
 r99: [17..21]
 r100: [53..55]
 r101: [8..10]
 r102: [5..9]
 r103: [46..47]
 r104: [44..45]
 r105: [38..39]
 r106: [42..43]
 r107: [34..35]
 r108: [27..27] [15..16] [2..4]
 r109: [28..29]
 r110: [50..51]
 r111: [40..41]
 r112: [36..37]
 r113: [0..1]
 r114: [31..33]
 r115: [30..32]
 r116: [25..26]
 r117: [23..24]
 r118: [18..19]
 r119: [52..54]
 r120: [13..14]
 r121: [11..12]
 r122: [6..7]
 r123: [48..49]
Compressing live ranges: from 56 to 47 - 83%
Ranges after the compression:
 r98: [16..17]
 r99: [14..17]
 r100: [45..46]
 r101: [6..7]
 r102: [4..7]
 r103: [39..40]
 r104: [37..38]
 r105: [31..32]
 r106: [35..36]
 r107: [27..28]
 r108: [22..22] [12..13] [2..3]
 r109: [23..24]
 r110: [43..44]
 r111: [33..34]
 r112: [29..30]
 r113: [0..1]
 r114: [25..26]
 r115: [25..26]
 r116: [20..21]
 r117: [18..19]
 r118: [14..15]
 r119: [45..46]
 r120: [10..11]
 r121: [8..9]
 r122: [4..5]
 r123: [41..42]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 26
changing reg in insn 28
changing reg in insn 27
changing reg in insn 31
changing reg in insn 42
changing reg in insn 44
changing reg in insn 72
changing reg in insn 74
changing reg in insn 73
changing reg in insn 77
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 88
changing reg in insn 91
changing reg in insn 92
changing reg in insn 100
changing reg in insn 101
changing reg in insn 107
changing reg in insn 108
changing reg in insn 118
changing reg in insn 80
changing reg in insn 61
changing reg in insn 34
changing reg in insn 121
changing reg in insn 13
changing reg in insn 14
changing reg in insn 47
changing reg in insn 48
changing reg in insn 103
changing reg in insn 104
changing reg in insn 94
changing reg in insn 95
changing reg in insn 121
changing reg in insn 125
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 11
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
changing reg in insn 29
changing reg in insn 30
changing reg in insn 43
changing reg in insn 45
changing reg in insn 66
changing reg in insn 67
changing reg in insn 69
changing reg in insn 70
changing reg in insn 75
changing reg in insn 76
changing reg in insn 85
changing reg in insn 86
deleting insn with uid = 13.
deleting insn with uid = 28.
deleting insn with uid = 47.
deleting insn with uid = 74.
deleting insn with uid = 94.
deleting insn with uid = 103.
deleting insn with uid = 121.
deleting insn with uid = 125.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 109.


decode_packet

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 76 [r16] 77 [r17] 78 [r18] 79 [r19] 80 [r20] 81 [r21] 82 [r22] 83 [r23] 84 [r24] 85 [r25] 86 [r26] 87 [r27] 88 [r28] 89 [r29] 90 [r30] 91 [r31]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={30d,24u} r1={16d,6u} r2={12d,2u} r4={16d,7u} r5={19d,10u} r6={1d,37u} r7={1d,25u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r17={15d,6u} r18={9d} r19={1d,1u} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={10d} r37={10d} r38={9d} r39={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} 
;;    total ref usage 932{814d,118u,0e} in 77{68 regular + 9 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [25 dec+0 S8 A64])
        (reg:DI 5 di [ dec ])) "/home/anand/Decode/decode.cpp":122:2 84 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [78 pkt+0 S8 A64])
        (reg:DI 4 si [ pkt ])) "/home/anand/Decode/decode.cpp":122:2 84 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":123:10 85 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 1 dx [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [78 pkt+0 S8 A64])) "/home/anand/Decode/decode.cpp":126:31 84 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 0 ax [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [25 dec+0 S8 A64])) "/home/anand/Decode/decode.cpp":126:31 84 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 1 dx [114])) "/home/anand/Decode/decode.cpp":126:31 84 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [115])) "/home/anand/Decode/decode.cpp":126:31 84 {*movdi_internal}
     (nil))
(call_insn 12 11 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("avcodec_send_packet") [flags 0x41]  <function_decl 0x75229f3cba00 avcodec_send_packet>) [0 avcodec_send_packet S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":126:31 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 12 17 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])
        (reg:SI 0 ax [orig:109 _22 ] [109])) "/home/anand/Decode/decode.cpp":126:31 discrim 1 85 {*movsi_internal}
     (nil))
(insn 17 14 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":127:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "/home/anand/Decode/decode.cpp":127:6 1130 {*jcc}
     (nil)
 -> 37)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg:SI 0 ax [116])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])) "/home/anand/Decode/decode.cpp":128:17 85 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:SI 1 dx)
        (reg:SI 0 ax [116])) "/home/anand/Decode/decode.cpp":128:17 85 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 4 si)
        (const_int 64 [0x40])) "/home/anand/Decode/decode.cpp":128:17 84 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 0 ax [117])
        (symbol_ref:DI ("_ZL7err_str") [flags 0x2]  <var_decl 0x75229f05ea20 err_str>)) "/home/anand/Decode/decode.cpp":128:17 84 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [117])) "/home/anand/Decode/decode.cpp":128:17 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL7err_str") [flags 0x2]  <var_decl 0x75229f05ea20 err_str>)
        (nil)))
(call_insn 25 24 26 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_make_error_string") [flags 0x3]  <function_decl 0x75229f283d00 av_make_error_string>) [0 av_make_error_string S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":128:17 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 26 25 27 3 (set (reg/f:DI 1 dx [orig:98 _1 ] [98])
        (reg:DI 0 ax)) "/home/anand/Decode/decode.cpp":128:17 84 {*movdi_internal}
     (nil))
(insn 27 26 29 3 (set (reg/f:DI 0 ax [orig:99 stderr.18_2 ] [99])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":128:17 discrim 1 84 {*movdi_internal}
     (nil))
(insn 29 27 30 3 (set (reg:DI 2 cx [118])
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x75229efff480 *.LC3>)) "/home/anand/Decode/decode.cpp":128:17 discrim 1 84 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:DI 4 si)
        (reg:DI 2 cx [118])) "/home/anand/Decode/decode.cpp":128:17 discrim 1 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x75229efff480 *.LC3>)
        (nil)))
(insn 31 30 32 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:99 stderr.18_2 ] [99])) "/home/anand/Decode/decode.cpp":128:17 discrim 1 84 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":128:17 discrim 1 87 {*movqi_internal}
     (nil))
(call_insn 33 32 34 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":128:17 discrim 1 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 34 33 128 3 (set (reg:SI 0 ax [orig:108 _13 ] [108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])) "/home/anand/Decode/decode.cpp":129:17 85 {*movsi_internal}
     (nil))
(jump_insn 128 34 129 3 (set (pc)
        (label_ref 119)) "/home/anand/Decode/decode.cpp":129:17 1131 {jump}
     (nil)
 -> 119)
(barrier 129 128 37)
(code_label 37 129 38 4 13 (nil) [1 uses])
(note 38 37 130 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 130 38 131 4 (set (pc)
        (label_ref 110)) "/home/anand/Decode/decode.cpp":133:6 1131 {jump}
     (nil)
 -> 110)
(barrier 131 130 112)
(code_label 112 131 41 5 21 (nil) [1 uses])
(note 41 112 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 5 (set (reg/f:DI 1 dx [orig:100 frame.19_3 ] [100])
        (mem/f/c:DI (symbol_ref:DI ("_ZL5frame") [flags 0x2]  <var_decl 0x75229f05e750 frame>) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":134:37 84 {*movdi_internal}
     (nil))
(insn 43 42 44 5 (set (reg:DI 0 ax [119])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [25 dec+0 S8 A64])) "/home/anand/Decode/decode.cpp":134:37 84 {*movdi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:100 frame.19_3 ] [100])) "/home/anand/Decode/decode.cpp":134:37 84 {*movdi_internal}
     (nil))
(insn 45 44 46 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [119])) "/home/anand/Decode/decode.cpp":134:37 84 {*movdi_internal}
     (nil))
(call_insn 46 45 48 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("avcodec_receive_frame") [flags 0x41]  <function_decl 0x75229f3cbb00 avcodec_receive_frame>) [0 avcodec_receive_frame S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":134:37 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 48 46 51 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])
        (reg:SI 0 ax [orig:110 _26 ] [110])) "/home/anand/Decode/decode.cpp":134:37 discrim 1 85 {*movsi_internal}
     (nil))
(insn 51 48 52 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":135:10 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 52 51 53 5 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "/home/anand/Decode/decode.cpp":135:10 1130 {*jcc}
     (nil)
 -> 83)
(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])
            (const_int -541478725 [0xffffffffdfb9b0bb]))) "/home/anand/Decode/decode.cpp":138:14 11 {*cmpsi_1}
     (nil))
(jump_insn 55 54 56 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "/home/anand/Decode/decode.cpp":138:14 1130 {*jcc}
     (nil)
 -> 59)
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])
            (const_int -11 [0xfffffffffffffff5]))) "/home/anand/Decode/decode.cpp":138:37 discrim 1 11 {*cmpsi_1}
     (nil))
(jump_insn 58 57 59 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "/home/anand/Decode/decode.cpp":138:37 discrim 1 1130 {*jcc}
     (nil)
 -> 64)
(code_label 59 58 60 8 17 (nil) [1 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 132 8 (set (reg:SI 0 ax [orig:108 _13 ] [108])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":139:25 85 {*movsi_internal}
     (nil))
(jump_insn 132 61 133 8 (set (pc)
        (label_ref 119)) "/home/anand/Decode/decode.cpp":139:25 1131 {jump}
     (nil)
 -> 119)
(barrier 133 132 64)
(code_label 64 133 65 9 18 (nil) [1 uses])
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg:SI 0 ax [120])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])) "/home/anand/Decode/decode.cpp":141:21 85 {*movsi_internal}
     (nil))
(insn 67 66 68 9 (set (reg:SI 1 dx)
        (reg:SI 0 ax [120])) "/home/anand/Decode/decode.cpp":141:21 85 {*movsi_internal}
     (nil))
(insn 68 67 69 9 (set (reg:DI 4 si)
        (const_int 64 [0x40])) "/home/anand/Decode/decode.cpp":141:21 84 {*movdi_internal}
     (nil))
(insn 69 68 70 9 (set (reg:DI 0 ax [121])
        (symbol_ref:DI ("_ZL7err_str") [flags 0x2]  <var_decl 0x75229f05ea20 err_str>)) "/home/anand/Decode/decode.cpp":141:21 84 {*movdi_internal}
     (nil))
(insn 70 69 71 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [121])) "/home/anand/Decode/decode.cpp":141:21 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL7err_str") [flags 0x2]  <var_decl 0x75229f05ea20 err_str>)
        (nil)))
(call_insn 71 70 72 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_make_error_string") [flags 0x3]  <function_decl 0x75229f283d00 av_make_error_string>) [0 av_make_error_string S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":141:21 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 72 71 73 9 (set (reg/f:DI 1 dx [orig:101 _4 ] [101])
        (reg:DI 0 ax)) "/home/anand/Decode/decode.cpp":141:21 84 {*movdi_internal}
     (nil))
(insn 73 72 75 9 (set (reg/f:DI 0 ax [orig:102 stderr.20_5 ] [102])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":141:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 75 73 76 9 (set (reg:DI 2 cx [122])
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x75229efff510 *.LC4>)) "/home/anand/Decode/decode.cpp":141:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 76 75 77 9 (set (reg:DI 4 si)
        (reg:DI 2 cx [122])) "/home/anand/Decode/decode.cpp":141:21 discrim 1 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x75229efff510 *.LC4>)
        (nil)))
(insn 77 76 78 9 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:102 stderr.20_5 ] [102])) "/home/anand/Decode/decode.cpp":141:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 78 77 79 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":141:21 discrim 1 87 {*movqi_internal}
     (nil))
(call_insn 79 78 80 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":141:21 discrim 1 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 80 79 134 9 (set (reg:SI 0 ax [orig:108 _13 ] [108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])) "/home/anand/Decode/decode.cpp":142:21 85 {*movsi_internal}
     (nil))
(jump_insn 134 80 135 9 (set (pc)
        (label_ref 119)) "/home/anand/Decode/decode.cpp":142:21 1131 {jump}
     (nil)
 -> 119)
(barrier 135 134 83)
(code_label 83 135 84 10 16 (nil) [1 uses])
(note 84 83 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 10 (set (reg/f:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [25 dec+0 S8 A64])) "/home/anand/Decode/decode.cpp":146:19 84 {*movdi_internal}
     (nil))
(insn 86 85 87 10 (set (reg/f:DI 0 ax [orig:103 _6 ] [103])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [123])
                (const_int 16 [0x10])) [28 dec_19(D)->codec+0 S8 A64])) "/home/anand/Decode/decode.cpp":146:19 84 {*movdi_internal}
     (nil))
(insn 87 86 88 10 (set (reg:SI 0 ax [orig:104 _7 ] [104])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:103 _6 ] [103])
                (const_int 16 [0x10])) [31 _6->type+0 S4 A64])) "/home/anand/Decode/decode.cpp":146:26 85 {*movsi_internal}
     (nil))
(insn 88 87 89 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:104 _7 ] [104])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":146:10 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 89 88 90 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "/home/anand/Decode/decode.cpp":146:10 1130 {*jcc}
     (nil)
 -> 98)
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 11 (set (reg/f:DI 0 ax [orig:105 frame.21_8 ] [105])
        (mem/f/c:DI (symbol_ref:DI ("_ZL5frame") [flags 0x2]  <var_decl 0x75229f05e750 frame>) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":147:38 84 {*movdi_internal}
     (nil))
(insn 92 91 93 11 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:105 frame.21_8 ] [105])) "/home/anand/Decode/decode.cpp":147:38 84 {*movdi_internal}
     (nil))
(call_insn 93 92 95 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL18output_video_frameP7AVFrame") [flags 0x3]  <function_decl 0x75229f05b100 output_video_frame>) [0 output_video_frame S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":147:38 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 95 93 136 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])
        (reg:SI 0 ax [orig:112 _32 ] [112])) "/home/anand/Decode/decode.cpp":147:38 discrim 1 85 {*movsi_internal}
     (nil))
(jump_insn 136 95 137 11 (set (pc)
        (label_ref 105)) 1131 {jump}
     (nil)
 -> 105)
(barrier 137 136 98)
(code_label 98 137 99 12 19 (nil) [1 uses])
(note 99 98 100 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 12 (set (reg/f:DI 0 ax [orig:106 frame.22_9 ] [106])
        (mem/f/c:DI (symbol_ref:DI ("_ZL5frame") [flags 0x2]  <var_decl 0x75229f05e750 frame>) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":149:38 84 {*movdi_internal}
     (nil))
(insn 101 100 102 12 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:106 frame.22_9 ] [106])) "/home/anand/Decode/decode.cpp":149:38 84 {*movdi_internal}
     (nil))
(call_insn 102 101 104 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL18output_audio_frameP7AVFrame") [flags 0x3]  <function_decl 0x75229f05b400 output_audio_frame>) [0 output_audio_frame S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":149:38 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 104 102 105 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])
        (reg:SI 0 ax [orig:111 _29 ] [111])) "/home/anand/Decode/decode.cpp":149:38 discrim 1 85 {*movsi_internal}
     (nil))
(code_label 105 104 106 13 20 (nil) [1 uses])
(note 106 105 107 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 13 (set (reg/f:DI 0 ax [orig:107 frame.23_10 ] [107])
        (mem/f/c:DI (symbol_ref:DI ("_ZL5frame") [flags 0x2]  <var_decl 0x75229f05e750 frame>) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":151:24 84 {*movdi_internal}
     (nil))
(insn 108 107 109 13 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:107 frame.23_10 ] [107])) "/home/anand/Decode/decode.cpp":151:24 84 {*movdi_internal}
     (nil))
(call_insn 109 108 110 13 (call (mem:QI (symbol_ref:DI ("av_frame_unref") [flags 0x41]  <function_decl 0x75229f2f0b00 av_frame_unref>) [0 av_frame_unref S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":151:24 1137 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 110 109 111 14 15 (nil) [1 uses])
(note 111 110 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 115 111 116 14 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":133:17 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 116 115 117 14 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "/home/anand/Decode/decode.cpp":133:17 1130 {*jcc}
     (nil)
 -> 112)
(note 117 116 118 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 15 (set (reg:SI 0 ax [orig:108 _13 ] [108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 ret+0 S4 A32])) "/home/anand/Decode/decode.cpp":154:13 85 {*movsi_internal}
     (nil))
(code_label 119 118 120 16 14 (nil) [3 uses])
(note 120 119 126 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 126 120 138 16 (use (reg/i:SI 0 ax)) "/home/anand/Decode/decode.cpp":155:2 -1
     (nil))
(note 138 126 0 NOTE_INSN_DELETED)

;; Function open_codec_context (_ZL18open_codec_contextPiPP14AVCodecContextP15AVFormatContext11AVMediaType, funcdef_no=1282, decl_uid=34544, cgraph_uid=606, symbol_order=1269)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=96, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=64, prev_offset=0)
Can eliminate 19 to 6 (offset=-16, prev_offset=0)
         Considering alt=2 of insn 2:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 2:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 2:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 2:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 3:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 3:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 3:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 3:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 4:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 4:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 4:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 4:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 5:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 5:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 9:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=3 of insn 9:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=4 of insn 9:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=5 of insn 9:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 10:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 11:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 11:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 12:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 13:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 13:  (0) r  (1) Z {*movdi_internal}
         Considering alt=0 of insn 14:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 15:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 18:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 18:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 20:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 20:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 23:   (0) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 23:   (0) ?mr
            Staticly defined alt reject+=6
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 23:  (0) ?mr {*cmpsi_ccno_1}
         Considering alt=2 of insn 26:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 26:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 26:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 27:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 29:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 29:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 31:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 31:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 31:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 34:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 34:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 34:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 34:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 37:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 37:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 37:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 37:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 37:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 38:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 38:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 39:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 44:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 45:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 45:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 45:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 46:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 46:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 46:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 47:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 47:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 47:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 48:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 49:   (0) =*a  (1) *0
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          overall=20,losers=2,rld_nregs=2
         Considering alt=1 of insn 49:   (0) r  (1) rm
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 49:  (0) r  (1) rm {*extendsidi2_rex64}
         Considering alt=0 of insn 50:   (0) =rm  (1) 0  (2) cJ
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 50:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
         Considering alt=0 of insn 51:   (0) =rm  (1) %0  (2) re
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 51:   (0) =rm  (1) %0  (2) re
            overall=6,losers=1 -- refuse
         Considering alt=1 of insn 51:   (0) r  (1) 0  (2) BM
            overall=6,losers=1 -- refuse
         Considering alt=2 of insn 51:   (0) r  (1) r  (2) 0
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*adddi_1}
         Considering alt=2 of insn 52:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 52:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 53:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 53:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 53:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 53:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 53:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 54:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 54:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 54:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 55:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 55:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 55:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 56:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 58:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 58:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 60:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 60:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 60:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 60:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 60:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 61:   (0) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 61:   (0) ?mr
            Staticly defined alt reject+=6
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 61:  (0) ?mr {*cmpdi_ccno_1}
         Considering alt=0 of insn 64:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 66:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 66:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 68:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 68:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 68:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 70:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 70:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 70:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 70:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 73:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 73:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 73:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 73:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 73:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 74:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 74:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 75:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 80:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 80:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 80:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 82:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 82:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 84:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 84:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 84:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 85:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 85:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 85:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 85:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 85:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 86:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 86:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 86:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 87:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 87:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 87:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 88:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 88:  (0) r {*cmpdi_ccno_1}
         Considering alt=0 of insn 91:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 93:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 93:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 95:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 95:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 95:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 97:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 97:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 97:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 97:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 100:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 100:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 100:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 100:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 100:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 101:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 101:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 102:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 102:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 107:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 107:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 107:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 108:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 108:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 108:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 109:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 109:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 109:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 110:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 110:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 110:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 113:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 113:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 115:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 115:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 115:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 118:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 119:   (0) =rm  (1) 0  (2) cI
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 119:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
         Considering alt=0 of insn 120:   (0) =Q  (1) Q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 120:  (0) =Q  (1) Q {*movqi_internal}
         Considering alt=0 of insn 121:   (0) q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 121:  (0) q {*cmpqi_ccno_1}
         Considering alt=0 of insn 124:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 124:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 126:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 126:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 128:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 128:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 128:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 130:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 130:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 130:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 130:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 133:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 133:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 133:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 133:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 133:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 134:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 134:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 135:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 140:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 140:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 140:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 141:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 141:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 141:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 142:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 142:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 142:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 143:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 143:  (0) r  (1) Z {*movdi_internal}
         Considering alt=0 of insn 146:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 146:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 148:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 148:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 148:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 151:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 152:   (0) =rm  (1) 0  (2) cI
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 152:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
         Considering alt=0 of insn 153:   (0) =Q  (1) Q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 153:  (0) =Q  (1) Q {*movqi_internal}
         Considering alt=0 of insn 154:   (0) q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 154:  (0) q {*cmpqi_ccno_1}
         Considering alt=0 of insn 157:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 157:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 159:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 159:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 161:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 161:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 161:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 163:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 163:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 163:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 163:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 166:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 166:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 166:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 166:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 166:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 167:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 167:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 168:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 173:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 173:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 173:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 174:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 175:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 175:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 175:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 176:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 176:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10 11
EBB 12
EBB 13

********** Pseudo live ranges #1: **********

  BB 13
   Insn 184: point = 0, n_alt = -1
   Insn 183: point = 0, n_alt = -2
   Insn 179: point = 1, n_alt = -2
  BB 11
   Insn 194: point = 4, n_alt = -1
   Insn 168: point = 4, n_alt = 0
   Insn 167: point = 5, n_alt = 0
   Insn 166: point = 5, n_alt = 3
   Insn 165: point = 5, n_alt = -2
   Insn 164: point = 6, n_alt = -2
   Insn 163: point = 7, n_alt = 4
   Insn 162: point = 8, n_alt = -2
   Insn 161: point = 9, n_alt = 3
   Insn 160: point = 10, n_alt = -2
   Insn 159: point = 11, n_alt = 0
   Insn 158: point = 11, n_alt = -2
   Insn 157: point = 12, n_alt = 0
  BB 9
   Insn 192: point = 13, n_alt = -1
   Insn 135: point = 13, n_alt = 0
   Insn 134: point = 14, n_alt = 0
   Insn 133: point = 14, n_alt = 3
   Insn 132: point = 14, n_alt = -2
   Insn 131: point = 15, n_alt = -2
   Insn 130: point = 16, n_alt = 4
   Insn 129: point = 17, n_alt = -2
   Insn 128: point = 18, n_alt = 3
   Insn 127: point = 19, n_alt = -2
   Insn 126: point = 20, n_alt = 0
   Insn 125: point = 20, n_alt = -2
   Insn 124: point = 21, n_alt = 0
  BB 7
   Insn 190: point = 22, n_alt = -1
   Insn 102: point = 22, n_alt = 0
   Insn 101: point = 23, n_alt = 0
   Insn 100: point = 23, n_alt = 3
   Insn 99: point = 23, n_alt = -2
   Insn 98: point = 24, n_alt = -2
   Insn 97: point = 25, n_alt = 4
   Insn 96: point = 26, n_alt = -2
   Insn 95: point = 27, n_alt = 3
   Insn 94: point = 28, n_alt = -2
   Insn 93: point = 29, n_alt = 0
   Insn 92: point = 29, n_alt = -2
   Insn 91: point = 30, n_alt = 0
  BB 5
   Insn 188: point = 31, n_alt = -1
   Insn 75: point = 31, n_alt = 0
   Insn 74: point = 32, n_alt = 0
   Insn 73: point = 32, n_alt = 3
   Insn 72: point = 32, n_alt = -2
   Insn 71: point = 33, n_alt = -2
   Insn 70: point = 34, n_alt = 4
   Insn 69: point = 35, n_alt = -2
   Insn 68: point = 36, n_alt = 3
   Insn 67: point = 37, n_alt = -2
   Insn 66: point = 38, n_alt = 0
   Insn 65: point = 38, n_alt = -2
   Insn 64: point = 39, n_alt = 0
  BB 3
   Insn 186: point = 40, n_alt = -1
   Insn 39: point = 40, n_alt = 0
   Insn 38: point = 41, n_alt = 0
   Insn 37: point = 41, n_alt = 3
   Insn 36: point = 41, n_alt = -2
   Insn 35: point = 42, n_alt = -2
   Insn 34: point = 43, n_alt = 4
   Insn 33: point = 44, n_alt = -2
   Insn 32: point = 45, n_alt = -2
   Insn 31: point = 46, n_alt = 3
   Insn 30: point = 47, n_alt = -2
   Insn 29: point = 48, n_alt = 0
   Insn 28: point = 48, n_alt = -2
   Insn 27: point = 49, n_alt = 0
   Insn 26: point = 50, n_alt = 3
  BB 12
   Insn 176: point = 51, n_alt = 0
   Insn 175: point = 52, n_alt = 1
   Insn 174: point = 53, n_alt = 0
   Insn 173: point = 54, n_alt = 3
  BB 10
   Insn 155: point = 55, n_alt = -1
   Insn 154: point = 55, n_alt = 0
   Insn 153: point = 56, n_alt = 0
   Insn 152: point = 58, n_alt = 0
   Insn 151: point = 60, n_alt = 0
   Insn 148: point = 61, n_alt = 1
   Insn 147: point = 62, n_alt = -2
   Insn 146: point = 63, n_alt = 0
   Insn 145: point = 63, n_alt = -2
   Insn 144: point = 64, n_alt = -2
   Insn 143: point = 65, n_alt = 2
   Insn 142: point = 65, n_alt = 3
   Insn 141: point = 66, n_alt = 3
   Insn 140: point = 68, n_alt = 3
  BB 8
   Insn 122: point = 69, n_alt = -1
   Insn 121: point = 69, n_alt = 0
   Insn 120: point = 70, n_alt = 0
   Insn 119: point = 72, n_alt = 0
   Insn 118: point = 74, n_alt = 0
   Insn 115: point = 75, n_alt = 1
   Insn 114: point = 76, n_alt = -2
   Insn 113: point = 77, n_alt = 0
   Insn 112: point = 77, n_alt = -2
   Insn 111: point = 78, n_alt = -2
   Insn 110: point = 79, n_alt = 3
   Insn 109: point = 81, n_alt = 3
   Insn 108: point = 82, n_alt = 3
   Insn 107: point = 84, n_alt = 3
  BB 6
   Insn 89: point = 85, n_alt = -1
   Insn 88: point = 85, n_alt = 0
   Insn 87: point = 86, n_alt = 3
   Insn 86: point = 88, n_alt = 3
   Insn 85: point = 89, n_alt = 5
   Insn 84: point = 90, n_alt = 3
   Insn 83: point = 91, n_alt = -2
   Insn 82: point = 92, n_alt = 0
   Insn 81: point = 92, n_alt = -2
   Insn 80: point = 93, n_alt = 3
  BB 4
   Insn 62: point = 94, n_alt = -1
   Insn 61: point = 94, n_alt = 1
   Insn 60: point = 94, n_alt = 5
   Insn 59: point = 95, n_alt = -2
   Insn 58: point = 96, n_alt = 0
   Insn 57: point = 96, n_alt = -2
   Insn 56: point = 97, n_alt = 0
   Insn 55: point = 99, n_alt = 3
   Insn 54: point = 101, n_alt = 3
   Insn 53: point = 102, n_alt = 5
   Insn 52: point = 103, n_alt = 3
   Insn 51: point = 105, n_alt = 0
   Insn 50: point = 107, n_alt = 0
   Insn 49: point = 109, n_alt = 1
   Insn 48: point = 111, n_alt = 0
   Insn 47: point = 112, n_alt = 3
   Insn 46: point = 114, n_alt = 3
   Insn 45: point = 115, n_alt = 1
   Insn 44: point = 116, n_alt = 0
  BB 2
   Insn 24: point = 117, n_alt = -1
   Insn 23: point = 117, n_alt = 1
   Insn 20: point = 117, n_alt = 1
   Insn 19: point = 118, n_alt = -2
   Insn 18: point = 119, n_alt = 0
   Insn 17: point = 119, n_alt = -2
   Insn 16: point = 120, n_alt = -2
   Insn 15: point = 121, n_alt = 0
   Insn 14: point = 121, n_alt = 0
   Insn 13: point = 121, n_alt = 2
   Insn 12: point = 121, n_alt = 0
   Insn 11: point = 121, n_alt = 3
   Insn 10: point = 122, n_alt = 0
   Insn 9: point = 123, n_alt = 5
   Insn 5: point = 123, n_alt = 1
   Insn 4: point = 123, n_alt = 5
   Insn 3: point = 123, n_alt = 5
   Insn 2: point = 123, n_alt = 5
 r98: [45..50]
 r99: [44..47]
 r100: [41..46]
 r101: [106..112]
 r102: [108..109]
 r103: [106..107]
 r104: [104..105]
 r105: [98..99]
 r106: [96..97]
 r107: [35..37]
 r108: [32..36]
 r109: [89..91]
 r110: [85..86]
 r111: [26..28]
 r112: [23..27]
 r113: [78..82]
 r114: [77..79]
 r115: [17..19]
 r116: [14..18]
 r117: [63..66]
 r118: [8..10]
 r119: [5..9]
 r120: [51..51] [40..40] [31..31] [22..22] [13..13] [2..4]
 r121: [117..118]
 r122: [94..95]
 r123: [75..76]
 r124: [69..70]
 r125: [61..62]
 r126: [55..56]
 r127: [0..1]
 r128: [120..122]
 r129: [119..121]
 r130: [48..49]
 r131: [42..43]
 r132: [115..116]
 r133: [113..114]
 r134: [110..111]
 r135: [102..103]
 r136: [100..101]
 r137: [38..39]
 r138: [33..34]
 r139: [92..93]
 r140: [89..90]
 r141: [87..88]
 r142: [29..30]
 r143: [24..25]
 r144: [83..84]
 r145: [80..81]
 r146: [71..72]
 r147: [73..74]
 r148: [20..21]
 r149: [15..16]
 r150: [67..68]
 r151: [64..65]
 r152: [57..58]
 r153: [59..60]
 r154: [11..12]
 r155: [6..7]
 r156: [52..54]
 r157: [52..53]
Compressing live ranges: from 123 to 101 - 82%
Ranges after the compression:
 r98: [34..37]
 r99: [34..35]
 r100: [32..35]
 r101: [87..92]
 r102: [89..90]
 r103: [87..88]
 r104: [85..86]
 r105: [79..80]
 r106: [77..78]
 r107: [27..28]
 r108: [25..28]
 r109: [71..72]
 r110: [67..68]
 r111: [20..21]
 r112: [18..21]
 r113: [61..64]
 r114: [61..62]
 r115: [13..14]
 r116: [11..14]
 r117: [49..50]
 r118: [6..7]
 r119: [4..7]
 r120: [38..38] [31..31] [24..24] [17..17] [10..10] [2..3]
 r121: [97..98]
 r122: [75..76]
 r123: [59..60]
 r124: [53..54]
 r125: [47..48]
 r126: [41..42]
 r127: [0..1]
 r128: [99..100]
 r129: [99..100]
 r130: [36..37]
 r131: [32..33]
 r132: [95..96]
 r133: [93..94]
 r134: [91..92]
 r135: [83..84]
 r136: [81..82]
 r137: [29..30]
 r138: [25..26]
 r139: [73..74]
 r140: [71..72]
 r141: [69..70]
 r142: [22..23]
 r143: [18..19]
 r144: [65..66]
 r145: [63..64]
 r146: [55..56]
 r147: [57..58]
 r148: [15..16]
 r149: [11..12]
 r150: [51..52]
 r151: [49..50]
 r152: [43..44]
 r153: [45..46]
 r154: [8..9]
 r155: [4..5]
 r156: [39..40]
 r157: [39..40]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=96, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=64, prev_offset=0)
Can eliminate 19 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 26
changing reg in insn 32
changing reg in insn 30
changing reg in insn 33
changing reg in insn 31
changing reg in insn 36
changing reg in insn 47
changing reg in insn 51
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 55
changing reg in insn 56
changing reg in insn 56
changing reg in insn 57
changing reg in insn 67
changing reg in insn 69
changing reg in insn 68
changing reg in insn 72
changing reg in insn 83
changing reg in insn 85
changing reg in insn 87
changing reg in insn 88
changing reg in insn 94
changing reg in insn 96
changing reg in insn 95
changing reg in insn 99
changing reg in insn 108
changing reg in insn 111
changing reg in insn 110
changing reg in insn 112
changing reg in insn 127
changing reg in insn 129
changing reg in insn 128
changing reg in insn 132
changing reg in insn 141
changing reg in insn 145
changing reg in insn 160
changing reg in insn 162
changing reg in insn 161
changing reg in insn 165
changing reg in insn 176
changing reg in insn 168
changing reg in insn 135
changing reg in insn 102
changing reg in insn 75
changing reg in insn 39
changing reg in insn 179
changing reg in insn 19
changing reg in insn 20
changing reg in insn 59
changing reg in insn 60
changing reg in insn 114
changing reg in insn 115
changing reg in insn 120
changing reg in insn 121
changing reg in insn 147
changing reg in insn 148
changing reg in insn 153
changing reg in insn 154
changing reg in insn 179
changing reg in insn 183
changing reg in insn 10
changing reg in insn 16
changing reg in insn 11
changing reg in insn 17
changing reg in insn 27
changing reg in insn 28
changing reg in insn 34
changing reg in insn 35
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 64
changing reg in insn 65
changing reg in insn 70
changing reg in insn 71
changing reg in insn 80
changing reg in insn 81
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 91
changing reg in insn 92
changing reg in insn 97
changing reg in insn 98
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 110
changing reg in insn 119
changing reg in insn 118
changing reg in insn 119
changing reg in insn 124
changing reg in insn 125
changing reg in insn 130
changing reg in insn 131
changing reg in insn 140
changing reg in insn 141
changing reg in insn 142
changing reg in insn 144
changing reg in insn 152
changing reg in insn 151
changing reg in insn 152
changing reg in insn 157
changing reg in insn 158
changing reg in insn 163
changing reg in insn 164
changing reg in insn 173
changing reg in insn 175
changing reg in insn 174
changing reg in insn 175
deleting insn with uid = 16.
deleting insn with uid = 19.
deleting insn with uid = 33.
deleting insn with uid = 35.
deleting insn with uid = 59.
deleting insn with uid = 69.
deleting insn with uid = 83.
deleting insn with uid = 96.
deleting insn with uid = 114.
deleting insn with uid = 120.
deleting insn with uid = 129.
deleting insn with uid = 147.
deleting insn with uid = 153.
deleting insn with uid = 162.
deleting insn with uid = 179.
deleting insn with uid = 183.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 113.
verify found no changes in insn with uid = 126.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 146.
verify found no changes in insn with uid = 159.
verify found no changes in insn with uid = 167.


open_codec_context

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 76 [r16] 77 [r17] 78 [r18] 79 [r19] 80 [r20] 81 [r21] 82 [r22] 83 [r23] 84 [r24] 85 [r25] 86 [r26] 87 [r27] 88 [r28] 89 [r29] 90 [r30] 91 [r31]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={59d,49u} r1={29d,14u} r2={23d,8u} r3={1d,1u} r4={24d,9u} r5={31d,16u} r6={1d,51u} r7={1d,28u} r8={15d} r9={15d} r10={15d} r11={15d} r12={15d} r13={15d} r14={15d} r15={15d} r17={24d,5u} r18={15d} r19={1d,1u,2e} r20={16d} r21={16d} r22={16d} r23={16d} r24={16d} r25={16d} r26={16d} r27={16d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={17d,1u} r37={17d,1u} r38={15d} r39={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r76={15d} r77={15d} r78={15d} r79={15d} r80={15d} r81={15d} r82={15d} r83={15d} r84={15d} r85={15d} r86={15d} r87={15d} r88={15d} r89={15d} r90={15d} r91={15d} 
;;    total ref usage 1547{1361d,184u,2e} in 133{118 regular + 15 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [23 stream_idx+0 S8 A64])
        (reg:DI 5 di [ stream_idx ])) "/home/anand/Decode/decode.cpp":159:2 84 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [80 dec_ctx+0 S8 A64])
        (reg:DI 4 si [ dec_ctx ])) "/home/anand/Decode/decode.cpp":159:2 84 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [77 fmt_ctx+0 S8 A64])
        (reg:DI 1 dx [ fmt_ctx ])) "/home/anand/Decode/decode.cpp":159:2 84 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [31 type+0 S4 A32])
        (reg:SI 2 cx [ type ])) "/home/anand/Decode/decode.cpp":159:2 85 {*movsi_internal}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [28 dec+0 S8 A64])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":162:21 84 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si [128])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [31 type+0 S4 A32])) "/home/anand/Decode/decode.cpp":164:31 85 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 0 ax [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [77 fmt_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":164:31 84 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 37 r9)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":164:31 85 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 36 r8)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":164:31 84 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 2 cx)
        (const_int -1 [0xffffffffffffffff])) "/home/anand/Decode/decode.cpp":164:31 85 {*movsi_internal}
     (nil))
(insn 15 14 17 2 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) "/home/anand/Decode/decode.cpp":164:31 85 {*movsi_internal}
     (nil))
(insn 17 15 18 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [129])) "/home/anand/Decode/decode.cpp":164:31 84 {*movdi_internal}
     (nil))
(call_insn 18 17 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_find_best_stream") [flags 0x41]  <function_decl 0x75229f043f00 av_find_best_stream>) [0 av_find_best_stream S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":164:31 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 20 18 23 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ret+0 S4 A64])
        (reg:SI 0 ax [orig:121 _30 ] [121])) "/home/anand/Decode/decode.cpp":164:31 discrim 1 85 {*movsi_internal}
     (nil))
(insn 23 20 24 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 ret+0 S4 A64])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":165:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "/home/anand/Decode/decode.cpp":165:6 1130 {*jcc}
     (nil)
 -> 42)
(note 25 24 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 3 (set (reg/f:DI 3 bx [orig:98 src_filename.24_1 ] [98])
        (mem/f/c:DI (symbol_ref:DI ("_ZL12src_filename") [flags 0x2]  <var_decl 0x75229f05e1b0 src_filename>) [43 src_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":166:17 84 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:SI 0 ax [130])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [31 type+0 S4 A32])) "/home/anand/Decode/decode.cpp":166:17 85 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:SI 5 di)
        (reg:SI 0 ax [130])) "/home/anand/Decode/decode.cpp":166:17 85 {*movsi_internal}
     (nil))
(call_insn 29 28 30 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_get_media_type_string") [flags 0x41]  <function_decl 0x7522a0d5ba00 av_get_media_type_string>) [0 av_get_media_type_string S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":166:17 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 30 29 31 3 (set (reg/f:DI 1 dx [orig:99 _2 ] [99])
        (reg:DI 0 ax)) "/home/anand/Decode/decode.cpp":166:17 84 {*movdi_internal}
     (nil))
(insn 31 30 32 3 (set (reg/f:DI 0 ax [orig:100 stderr.25_3 ] [100])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":166:17 discrim 1 84 {*movdi_internal}
     (nil))
(insn 32 31 34 3 (set (reg:DI 2 cx)
        (reg/f:DI 3 bx [orig:98 src_filename.24_1 ] [98])) "/home/anand/Decode/decode.cpp":166:17 discrim 1 84 {*movdi_internal}
     (nil))
(insn 34 32 36 3 (set (reg:DI 4 si [131])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x75229ec0d1b0 *.LC5>)) "/home/anand/Decode/decode.cpp":166:17 discrim 1 84 {*movdi_internal}
     (nil))
(insn 36 34 37 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:100 stderr.25_3 ] [100])) "/home/anand/Decode/decode.cpp":166:17 discrim 1 84 {*movdi_internal}
     (nil))
(insn 37 36 38 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":166:17 discrim 1 87 {*movqi_internal}
     (nil))
(call_insn 38 37 39 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":166:17 discrim 1 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 39 38 186 3 (set (reg:SI 0 ax [orig:120 _23 ] [120])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ret+0 S4 A64])) "/home/anand/Decode/decode.cpp":168:17 85 {*movsi_internal}
     (nil))
(jump_insn 186 39 187 3 (set (pc)
        (label_ref 177)) "/home/anand/Decode/decode.cpp":168:17 1131 {jump}
     (nil)
 -> 177)
(barrier 187 186 42)
(code_label 42 187 43 4 23 (nil) [1 uses])
(note 43 42 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 4 (set (reg:SI 0 ax [132])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ret+0 S4 A64])) "/home/anand/Decode/decode.cpp":170:23 85 {*movsi_internal}
     (nil))
(insn 45 44 46 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 stream_index+0 S4 A32])
        (reg:SI 0 ax [132])) "/home/anand/Decode/decode.cpp":170:23 85 {*movsi_internal}
     (nil))
(insn 46 45 47 4 (set (reg/f:DI 0 ax [133])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [77 fmt_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":171:24 84 {*movdi_internal}
     (nil))
(insn 47 46 48 4 (set (reg/f:DI 0 ax [orig:101 _4 ] [101])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [133])
                (const_int 48 [0x30])) [56 fmt_ctx_27(D)->streams+0 S8 A64])) "/home/anand/Decode/decode.cpp":171:24 84 {*movdi_internal}
     (nil))
(insn 48 47 49 4 (set (reg:SI 1 dx [134])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 stream_index+0 S4 A32])) "/home/anand/Decode/decode.cpp":171:32 85 {*movsi_internal}
     (nil))
(insn 49 48 50 4 (set (reg:DI 1 dx [orig:102 _5 ] [102])
        (sign_extend:DI (reg:SI 1 dx [134]))) "/home/anand/Decode/decode.cpp":171:32 173 {*extendsidi2_rex64}
     (nil))
(insn 50 49 51 4 (parallel [
            (set (reg:DI 1 dx [orig:103 _6 ] [103])
                (ashift:DI (reg:DI 1 dx [orig:102 _5 ] [102])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":171:44 912 {*ashldi3_1}
     (nil))
(insn 51 50 52 4 (parallel [
            (set (reg/f:DI 0 ax [orig:104 _7 ] [104])
                (plus:DI (reg/f:DI 0 ax [orig:101 _4 ] [101])
                    (reg:DI 1 dx [orig:103 _6 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":171:44 272 {*adddi_1}
     (nil))
(insn 52 51 53 4 (set (reg/f:DI 0 ax [135])
        (mem/f:DI (reg/f:DI 0 ax [orig:104 _7 ] [104]) [70 *_7+0 S8 A64])) "/home/anand/Decode/decode.cpp":171:13 84 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [70 st+0 S8 A64])
        (reg/f:DI 0 ax [135])) "/home/anand/Decode/decode.cpp":171:13 84 {*movdi_internal}
     (nil))
(insn 54 53 55 4 (set (reg/f:DI 0 ax [136])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [70 st+0 S8 A64])) "/home/anand/Decode/decode.cpp":174:41 84 {*movdi_internal}
     (nil))
(insn 55 54 56 4 (set (reg/f:DI 0 ax [orig:105 _8 ] [105])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [136])
                (const_int 16 [0x10])) [71 st_33->codecpar+0 S8 A64])) "/home/anand/Decode/decode.cpp":174:41 84 {*movdi_internal}
     (nil))
(insn 56 55 57 4 (set (reg:SI 0 ax [orig:106 _9 ] [106])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:105 _8 ] [105])
                (const_int 4 [0x4])) [32 _8->codec_id+0 S4 A32])) "/home/anand/Decode/decode.cpp":174:36 85 {*movsi_internal}
     (nil))
(insn 57 56 58 4 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:106 _9 ] [106])) "/home/anand/Decode/decode.cpp":174:36 85 {*movsi_internal}
     (nil))
(call_insn 58 57 60 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("avcodec_find_decoder") [flags 0x41]  <function_decl 0x75229f322c00 avcodec_find_decoder>) [0 avcodec_find_decoder S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":174:36 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 60 58 61 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [28 dec+0 S8 A64])
        (reg/f:DI 0 ax [orig:122 _35 ] [122])) "/home/anand/Decode/decode.cpp":174:36 discrim 1 84 {*movdi_internal}
     (nil))
(insn 61 60 62 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [28 dec+0 S8 A64])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":175:10 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 62 61 63 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "/home/anand/Decode/decode.cpp":175:10 1130 {*jcc}
     (nil)
 -> 78)
(note 63 62 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 5 (set (reg:SI 0 ax [137])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [31 type+0 S4 A32])) "/home/anand/Decode/decode.cpp":176:21 85 {*movsi_internal}
     (nil))
(insn 65 64 66 5 (set (reg:SI 5 di)
        (reg:SI 0 ax [137])) "/home/anand/Decode/decode.cpp":176:21 85 {*movsi_internal}
     (nil))
(call_insn 66 65 67 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_get_media_type_string") [flags 0x41]  <function_decl 0x7522a0d5ba00 av_get_media_type_string>) [0 av_get_media_type_string S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":176:21 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 67 66 68 5 (set (reg/f:DI 1 dx [orig:107 _10 ] [107])
        (reg:DI 0 ax)) "/home/anand/Decode/decode.cpp":176:21 84 {*movdi_internal}
     (nil))
(insn 68 67 70 5 (set (reg/f:DI 0 ax [orig:108 stderr.26_11 ] [108])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":176:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 70 68 71 5 (set (reg:DI 2 cx [138])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x75229ec0d240 *.LC6>)) "/home/anand/Decode/decode.cpp":176:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 71 70 72 5 (set (reg:DI 4 si)
        (reg:DI 2 cx [138])) "/home/anand/Decode/decode.cpp":176:21 discrim 1 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x75229ec0d240 *.LC6>)
        (nil)))
(insn 72 71 73 5 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:108 stderr.26_11 ] [108])) "/home/anand/Decode/decode.cpp":176:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 73 72 74 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":176:21 discrim 1 87 {*movqi_internal}
     (nil))
(call_insn 74 73 75 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":176:21 discrim 1 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 75 74 188 5 (set (reg:SI 0 ax [orig:120 _23 ] [120])
        (const_int -22 [0xffffffffffffffea])) "/home/anand/Decode/decode.cpp":178:21 85 {*movsi_internal}
     (nil))
(jump_insn 188 75 189 5 (set (pc)
        (label_ref 177)) "/home/anand/Decode/decode.cpp":178:21 1131 {jump}
     (nil)
 -> 177)
(barrier 189 188 78)
(code_label 78 189 79 6 25 (nil) [1 uses])
(note 79 78 80 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 6 (set (reg:DI 0 ax [139])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [28 dec+0 S8 A64])) "/home/anand/Decode/decode.cpp":182:43 84 {*movdi_internal}
     (nil))
(insn 81 80 82 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [139])) "/home/anand/Decode/decode.cpp":182:43 84 {*movdi_internal}
     (nil))
(call_insn 82 81 84 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("avcodec_alloc_context3") [flags 0x41]  <function_decl 0x75229f392d00 avcodec_alloc_context3>) [0 avcodec_alloc_context3 S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":182:43 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 84 82 85 6 (set (reg/f:DI 1 dx [140])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [80 dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":182:19 discrim 1 84 {*movdi_internal}
     (nil))
(insn 85 84 86 6 (set (mem/f:DI (reg/f:DI 1 dx [140]) [25 *dec_ctx_39(D)+0 S8 A64])
        (reg/f:DI 0 ax [orig:109 _12 ] [109])) "/home/anand/Decode/decode.cpp":182:19 discrim 1 84 {*movdi_internal}
     (nil))
(insn 86 85 87 6 (set (reg/f:DI 0 ax [141])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [80 dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":183:15 84 {*movdi_internal}
     (nil))
(insn 87 86 88 6 (set (reg/f:DI 0 ax [orig:110 _13 ] [110])
        (mem/f:DI (reg/f:DI 0 ax [141]) [25 *dec_ctx_39(D)+0 S8 A64])) "/home/anand/Decode/decode.cpp":183:15 84 {*movdi_internal}
     (nil))
(insn 88 87 89 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:110 _13 ] [110])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":183:10 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 89 88 90 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) "/home/anand/Decode/decode.cpp":183:10 1130 {*jcc}
     (nil)
 -> 105)
(note 90 89 91 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 7 (set (reg:SI 0 ax [142])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [31 type+0 S4 A32])) "/home/anand/Decode/decode.cpp":184:21 85 {*movsi_internal}
     (nil))
(insn 92 91 93 7 (set (reg:SI 5 di)
        (reg:SI 0 ax [142])) "/home/anand/Decode/decode.cpp":184:21 85 {*movsi_internal}
     (nil))
(call_insn 93 92 94 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_get_media_type_string") [flags 0x41]  <function_decl 0x7522a0d5ba00 av_get_media_type_string>) [0 av_get_media_type_string S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":184:21 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 94 93 95 7 (set (reg/f:DI 1 dx [orig:111 _14 ] [111])
        (reg:DI 0 ax)) "/home/anand/Decode/decode.cpp":184:21 84 {*movdi_internal}
     (nil))
(insn 95 94 97 7 (set (reg/f:DI 0 ax [orig:112 stderr.27_15 ] [112])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":184:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 97 95 98 7 (set (reg:DI 2 cx [143])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x75229ec0d2d0 *.LC7>)) "/home/anand/Decode/decode.cpp":184:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 98 97 99 7 (set (reg:DI 4 si)
        (reg:DI 2 cx [143])) "/home/anand/Decode/decode.cpp":184:21 discrim 1 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x75229ec0d2d0 *.LC7>)
        (nil)))
(insn 99 98 100 7 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:112 stderr.27_15 ] [112])) "/home/anand/Decode/decode.cpp":184:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 100 99 101 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":184:21 discrim 1 87 {*movqi_internal}
     (nil))
(call_insn 101 100 102 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":184:21 discrim 1 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 102 101 190 7 (set (reg:SI 0 ax [orig:120 _23 ] [120])
        (const_int -12 [0xfffffffffffffff4])) "/home/anand/Decode/decode.cpp":186:21 85 {*movsi_internal}
     (nil))
(jump_insn 190 102 191 7 (set (pc)
        (label_ref 177)) "/home/anand/Decode/decode.cpp":186:21 1131 {jump}
     (nil)
 -> 177)
(barrier 191 190 105)
(code_label 105 191 106 8 26 (nil) [1 uses])
(note 106 105 107 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 8 (set (reg/f:DI 0 ax [144])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [70 st+0 S8 A64])) "/home/anand/Decode/decode.cpp":190:65 84 {*movdi_internal}
     (nil))
(insn 108 107 109 8 (set (reg/f:DI 1 dx [orig:113 _16 ] [113])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [144])
                (const_int 16 [0x10])) [71 st_33->codecpar+0 S8 A64])) "/home/anand/Decode/decode.cpp":190:65 84 {*movdi_internal}
     (nil))
(insn 109 108 110 8 (set (reg/f:DI 0 ax [145])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [80 dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":190:50 84 {*movdi_internal}
     (nil))
(insn 110 109 111 8 (set (reg/f:DI 0 ax [orig:114 _17 ] [114])
        (mem/f:DI (reg/f:DI 0 ax [145]) [25 *dec_ctx_39(D)+0 S8 A64])) "/home/anand/Decode/decode.cpp":190:50 84 {*movdi_internal}
     (nil))
(insn 111 110 112 8 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:113 _16 ] [113])) "/home/anand/Decode/decode.cpp":190:50 84 {*movdi_internal}
     (nil))
(insn 112 111 113 8 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:114 _17 ] [114])) "/home/anand/Decode/decode.cpp":190:50 84 {*movdi_internal}
     (nil))
(call_insn 113 112 115 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("avcodec_parameters_to_context") [flags 0x41]  <function_decl 0x75229f3cb200 avcodec_parameters_to_context>) [0 avcodec_parameters_to_context S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":190:50 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 115 113 118 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ret+0 S4 A64])
        (reg:SI 0 ax [orig:123 _42 ] [123])) "/home/anand/Decode/decode.cpp":190:50 discrim 1 85 {*movsi_internal}
     (nil))
(insn 118 115 119 8 (set (reg:SI 0 ax [147])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ret+0 S4 A64])) "/home/anand/Decode/decode.cpp":190:76 discrim 1 85 {*movsi_internal}
     (nil))
(insn 119 118 121 8 (parallel [
            (set (reg:SI 0 ax [146])
                (lshiftrt:SI (reg:SI 0 ax [147])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":190:76 discrim 1 979 {*lshrsi3_1}
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 ret+0 S4 A64])
            (const_int 31 [0x1f]))
        (nil)))
(insn 121 119 122 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:124 retval.28_44 ] [124])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":190:10 discrim 1 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 122 121 123 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) "/home/anand/Decode/decode.cpp":190:10 discrim 1 1130 {*jcc}
     (nil)
 -> 138)
(note 123 122 124 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 9 (set (reg:SI 0 ax [148])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [31 type+0 S4 A32])) "/home/anand/Decode/decode.cpp":191:21 85 {*movsi_internal}
     (nil))
(insn 125 124 126 9 (set (reg:SI 5 di)
        (reg:SI 0 ax [148])) "/home/anand/Decode/decode.cpp":191:21 85 {*movsi_internal}
     (nil))
(call_insn 126 125 127 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_get_media_type_string") [flags 0x41]  <function_decl 0x7522a0d5ba00 av_get_media_type_string>) [0 av_get_media_type_string S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":191:21 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 127 126 128 9 (set (reg/f:DI 1 dx [orig:115 _18 ] [115])
        (reg:DI 0 ax)) "/home/anand/Decode/decode.cpp":191:21 84 {*movdi_internal}
     (nil))
(insn 128 127 130 9 (set (reg/f:DI 0 ax [orig:116 stderr.29_19 ] [116])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":191:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 130 128 131 9 (set (reg:DI 2 cx [149])
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x75229ec0d360 *.LC8>)) "/home/anand/Decode/decode.cpp":191:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 131 130 132 9 (set (reg:DI 4 si)
        (reg:DI 2 cx [149])) "/home/anand/Decode/decode.cpp":191:21 discrim 1 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x75229ec0d360 *.LC8>)
        (nil)))
(insn 132 131 133 9 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:116 stderr.29_19 ] [116])) "/home/anand/Decode/decode.cpp":191:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 133 132 134 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":191:21 discrim 1 87 {*movqi_internal}
     (nil))
(call_insn 134 133 135 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":191:21 discrim 1 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 135 134 192 9 (set (reg:SI 0 ax [orig:120 _23 ] [120])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ret+0 S4 A64])) "/home/anand/Decode/decode.cpp":193:21 85 {*movsi_internal}
     (nil))
(jump_insn 192 135 193 9 (set (pc)
        (label_ref 177)) "/home/anand/Decode/decode.cpp":193:21 1131 {jump}
     (nil)
 -> 177)
(barrier 193 192 138)
(code_label 138 193 139 10 27 (nil) [1 uses])
(note 139 138 140 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 10 (set (reg/f:DI 0 ax [150])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [80 dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":197:34 84 {*movdi_internal}
     (nil))
(insn 141 140 142 10 (set (reg/f:DI 0 ax [orig:117 _20 ] [117])
        (mem/f:DI (reg/f:DI 0 ax [150]) [25 *dec_ctx_39(D)+0 S8 A64])) "/home/anand/Decode/decode.cpp":197:34 84 {*movdi_internal}
     (nil))
(insn 142 141 143 10 (set (reg:DI 2 cx [151])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [28 dec+0 S8 A64])) "/home/anand/Decode/decode.cpp":197:34 84 {*movdi_internal}
     (nil))
(insn 143 142 144 10 (set (reg:DI 1 dx)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":197:34 84 {*movdi_internal}
     (nil))
(insn 144 143 145 10 (set (reg:DI 4 si)
        (reg:DI 2 cx [151])) "/home/anand/Decode/decode.cpp":197:34 84 {*movdi_internal}
     (nil))
(insn 145 144 146 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:117 _20 ] [117])) "/home/anand/Decode/decode.cpp":197:34 84 {*movdi_internal}
     (nil))
(call_insn 146 145 148 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("avcodec_open2") [flags 0x41]  <function_decl 0x75229f3cb300 avcodec_open2>) [0 avcodec_open2 S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":197:34 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 148 146 151 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ret+0 S4 A64])
        (reg:SI 0 ax [orig:125 _46 ] [125])) "/home/anand/Decode/decode.cpp":197:34 discrim 1 85 {*movsi_internal}
     (nil))
(insn 151 148 152 10 (set (reg:SI 0 ax [153])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ret+0 S4 A64])) "/home/anand/Decode/decode.cpp":197:57 discrim 1 85 {*movsi_internal}
     (nil))
(insn 152 151 154 10 (parallel [
            (set (reg:SI 0 ax [152])
                (lshiftrt:SI (reg:SI 0 ax [153])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":197:57 discrim 1 979 {*lshrsi3_1}
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 ret+0 S4 A64])
            (const_int 31 [0x1f]))
        (nil)))
(insn 154 152 155 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:126 retval.30_48 ] [126])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":197:10 discrim 1 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 155 154 156 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 171)
            (pc))) "/home/anand/Decode/decode.cpp":197:10 discrim 1 1130 {*jcc}
     (nil)
 -> 171)
(note 156 155 157 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 11 (set (reg:SI 0 ax [154])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [31 type+0 S4 A32])) "/home/anand/Decode/decode.cpp":198:21 85 {*movsi_internal}
     (nil))
(insn 158 157 159 11 (set (reg:SI 5 di)
        (reg:SI 0 ax [154])) "/home/anand/Decode/decode.cpp":198:21 85 {*movsi_internal}
     (nil))
(call_insn 159 158 160 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_get_media_type_string") [flags 0x41]  <function_decl 0x7522a0d5ba00 av_get_media_type_string>) [0 av_get_media_type_string S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":198:21 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 160 159 161 11 (set (reg/f:DI 1 dx [orig:118 _21 ] [118])
        (reg:DI 0 ax)) "/home/anand/Decode/decode.cpp":198:21 84 {*movdi_internal}
     (nil))
(insn 161 160 163 11 (set (reg/f:DI 0 ax [orig:119 stderr.31_22 ] [119])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":198:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 163 161 164 11 (set (reg:DI 2 cx [155])
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x75229ec0d3f0 *.LC9>)) "/home/anand/Decode/decode.cpp":198:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 164 163 165 11 (set (reg:DI 4 si)
        (reg:DI 2 cx [155])) "/home/anand/Decode/decode.cpp":198:21 discrim 1 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x75229ec0d3f0 *.LC9>)
        (nil)))
(insn 165 164 166 11 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:119 stderr.31_22 ] [119])) "/home/anand/Decode/decode.cpp":198:21 discrim 1 84 {*movdi_internal}
     (nil))
(insn 166 165 167 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":198:21 discrim 1 87 {*movqi_internal}
     (nil))
(call_insn 167 166 168 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":198:21 discrim 1 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 168 167 194 11 (set (reg:SI 0 ax [orig:120 _23 ] [120])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ret+0 S4 A64])) "/home/anand/Decode/decode.cpp":200:21 85 {*movsi_internal}
     (nil))
(jump_insn 194 168 195 11 (set (pc)
        (label_ref 177)) "/home/anand/Decode/decode.cpp":200:21 1131 {jump}
     (nil)
 -> 177)
(barrier 195 194 171)
(code_label 171 195 172 12 28 (nil) [1 uses])
(note 172 171 173 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 12 (set (reg/f:DI 0 ax [156])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [23 stream_idx+0 S8 A64])) "/home/anand/Decode/decode.cpp":202:22 84 {*movdi_internal}
     (nil))
(insn 174 173 175 12 (set (reg:SI 1 dx [157])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 stream_index+0 S4 A32])) "/home/anand/Decode/decode.cpp":202:22 85 {*movsi_internal}
     (nil))
(insn 175 174 176 12 (set (mem:SI (reg/f:DI 0 ax [156]) [1 *stream_idx_49(D)+0 S4 A32])
        (reg:SI 1 dx [157])) "/home/anand/Decode/decode.cpp":202:22 85 {*movsi_internal}
     (nil))
(insn 176 175 177 12 (set (reg:SI 0 ax [orig:120 _23 ] [120])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":205:13 85 {*movsi_internal}
     (nil))
(code_label 177 176 178 13 24 (nil) [5 uses])
(note 178 177 184 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 184 178 196 13 (use (reg/i:SI 0 ax)) "/home/anand/Decode/decode.cpp":206:2 -1
     (nil))
(note 196 184 0 NOTE_INSN_DELETED)

;; Function get_format_from_sample_fmt (_ZL26get_format_from_sample_fmtPPKc14AVSampleFormat, funcdef_no=1283, decl_uid=34552, cgraph_uid=607, symbol_order=1270)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=176, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=160, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
         Considering alt=2 of insn 2:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 2:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 2:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 2:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 3:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 3:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 5:   (0) =m  (1) m  (2) =&r
            2 Early clobber: reject++
          overall=1,losers=0,rld_nregs=0
      Choosing alt 0 in insn 5:  (0) =m  (1) m  (2) =&r {stack_protect_set_1_di_di}
         Considering alt=0 of insn 8:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 8:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 9:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 9:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 9:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 9:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 10:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 10:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 10:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 10:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 10:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 11:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 11:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 11:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 11:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 12:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 12:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 12:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 12:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 12:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 13:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 13:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 14:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 14:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 14:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 14:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 15:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 15:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 15:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 15:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 15:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 16:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 16:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 16:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 16:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 17:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 17:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 17:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 17:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 17:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 18:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 18:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 19:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 19:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 19:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 19:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 20:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 20:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 20:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 20:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 20:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 21:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 21:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 21:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 21:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 22:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 22:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 22:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 22:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 22:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 23:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 23:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 24:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 24:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 24:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 24:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 25:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 25:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 25:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 25:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 25:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 26:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 26:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 26:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 26:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 27:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 27:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 27:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 27:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 27:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 28:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 28:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 29:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 29:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 29:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 29:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 30:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 30:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 30:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 30:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 30:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 31:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 31:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 31:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 31:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 32:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 32:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 32:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 32:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 32:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 33:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 33:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 34:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=3 of insn 34:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=4 of insn 34:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=5 of insn 34:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 34:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 35:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 35:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 35:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 39:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          overall=10,losers=1,rld_nregs=1
         Considering alt=1 of insn 39:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            Bad operand -- refuse
         Considering alt=2 of insn 39:   (0) r  (1) r  (2) 0
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=3 of insn 39:   (0) r  (1) r  (2) le
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 39:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=1 of insn 39:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=2 of insn 39:   (0) r  (1) r  (2) 0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=3 of insn 39:   (0) r  (1) r  (2) le
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
      Choosing alt 3 in insn 39:  (0) r  (1) r  (2) le {*adddi_1}
         Considering alt=3 of insn 40:   (0) r  (1) rmWz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 40:  (0) r  (1) rmWz {*zero_extendsidi2}
         Considering alt=0 of insn 42:   (0) =rm  (1) 0  (2) cJ
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 42:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
         Considering alt=0 of insn 43:   (0) =rm  (1) %0  (2) re
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 43:   (0) =rm  (1) %0  (2) re
            overall=6,losers=1 -- refuse
         Considering alt=1 of insn 43:   (0) r  (1) 0  (2) BM
            overall=6,losers=1 -- refuse
         Considering alt=2 of insn 43:   (0) r  (1) r  (2) 0
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 43:  (0) =rm  (1) %0  (2) re {*adddi_1}
         Considering alt=0 of insn 44:   (0) =rm  (1) 0  (2) cJ
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 44:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
         Considering alt=0 of insn 46:   (0) =rm  (1) %0  (2) re
          overall=6,losers=1,rld_nregs=1
         Considering alt=1 of insn 46:   (0) r  (1) 0  (2) BM
            Bad operand -- refuse
         Considering alt=2 of insn 46:   (0) r  (1) r  (2) 0
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 46:   (0) =rm  (1) %0  (2) re
          overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 46
      Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*adddi_1}
         Considering alt=2 of insn 47:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 47:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 47:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 47:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 47:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 48:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 48:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 48:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 49:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 50:   (0) rm  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 50:  (0) rm  (1) re {*cmpsi_1}
         Considering alt=2 of insn 53:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 53:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 53:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 54:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 54:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 54:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 55:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 55:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 55:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 56:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 56:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 56:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 56:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 56:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 57:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 62:   (0) =rm  (1) %0  (2) re
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 62:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=17,losers=2 -- refuse
         Considering alt=1 of insn 62:   (0) r  (1) 0  (2) BM
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=2 of insn 62:   (0) r  (1) r  (2) 0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=3 of insn 62:   (0) r  (1) r  (2) le
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
      Choosing alt 0 in insn 62:  (0) =rm  (1) %0  (2) re {*addsi_1}
         Considering alt=0 of insn 68:   (0) rm  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 68:  (0) rm  (1) re {*cmpsi_1}
         Considering alt=0 of insn 71:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 73:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 73:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 75:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 75:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 75:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 77:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 77:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 77:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 77:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 80:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 80:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 80:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 80:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 80:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 81:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 81:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 82:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 91:   (1) m  (2) m  (3) =&r
            3 Scratch win: reject+=2
          overall=2,losers=0,rld_nregs=0
      Choosing alt 0 in insn 91:  (1) m  (2) m  (3) =&r {stack_protect_test_1_di}
         Considering alt=0 of insn 93:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 93:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6 7
EBB 8 9
EBB 10

********** Pseudo live ranges #1: **********

  BB 9
   Insn 93: point = 0, n_alt = 0
  BB 10
   Insn 97: point = 0, n_alt = -1
   Insn 96: point = 0, n_alt = -2
  BB 8
   Insn 92: point = 2, n_alt = -1
   Insn 91: point = 2, n_alt = 0
   Insn 87: point = 4, n_alt = -2
  BB 4
   Insn 103: point = 7, n_alt = -1
   Insn 57: point = 7, n_alt = 0
   Insn 56: point = 8, n_alt = 5
   Insn 55: point = 9, n_alt = 3
   Insn 54: point = 10, n_alt = 3
   Insn 53: point = 12, n_alt = 3
  BB 7
   Insn 82: point = 13, n_alt = 0
   Insn 81: point = 14, n_alt = 0
   Insn 80: point = 14, n_alt = 3
   Insn 79: point = 14, n_alt = -2
   Insn 78: point = 15, n_alt = -2
   Insn 77: point = 16, n_alt = 4
   Insn 76: point = 17, n_alt = -2
   Insn 75: point = 18, n_alt = 3
   Insn 74: point = 19, n_alt = -2
   Insn 73: point = 20, n_alt = 0
   Insn 72: point = 20, n_alt = -2
   Insn 71: point = 21, n_alt = 0
  BB 6
   Insn 69: point = 22, n_alt = -1
   Insn 68: point = 22, n_alt = 0
  BB 2
   Insn 101: point = 22, n_alt = -1
   Insn 35: point = 22, n_alt = 1
   Insn 34: point = 22, n_alt = 5
   Insn 33: point = 23, n_alt = 3
   Insn 32: point = 24, n_alt = 5
   Insn 31: point = 25, n_alt = 4
   Insn 30: point = 26, n_alt = 5
   Insn 29: point = 27, n_alt = 4
   Insn 28: point = 28, n_alt = 1
   Insn 27: point = 28, n_alt = 5
   Insn 26: point = 29, n_alt = 4
   Insn 25: point = 30, n_alt = 5
   Insn 24: point = 31, n_alt = 4
   Insn 23: point = 32, n_alt = 1
   Insn 22: point = 32, n_alt = 5
   Insn 21: point = 33, n_alt = 4
   Insn 20: point = 34, n_alt = 5
   Insn 19: point = 35, n_alt = 4
   Insn 18: point = 36, n_alt = 1
   Insn 17: point = 36, n_alt = 5
   Insn 16: point = 37, n_alt = 4
   Insn 15: point = 38, n_alt = 5
   Insn 14: point = 39, n_alt = 4
   Insn 13: point = 40, n_alt = 1
   Insn 12: point = 40, n_alt = 5
   Insn 11: point = 41, n_alt = 4
   Insn 10: point = 42, n_alt = 5
   Insn 9: point = 43, n_alt = 4
   Insn 8: point = 44, n_alt = 1
   Insn 5: point = 44, n_alt = 0
   Insn 3: point = 46, n_alt = 1
   Insn 2: point = 46, n_alt = 5
  BB 5
   Insn 62: point = 46, n_alt = 0
  BB 3
   Insn 51: point = 46, n_alt = -1
   Insn 50: point = 46, n_alt = 0
   Insn 49: point = 47, n_alt = 0
   Insn 48: point = 49, n_alt = 3
   Insn 47: point = 50, n_alt = 5
   Insn 46: point = 51, n_alt = 0
   Insn 45: point = 53, n_alt = -2
   Insn 44: point = 55, n_alt = 0
   Insn 43: point = 57, n_alt = 0
   Insn 42: point = 59, n_alt = 0
   Insn 41: point = 60, n_alt = -2
   Insn 40: point = 61, n_alt = 3
   Insn 39: point = 62, n_alt = 3
 r98: [46..47]
 r99: [8..10]
 r100: [17..19]
 r101: [14..18]
 r102: [13..13] [5..7]
 r103: [0..4]
 r104: [44..45]
 r105: [42..43]
 r106: [40..41]
 r107: [38..39]
 r108: [36..37]
 r109: [34..35]
 r110: [32..33]
 r111: [30..31]
 r112: [28..29]
 r113: [26..27]
 r114: [24..25]
 r115: [22..23]
 r116: [52..62]
 r117: [58..61]
 r118: [56..60] [52..53]
 r119: [54..55]
 r120: [50..51]
 r121: [48..49]
 r122: [11..12]
 r123: [8..9]
 r124: [20..21]
 r125: [15..16]
 r127: [2..3]
Compressing live ranges: from 63 to 51 - 80%
Ranges after the compression:
 r98: [39..40]
 r99: [4..5]
 r100: [11..12]
 r101: [9..12]
 r102: [8..8] [2..3]
 r103: [0..1]
 r104: [37..38]
 r105: [35..36]
 r106: [33..34]
 r107: [31..32]
 r108: [29..30]
 r109: [27..28]
 r110: [25..26]
 r111: [23..24]
 r112: [21..22]
 r113: [19..20]
 r114: [17..18]
 r115: [15..16]
 r116: [45..50]
 r117: [49..50]
 r118: [49..50] [45..46]
 r119: [47..48]
 r120: [43..44]
 r121: [41..42]
 r122: [6..7]
 r123: [4..5]
 r124: [13..14]
 r125: [9..10]
 r127: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=176, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=160, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 49
changing reg in insn 50
changing reg in insn 54
changing reg in insn 56
changing reg in insn 74
changing reg in insn 76
changing reg in insn 75
changing reg in insn 79
changing reg in insn 82
changing reg in insn 57
changing reg in insn 87
changing reg in insn 87
changing reg in insn 96
changing reg in insn 5
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 39
changing reg in insn 40
changing reg in insn 43
changing reg in insn 41
changing reg in insn 43
changing reg in insn 45
changing reg in insn 43
changing reg in insn 42
changing reg in insn 41
changing reg in insn 44
changing reg in insn 43
changing reg in insn 42
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 71
changing reg in insn 72
changing reg in insn 77
changing reg in insn 78
changing reg in insn 91
deleting insn with uid = 45.
deleting insn with uid = 76.
deleting insn with uid = 87.
deleting insn with uid = 96.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 93.


get_format_from_sample_fmt

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 76 [r16] 77 [r17] 78 [r18] 79 [r19] 80 [r20] 81 [r21] 82 [r22] 83 [r23] 84 [r24] 85 [r25] 86 [r26] 87 [r27] 88 [r28] 89 [r29] 90 [r30] 91 [r31]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={30d,26u} r1={8d,4u,1e} r2={6d,2u} r4={5d,2u} r5={6d,3u} r6={1d,42u} r7={1d,13u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={13d,3u} r18={3d} r19={1d,1u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} 
;;    total ref usage 409{312d,96u,1e} in 68{65 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [81 fmt+0 S8 A64])
        (reg:DI 5 di [ fmt ])) "/home/anand/Decode/decode.cpp":210:2 84 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [39 sample_fmt+0 S4 A32])
        (reg:SI 4 si [ sample_fmt ])) "/home/anand/Decode/decode.cpp":210:2 85 {*movsi_internal}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [8 D.37286+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [104])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":210:2 1516 {stack_protect_set_1_di_di}
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [39 sample_fmt_entries[0].sample_fmt+0 S4 A128])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":214:8 85 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [105])
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x75229ec0dea0 *.LC10>)) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [43 sample_fmt_entries[0].fmt_be+0 S8 A64])
        (reg/f:DI 0 ax [105])) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [106])
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x75229ec0dea0 *.LC10>)) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [43 sample_fmt_entries[0].fmt_le+0 S8 A128])
        (reg/f:DI 0 ax [106])) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [39 sample_fmt_entries[1].sample_fmt+0 S4 A64])
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":214:8 85 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 0 ax [107])
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x75229ec0df30 *.LC11>)) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [43 sample_fmt_entries[1].fmt_be+0 S8 A128])
        (reg/f:DI 0 ax [107])) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [108])
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x75229ec1c000 *.LC12>)) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [43 sample_fmt_entries[1].fmt_le+0 S8 A64])
        (reg/f:DI 0 ax [108])) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [39 sample_fmt_entries[2].sample_fmt+0 S4 A128])
        (const_int 2 [0x2])) "/home/anand/Decode/decode.cpp":214:8 85 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [109])
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x75229ec1c090 *.LC13>)) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [43 sample_fmt_entries[2].fmt_be+0 S8 A64])
        (reg/f:DI 0 ax [109])) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 0 ax [110])
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x75229ec1c120 *.LC14>)) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [43 sample_fmt_entries[2].fmt_le+0 S8 A128])
        (reg/f:DI 0 ax [110])) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [39 sample_fmt_entries[3].sample_fmt+0 S4 A64])
        (const_int 3 [0x3])) "/home/anand/Decode/decode.cpp":214:8 85 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 0 ax [111])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x75229ec1c1b0 *.LC15>)) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [43 sample_fmt_entries[3].fmt_be+0 S8 A128])
        (reg/f:DI 0 ax [111])) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg/f:DI 0 ax [112])
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x75229ec1c240 *.LC16>)) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [43 sample_fmt_entries[3].fmt_le+0 S8 A64])
        (reg/f:DI 0 ax [112])) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [39 sample_fmt_entries[4].sample_fmt+0 S4 A128])
        (const_int 4 [0x4])) "/home/anand/Decode/decode.cpp":214:8 85 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 0 ax [113])
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x75229ec1c2d0 *.LC17>)) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [43 sample_fmt_entries[4].fmt_be+0 S8 A64])
        (reg/f:DI 0 ax [113])) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg/f:DI 0 ax [114])
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x75229ec1c360 *.LC18>)) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [43 sample_fmt_entries[4].fmt_le+0 S8 A128])
        (reg/f:DI 0 ax [114])) "/home/anand/Decode/decode.cpp":214:8 84 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (set (reg/f:DI 0 ax [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [81 fmt+0 S8 A64])) "/home/anand/Decode/decode.cpp":221:11 84 {*movdi_internal}
     (nil))
(insn 34 33 35 2 (set (mem/f:DI (reg/f:DI 0 ax [115]) [43 *fmt_25(D)+0 S8 A64])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":221:11 84 {*movdi_internal}
     (nil))
(insn 35 34 101 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [1 i+0 S4 A32])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":223:13 85 {*movsi_internal}
     (nil))
(jump_insn 101 35 102 2 (set (pc)
        (label_ref 63)) "/home/anand/Decode/decode.cpp":223:6 1131 {jump}
     (nil)
 -> 63)
(barrier 102 101 65)
(code_label 65 102 38 3 33 (nil) [1 uses])
(note 38 65 39 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 3 (parallel [
            (set (reg:DI 2 cx [116])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":224:35 272 {*adddi_1}
     (nil))
(insn 40 39 41 3 (set (reg:DI 1 dx [117])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])) [1 i+0 S4 A32]))) "/home/anand/Decode/decode.cpp":224:35 164 {*zero_extendsidi2}
     (nil))
(insn 41 40 42 3 (set (reg:DI 0 ax [118])
        (reg:DI 1 dx [117])) "/home/anand/Decode/decode.cpp":224:35 84 {*movdi_internal}
     (nil))
(insn 42 41 43 3 (parallel [
            (set (reg:DI 0 ax [118])
                (ashift:DI (reg:DI 0 ax [118])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":224:35 912 {*ashldi3_1}
     (nil))
(insn 43 42 44 3 (parallel [
            (set (reg:DI 0 ax [118])
                (plus:DI (reg:DI 0 ax [118])
                    (reg:DI 1 dx [117])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":224:35 272 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [117])
            (const_int 3 [0x3]))
        (nil)))
(insn 44 43 46 3 (parallel [
            (set (reg:DI 0 ax [119])
                (ashift:DI (reg:DI 0 ax [118])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":224:35 912 {*ashldi3_1}
     (nil))
(insn 46 44 47 3 (parallel [
            (set (reg:DI 0 ax [120])
                (plus:DI (reg:DI 0 ax [118])
                    (reg:DI 2 cx [116])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":224:35 272 {*adddi_1}
     (nil))
(insn 47 46 48 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [76 entry+0 S8 A64])
        (reg:DI 0 ax [120])) "/home/anand/Decode/decode.cpp":224:35 84 {*movdi_internal}
     (nil))
(insn 48 47 49 3 (set (reg/f:DI 0 ax [121])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [76 entry+0 S8 A64])) "/home/anand/Decode/decode.cpp":225:35 84 {*movdi_internal}
     (nil))
(insn 49 48 50 3 (set (reg:SI 0 ax [orig:98 _1 ] [98])
        (mem:SI (reg/f:DI 0 ax [121]) [39 entry_34->sample_fmt+0 S4 A64])) "/home/anand/Decode/decode.cpp":225:35 85 {*movsi_internal}
     (nil))
(insn 50 49 51 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [39 sample_fmt+0 S4 A32])
            (reg:SI 0 ax [orig:98 _1 ] [98]))) "/home/anand/Decode/decode.cpp":225:10 11 {*cmpsi_1}
     (nil))
(jump_insn 51 50 52 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "/home/anand/Decode/decode.cpp":225:10 1130 {*jcc}
     (nil)
 -> 60)
(note 52 51 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 4 (set (reg/f:DI 0 ax [122])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [76 entry+0 S8 A64])) "/home/anand/Decode/decode.cpp":226:21 84 {*movdi_internal}
     (nil))
(insn 54 53 55 4 (set (reg/f:DI 1 dx [orig:99 _2 ] [99])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [122])
                (const_int 16 [0x10])) [43 entry_34->fmt_le+0 S8 A64])) "/home/anand/Decode/decode.cpp":226:21 84 {*movdi_internal}
     (nil))
(insn 55 54 56 4 (set (reg/f:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [81 fmt+0 S8 A64])) "/home/anand/Decode/decode.cpp":226:19 84 {*movdi_internal}
     (nil))
(insn 56 55 57 4 (set (mem/f:DI (reg/f:DI 0 ax [123]) [43 *fmt_25(D)+0 S8 A64])
        (reg/f:DI 1 dx [orig:99 _2 ] [99])) "/home/anand/Decode/decode.cpp":226:19 84 {*movdi_internal}
     (nil))
(insn 57 56 103 4 (set (reg:SI 0 ax [orig:102 _6 ] [102])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":227:21 85 {*movsi_internal}
     (nil))
(jump_insn 103 57 104 4 (set (pc)
        (label_ref 85)) "/home/anand/Decode/decode.cpp":227:21 1131 {jump}
     (nil)
 -> 85)
(barrier 104 103 60)
(code_label 60 104 61 5 31 (nil) [1 uses])
(note 61 60 62 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -140 [0xffffffffffffff74])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -140 [0xffffffffffffff74])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":223:6 discrim 2 271 {*addsi_1}
     (nil))
(code_label 63 62 64 6 30 (nil) [1 uses])
(note 64 63 68 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 68 64 69 6 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])) [1 i+0 S4 A32])
            (const_int 4 [0x4]))) "/home/anand/Decode/decode.cpp":223:20 discrim 1 11 {*cmpsi_1}
     (nil))
(jump_insn 69 68 70 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "/home/anand/Decode/decode.cpp":223:20 discrim 1 1130 {*jcc}
     (nil)
 -> 65)
(note 70 69 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 7 (set (reg:SI 0 ax [124])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [39 sample_fmt+0 S4 A32])) "/home/anand/Decode/decode.cpp":231:13 85 {*movsi_internal}
     (nil))
(insn 72 71 73 7 (set (reg:SI 5 di)
        (reg:SI 0 ax [124])) "/home/anand/Decode/decode.cpp":231:13 85 {*movsi_internal}
     (nil))
(call_insn 73 72 74 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_get_sample_fmt_name") [flags 0x41]  <function_decl 0x7522a0d55800 av_get_sample_fmt_name>) [0 av_get_sample_fmt_name S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":231:13 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 74 73 75 7 (set (reg/f:DI 1 dx [orig:100 _3 ] [100])
        (reg:DI 0 ax)) "/home/anand/Decode/decode.cpp":231:13 84 {*movdi_internal}
     (nil))
(insn 75 74 77 7 (set (reg/f:DI 0 ax [orig:101 stderr.32_4 ] [101])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":231:13 discrim 1 84 {*movdi_internal}
     (nil))
(insn 77 75 78 7 (set (reg:DI 2 cx [125])
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x75229ec1c3f0 *.LC19>)) "/home/anand/Decode/decode.cpp":231:13 discrim 1 84 {*movdi_internal}
     (nil))
(insn 78 77 79 7 (set (reg:DI 4 si)
        (reg:DI 2 cx [125])) "/home/anand/Decode/decode.cpp":231:13 discrim 1 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x75229ec1c3f0 *.LC19>)
        (nil)))
(insn 79 78 80 7 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:101 stderr.32_4 ] [101])) "/home/anand/Decode/decode.cpp":231:13 discrim 1 84 {*movdi_internal}
     (nil))
(insn 80 79 81 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":231:13 discrim 1 87 {*movqi_internal}
     (nil))
(call_insn 81 80 82 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":231:13 discrim 1 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 82 81 85 7 (set (reg:SI 0 ax [orig:102 _6 ] [102])
        (const_int -1 [0xffffffffffffffff])) "/home/anand/Decode/decode.cpp":234:14 85 {*movsi_internal}
     (nil))
(code_label 85 82 86 8 34 (nil) [1 uses])
(note 86 85 91 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 91 86 92 8 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [8 D.37286+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 1 dx [127]))
        ]) "/home/anand/Decode/decode.cpp":235:2 1530 {stack_protect_test_1_di}
     (nil))
(jump_insn 92 91 99 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "/home/anand/Decode/decode.cpp":235:2 1130 {*jcc}
     (nil)
 -> 95)
(note 99 92 93 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 93 99 94 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x75229ec0b500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":235:2 1137 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 94 93 95)
(code_label 95 94 100 10 35 (nil) [1 uses])
(note 100 95 97 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 97 100 105 10 (use (reg/i:SI 0 ax)) "/home/anand/Decode/decode.cpp":235:2 -1
     (nil))
(note 105 97 0 NOTE_INSN_DELETED)

;; Function main (main, funcdef_no=1284, decl_uid=34601, cgraph_uid=608, symbol_order=1271)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=112, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=64, prev_offset=0)
Can eliminate 19 to 6 (offset=-32, prev_offset=0)
         Considering alt=0 of insn 2:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 2:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 3:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 3:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 3:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 3:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 5:   (0) =m  (1) m  (2) =&r
            2 Early clobber: reject++
          overall=1,losers=0,rld_nregs=0
      Choosing alt 0 in insn 5:  (0) =m  (1) m  (2) =&r {stack_protect_set_1_di_di}
         Considering alt=0 of insn 8:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 8:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 9:   (0) rm  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
         Considering alt=2 of insn 12:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 12:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 13:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 13:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 14:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 14:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 14:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 16:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 16:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 16:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 16:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 19:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 19:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 19:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 19:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 19:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 20:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 20:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 21:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 22:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 22:  (0) rBwBz {*call}
         Considering alt=2 of insn 26:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 26:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 26:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 27:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 27:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 28:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 28:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 28:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 28:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 28:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 29:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 29:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 30:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 30:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 30:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 31:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 31:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 31:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 31:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 31:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 32:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 32:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 32:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 33:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 33:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 34:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 34:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 34:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 34:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 34:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 35:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 35:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 35:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 36:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 36:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 37:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 37:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 39:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 39:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 39:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 39:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 41:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 41:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 45:   (0) =rm  (1) 0  (2) cI
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 45:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
         Considering alt=0 of insn 46:   (0) =Q  (1) Q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 46:  (0) =Q  (1) Q {*movqi_internal}
         Considering alt=0 of insn 47:   (0) q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 47:  (0) q {*cmpqi_ccno_1}
         Considering alt=2 of insn 50:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 50:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 50:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 51:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 51:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 51:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 53:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 53:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 53:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 53:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 56:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 56:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 56:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 56:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 56:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 57:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 57:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 58:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 59:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 59:  (0) rBwBz {*call}
         Considering alt=2 of insn 63:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 63:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 63:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 64:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 64:  (0) r  (1) Z {*movdi_internal}
         Considering alt=0 of insn 66:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 66:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 70:   (0) =rm  (1) 0  (2) cI
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 70:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
         Considering alt=0 of insn 71:   (0) =Q  (1) Q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 71:  (0) =Q  (1) Q {*movqi_internal}
         Considering alt=0 of insn 72:   (0) q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 72:  (0) q {*cmpqi_ccno_1}
         Considering alt=2 of insn 75:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 75:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 75:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 77:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 77:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 78:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 78:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 79:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 79:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 79:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 79:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 81:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 81:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 82:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 83:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 83:  (0) rBwBz {*call}
         Considering alt=2 of insn 87:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 87:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 87:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 88:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 90:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 90:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 90:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 90:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 92:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 92:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 92:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 92:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 94:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 94:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 98:   (0) =rm  (1) 0
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 98:  (0) =rm  (1) 0 {*one_cmplsi2_1}
         Considering alt=0 of insn 99:   (0) =rm  (1) 0  (2) cI
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 99:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
         Considering alt=0 of insn 100:   (0) =Q  (1) Q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 100:  (0) =Q  (1) Q {*movqi_internal}
         Considering alt=0 of insn 101:   (0) q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 101:  (0) q {*cmpqi_ccno_1}
         Considering alt=2 of insn 104:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 104:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 104:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 105:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 105:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 105:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 106:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 107:   (0) =*a  (1) *0
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          overall=20,losers=2,rld_nregs=2
         Considering alt=1 of insn 107:   (0) r  (1) rm
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 107:  (0) r  (1) rm {*extendsidi2_rex64}
         Considering alt=0 of insn 108:   (0) =rm  (1) 0  (2) cJ
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 108:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
         Considering alt=0 of insn 109:   (0) =rm  (1) %0  (2) re
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 109:   (0) =rm  (1) %0  (2) re
            overall=6,losers=1 -- refuse
         Considering alt=1 of insn 109:   (0) r  (1) 0  (2) BM
            overall=6,losers=1 -- refuse
         Considering alt=2 of insn 109:   (0) r  (1) r  (2) 0
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 109:  (0) =rm  (1) %0  (2) re {*adddi_1}
         Considering alt=2 of insn 110:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 110:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 110:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 111:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 111:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 111:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 111:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 111:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 112:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 112:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 112:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 113:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 113:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 113:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 113:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 116:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 116:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 119:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 119:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 119:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 119:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 119:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 120:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 120:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 120:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 121:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 121:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 124:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 124:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 124:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 125:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 125:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 125:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 127:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 127:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 127:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 127:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 130:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 130:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 130:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 130:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 130:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 131:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 131:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 132:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 132:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 132:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 137:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 137:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 137:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 138:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 139:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 139:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 139:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 140:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 140:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 140:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 141:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 142:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 142:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 142:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 143:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 143:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 143:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 144:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 145:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 145:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 145:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 146:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 147:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 148:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 148:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 149:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 153:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 153:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 153:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 153:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 155:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 155:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 155:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 155:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 157:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 157:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 159:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 159:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 159:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 162:   (0) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 162:   (0) ?mr
            Staticly defined alt reject+=6
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 162:  (0) ?mr {*cmpsi_ccno_1}
         Considering alt=2 of insn 165:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 165:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 165:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 167:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 167:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 168:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 168:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 169:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 169:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 169:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 169:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 171:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 171:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 176:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 176:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 177:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 177:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 177:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 180:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 180:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 180:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 181:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 181:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 183:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 183:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 183:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 183:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 185:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 185:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 185:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 185:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 187:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 187:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 191:   (0) =rm  (1) 0
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 191:  (0) =rm  (1) 0 {*one_cmplsi2_1}
         Considering alt=0 of insn 192:   (0) =rm  (1) 0  (2) cI
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 192:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
         Considering alt=0 of insn 193:   (0) =Q  (1) Q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 193:  (0) =Q  (1) Q {*movqi_internal}
         Considering alt=0 of insn 194:   (0) q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 194:  (0) q {*cmpqi_ccno_1}
         Considering alt=2 of insn 197:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 197:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 197:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 198:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 198:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 198:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 199:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 199:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 200:   (0) =*a  (1) *0
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          overall=20,losers=2,rld_nregs=2
         Considering alt=1 of insn 200:   (0) r  (1) rm
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 200:  (0) r  (1) rm {*extendsidi2_rex64}
         Considering alt=0 of insn 201:   (0) =rm  (1) 0  (2) cJ
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 201:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
         Considering alt=0 of insn 202:   (0) =rm  (1) %0  (2) re
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 202:   (0) =rm  (1) %0  (2) re
            overall=6,losers=1 -- refuse
         Considering alt=1 of insn 202:   (0) r  (1) 0  (2) BM
            overall=6,losers=1 -- refuse
         Considering alt=2 of insn 202:   (0) r  (1) r  (2) 0
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 202:  (0) =rm  (1) %0  (2) re {*adddi_1}
         Considering alt=2 of insn 203:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 203:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 203:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 204:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 204:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 204:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 204:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 204:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 205:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 205:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 205:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 206:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 206:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 206:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 206:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 209:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 209:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 212:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 212:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 212:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 212:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 212:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 213:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 213:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 213:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 214:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 214:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 217:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 217:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 217:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 218:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 218:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 218:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 220:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 220:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 220:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 220:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 223:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 223:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 223:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 223:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 223:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 224:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 224:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 225:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 225:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 225:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 230:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 230:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 230:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 231:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 231:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 231:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 232:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 232:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 234:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 234:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 236:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 236:  (0) rBwBz {*call}
         Considering alt=2 of insn 237:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 237:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 237:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 238:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 238:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 241:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 241:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 241:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 242:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 242:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 245:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 245:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 245:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 247:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 247:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 248:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 248:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 249:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 249:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 249:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 249:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 251:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 251:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 252:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 252:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 252:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 257:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 257:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 259:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 259:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 259:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 259:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 259:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 260:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 260:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 260:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 261:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 261:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 264:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 264:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 264:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 266:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 266:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 267:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 267:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 268:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 268:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 268:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 268:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 270:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 270:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 271:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 271:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 271:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 276:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 276:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 278:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 278:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 278:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 278:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 278:  (0) m  (1) re {*movdi_internal}
         Considering alt=2 of insn 279:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 279:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 279:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 280:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 280:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 283:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 283:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 283:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 285:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 285:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 286:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 286:  (0) r  (1) Z {*movdi_internal}
         Considering alt=2 of insn 287:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 287:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 287:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 287:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 289:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 289:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 290:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 290:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 290:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 295:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 295:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 295:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 296:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 296:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 299:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 299:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 299:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 300:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 300:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 300:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 303:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 303:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 303:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 303:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 305:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 305:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 305:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 305:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 305:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 306:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 306:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 309:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 309:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 309:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 310:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 310:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 313:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 313:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 313:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 314:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 314:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 314:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 317:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 317:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 317:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 317:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 319:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 319:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 319:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 319:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 319:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 320:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 320:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 326:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 326:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 326:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 327:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 327:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 328:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 328:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 329:   (0) rm  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 329:  (0) rm  (1) re {*cmpsi_1}
         Considering alt=2 of insn 332:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 332:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 332:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 333:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 333:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 333:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 336:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 336:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 338:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 338:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 338:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 343:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 343:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 343:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 344:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 344:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 345:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 345:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 346:   (0) rm  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 346:  (0) rm  (1) re {*cmpsi_1}
         Considering alt=2 of insn 349:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 349:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 349:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 350:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 350:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 350:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 353:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 353:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 355:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 355:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 355:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 358:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 358:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 358:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 360:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 360:  (0) rBwBz {*call}
         Considering alt=0 of insn 363:   (0) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 363:   (0) ?mr
            Staticly defined alt reject+=6
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 363:  (0) ?mr {*cmpsi_ccno_1}
         Considering alt=2 of insn 370:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 370:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 370:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 371:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 371:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 371:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 374:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 374:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 378:   (0) =rm  (1) 0
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 378:  (0) =rm  (1) 0 {*one_cmplsi2_1}
         Considering alt=0 of insn 379:   (0) =rm  (1) 0  (2) cI
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 379:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
         Considering alt=0 of insn 380:   (0) =Q  (1) Q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 380:  (0) =Q  (1) Q {*movqi_internal}
         Considering alt=0 of insn 382:   (0) q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 382:  (0) q {*cmpqi_ccno_1}
         Considering alt=2 of insn 386:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 386:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 386:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 387:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 387:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 390:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 390:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 390:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 391:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 391:  (0) r  (1) Z {*movdi_internal}
         Considering alt=0 of insn 393:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 393:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 396:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 396:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 396:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 397:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 397:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 400:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 400:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 400:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 401:   (0) r  (1) Z
          overall=0,losers=0,rld_nregs=0
      Choosing alt 2 in insn 401:  (0) r  (1) Z {*movdi_internal}
         Considering alt=0 of insn 403:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 403:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 406:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 406:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 406:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 406:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 408:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 408:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 409:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 409:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 409:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 410:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 410:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 413:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 413:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 413:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 414:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 414:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 415:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 415:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 416:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 416:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 418:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 418:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 424:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 424:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 424:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 424:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 426:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 426:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 426:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 426:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 426:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 427:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 427:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 430:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 430:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 430:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 431:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 431:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 434:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 434:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 434:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 435:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 435:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 436:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 436:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 436:  (0) m  (1) re {*movsi_internal}
         Considering alt=2 of insn 437:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 437:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 437:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 438:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 438:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 439:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 439:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 439:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 440:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 440:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 442:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 442:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 444:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 444:  (0) r {*cmpsi_ccno_1}
         Considering alt=0 of insn 445:   (0) =qm
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 445:  (0) =qm {*setcc_qi}
         Considering alt=0 of insn 446:   (0) q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 446:  (0) q {*cmpqi_ccno_1}
         Considering alt=0 of insn 449:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 449:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 451:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 451:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 453:   (0) r  (1) Z
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=3 of insn 453:   (0) r  (1) rem
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 453:   (0) r  (1) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Bad operand -- refuse
         Considering alt=5 of insn 453:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 5 in insn 453:  (0) m  (1) re {*movdi_internal}
         Considering alt=0 of insn 454:   (0) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 454:   (0) ?mr
            Staticly defined alt reject+=6
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 454:  (0) ?mr {*cmpdi_ccno_1}
         Considering alt=2 of insn 457:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 457:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 457:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 462:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 462:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 462:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 462:  (0) r  (1) i {*movdi_internal}
         Considering alt=2 of insn 466:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 466:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 466:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 466:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 468:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 468:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 468:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 468:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 468:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 469:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 469:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 470:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 470:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 472:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 472:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 474:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 474:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 474:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 475:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          overall=9,losers=1,rld_nregs=1
         Considering alt=1 of insn 475:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 475:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 478:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 478:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 479:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          overall=10,losers=1,rld_nregs=1
         Considering alt=1 of insn 479:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            Bad operand -- refuse
         Considering alt=2 of insn 479:   (0) r  (1) r  (2) 0
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=3 of insn 479:   (0) r  (1) r  (2) le
          overall=0,losers=0,rld_nregs=0
         Considering alt=0 of insn 479:   (0) =rm  (1) %0  (2) re
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=1 of insn 479:   (0) r  (1) 0  (2) BM
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=11,losers=1 -- refuse
         Considering alt=2 of insn 479:   (0) r  (1) r  (2) 0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
         Considering alt=3 of insn 479:   (0) r  (1) r  (2) le
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            overall=9,losers=1 -- refuse
      Choosing alt 3 in insn 479:  (0) r  (1) r  (2) le {*adddi_1}
         Considering alt=0 of insn 482:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 482:  (1) rBwBz {*call_value}
         Considering alt=0 of insn 484:   (0) =r  (1) g
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 484:   (0) m  (1) re
          overall=0,losers=0,rld_nregs=0
      Choosing alt 1 in insn 484:  (0) m  (1) re {*movsi_internal}
         Considering alt=0 of insn 487:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 487:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 488:   (0) =rm  (1) 0  (2) cI
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 488:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
         Considering alt=0 of insn 489:   (0) =Q  (1) Q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 489:  (0) =Q  (1) Q {*movqi_internal}
         Considering alt=0 of insn 490:   (0) q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 490:  (0) q {*cmpqi_ccno_1}
         Considering alt=2 of insn 497:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 497:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 497:  (0) r  (1) rem {*movdi_internal}
         Considering alt=2 of insn 498:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 498:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 498:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 499:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 499:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 500:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 500:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 500:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 501:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 501:  (0) =r  (1) g {*movsi_internal}
         Considering alt=2 of insn 506:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 506:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 506:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 506:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 508:   (0) =Q  (1) Q
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=1 of insn 508:   (0) R  (1) R
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=2 of insn 508:   (0) r  (1) r
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=3 of insn 508:   (0) q  (1) n
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 508:  (0) q  (1) n {*movqi_internal}
         Considering alt=0 of insn 509:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 509:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 512:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 512:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 512:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 512:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 514:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 514:  (0) rBwBz {*call}
         Considering alt=2 of insn 515:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 515:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 515:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 515:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 517:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 517:  (0) rBwBz {*call}
         Considering alt=2 of insn 518:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 518:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 518:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 518:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 520:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 520:  (0) rBwBz {*call}
         Considering alt=2 of insn 521:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 521:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 521:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 522:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 522:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 525:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 525:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 525:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 527:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 527:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 530:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 530:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 530:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 531:   (0) r
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 531:  (0) r {*cmpdi_ccno_1}
         Considering alt=2 of insn 534:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 534:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 534:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 536:   (1) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 536:  (1) rBwBz {*call_value}
         Considering alt=2 of insn 539:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 539:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 539:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 539:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 541:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 541:  (0) rBwBz {*call}
         Considering alt=2 of insn 542:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 542:   (0) r  (1) rem
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          overall=609,losers=1,rld_nregs=1
         Considering alt=4 of insn 542:   (0) r  (1) i
          overall=0,losers=0,rld_nregs=0
      Choosing alt 4 in insn 542:  (0) r  (1) i {*movdi_internal}
         Considering alt=0 of insn 544:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 544:  (0) rBwBz {*call}
         Considering alt=2 of insn 545:   (0) r  (1) Z
            Bad operand -- refuse
         Considering alt=3 of insn 545:   (0) r  (1) rem
          overall=0,losers=0,rld_nregs=0
      Choosing alt 3 in insn 545:  (0) r  (1) rem {*movdi_internal}
         Considering alt=0 of insn 547:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 547:  (0) rBwBz {*call}
         Considering alt=0 of insn 550:   (0) =r  (1) g
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 550:  (0) =r  (1) g {*movsi_internal}
         Considering alt=0 of insn 551:   (0) =rm  (1) 0  (2) cI
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 551:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
         Considering alt=0 of insn 552:   (0) =Q  (1) Q
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 552:  (0) =Q  (1) Q {*movqi_internal}
         Considering alt=0 of insn 553:   (0) =r  (1) qm
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 553:  (0) =r  (1) qm {*zero_extendqisi2}
         Considering alt=0 of insn 560:   (1) m  (2) m  (3) =&r
            3 Scratch win: reject+=2
          overall=2,losers=0,rld_nregs=0
      Choosing alt 0 in insn 560:  (1) m  (2) m  (3) =&r {stack_protect_test_1_di}
         Considering alt=0 of insn 562:   (0) rBwBz
          overall=0,losers=0,rld_nregs=0
      Choosing alt 0 in insn 562:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9 10
EBB 11 12
EBB 13
EBB 14 15 16
EBB 17 18 19
EBB 20 21
EBB 22 23
EBB 24 25
EBB 26 27
EBB 28
EBB 29 30
EBB 31 32
EBB 33
EBB 34 56
EBB 57
EBB 35 36
EBB 37 38
EBB 39 40
EBB 41 42 43 44
EBB 45
EBB 46
EBB 47 48
EBB 58
EBB 59
EBB 49 50
EBB 51 52
EBB 53 54
EBB 55

********** Pseudo live ranges #1: **********

  BB 3
   Insn 22: point = 0, n_alt = 0
   Insn 21: point = 0, n_alt = 0
   Insn 20: point = 0, n_alt = 0
   Insn 19: point = 0, n_alt = 3
   Insn 18: point = 0, n_alt = -2
   Insn 17: point = 1, n_alt = -2
   Insn 16: point = 2, n_alt = 4
   Insn 15: point = 3, n_alt = -2
   Insn 14: point = 4, n_alt = 3
   Insn 13: point = 5, n_alt = 3
   Insn 12: point = 7, n_alt = 3
  BB 5
   Insn 59: point = 8, n_alt = 0
   Insn 58: point = 8, n_alt = 0
   Insn 57: point = 8, n_alt = 0
   Insn 56: point = 8, n_alt = 3
   Insn 55: point = 8, n_alt = -2
   Insn 54: point = 9, n_alt = -2
   Insn 53: point = 10, n_alt = 4
   Insn 52: point = 11, n_alt = -2
   Insn 51: point = 12, n_alt = 3
   Insn 50: point = 13, n_alt = 3
  BB 7
   Insn 83: point = 14, n_alt = 0
   Insn 82: point = 14, n_alt = 0
   Insn 81: point = 14, n_alt = 0
   Insn 80: point = 14, n_alt = -2
   Insn 79: point = 15, n_alt = 4
   Insn 78: point = 16, n_alt = 2
   Insn 77: point = 16, n_alt = 2
   Insn 76: point = 16, n_alt = -2
   Insn 75: point = 17, n_alt = 3
  BB 54
   Insn 562: point = 18, n_alt = 0
  BB 55
   Insn 566: point = 18, n_alt = -1
   Insn 565: point = 18, n_alt = -2
  BB 53
   Insn 561: point = 20, n_alt = -1
   Insn 560: point = 20, n_alt = 0
   Insn 556: point = 22, n_alt = -2
   Insn 553: point = 24, n_alt = 0
   Insn 552: point = 26, n_alt = 0
   Insn 551: point = 28, n_alt = 0
   Insn 550: point = 30, n_alt = 0
   Insn 547: point = 31, n_alt = 0
   Insn 546: point = 31, n_alt = -2
   Insn 545: point = 32, n_alt = 3
   Insn 544: point = 33, n_alt = 0
   Insn 543: point = 33, n_alt = -2
   Insn 542: point = 34, n_alt = 4
   Insn 541: point = 35, n_alt = 0
   Insn 540: point = 35, n_alt = -2
   Insn 539: point = 36, n_alt = 4
  BB 52
   Insn 536: point = 37, n_alt = 0
   Insn 535: point = 37, n_alt = -2
   Insn 534: point = 38, n_alt = 3
  BB 51
   Insn 532: point = 39, n_alt = -1
   Insn 531: point = 39, n_alt = 0
   Insn 530: point = 40, n_alt = 3
  BB 50
   Insn 527: point = 41, n_alt = 0
   Insn 526: point = 41, n_alt = -2
   Insn 525: point = 42, n_alt = 3
  BB 49
   Insn 523: point = 43, n_alt = -1
   Insn 522: point = 43, n_alt = 0
   Insn 521: point = 44, n_alt = 3
   Insn 520: point = 45, n_alt = 0
   Insn 519: point = 45, n_alt = -2
   Insn 518: point = 46, n_alt = 4
   Insn 517: point = 47, n_alt = 0
   Insn 516: point = 47, n_alt = -2
   Insn 515: point = 48, n_alt = 4
   Insn 514: point = 49, n_alt = 0
   Insn 513: point = 49, n_alt = -2
   Insn 512: point = 50, n_alt = 4
  BB 58
   Insn 599: point = 51, n_alt = -1
   Insn 598: point = 51, n_alt = -1
  BB 59
   Insn 603: point = 51, n_alt = -1
  BB 48
   Insn 594: point = 51, n_alt = -1
   Insn 509: point = 51, n_alt = 0
   Insn 508: point = 51, n_alt = 3
   Insn 507: point = 51, n_alt = -2
   Insn 506: point = 52, n_alt = 4
   Insn 505: point = 53, n_alt = -2
   Insn 504: point = 54, n_alt = -2
   Insn 503: point = 55, n_alt = -2
   Insn 502: point = 56, n_alt = -2
   Insn 501: point = 57, n_alt = 0
   Insn 500: point = 58, n_alt = 3
   Insn 499: point = 59, n_alt = 0
   Insn 498: point = 61, n_alt = 3
   Insn 497: point = 62, n_alt = 3
  BB 47
   Insn 491: point = 63, n_alt = -1
   Insn 490: point = 63, n_alt = 0
   Insn 489: point = 64, n_alt = 0
   Insn 488: point = 66, n_alt = 0
   Insn 487: point = 68, n_alt = 0
   Insn 484: point = 69, n_alt = 1
   Insn 483: point = 70, n_alt = -2
   Insn 482: point = 71, n_alt = 0
   Insn 481: point = 71, n_alt = -2
   Insn 480: point = 72, n_alt = -2
   Insn 479: point = 73, n_alt = 3
   Insn 478: point = 74, n_alt = 0
  BB 46
   Insn 475: point = 75, n_alt = 1
   Insn 474: point = 75, n_alt = 1
   Insn 473: point = 76, n_alt = -2
   Insn 472: point = 77, n_alt = 0
   Insn 471: point = 77, n_alt = -2
   Insn 470: point = 78, n_alt = 0
   Insn 469: point = 79, n_alt = 0
   Insn 468: point = 79, n_alt = 3
   Insn 467: point = 79, n_alt = -2
   Insn 466: point = 80, n_alt = 4
   Insn 465: point = 81, n_alt = -2
  BB 44
   Insn 586: point = 83, n_alt = -1
   Insn 457: point = 83, n_alt = 3
  BB 45
   Insn 462: point = 84, n_alt = 4
  BB 43
   Insn 455: point = 85, n_alt = -1
   Insn 454: point = 85, n_alt = 1
   Insn 453: point = 85, n_alt = 5
   Insn 452: point = 86, n_alt = -2
   Insn 451: point = 87, n_alt = 0
   Insn 450: point = 87, n_alt = -2
   Insn 449: point = 88, n_alt = 0
  BB 42
   Insn 447: point = 89, n_alt = -1
   Insn 446: point = 89, n_alt = 0
   Insn 445: point = 90, n_alt = 0
   Insn 444: point = 91, n_alt = 0
   Insn 443: point = 92, n_alt = -2
   Insn 442: point = 93, n_alt = 0
   Insn 441: point = 93, n_alt = -2
   Insn 440: point = 94, n_alt = 0
   Insn 439: point = 95, n_alt = 1
   Insn 438: point = 96, n_alt = 0
   Insn 437: point = 98, n_alt = 3
   Insn 436: point = 99, n_alt = 1
   Insn 435: point = 100, n_alt = 0
   Insn 434: point = 102, n_alt = 3
  BB 41
   Insn 432: point = 103, n_alt = -1
   Insn 431: point = 103, n_alt = 0
   Insn 430: point = 104, n_alt = 3
  BB 40
   Insn 427: point = 105, n_alt = 0
   Insn 426: point = 105, n_alt = 3
   Insn 425: point = 105, n_alt = -2
   Insn 424: point = 106, n_alt = 4
   Insn 423: point = 107, n_alt = -2
   Insn 422: point = 108, n_alt = -2
   Insn 421: point = 109, n_alt = -2
   Insn 420: point = 110, n_alt = -2
   Insn 419: point = 111, n_alt = -2
   Insn 418: point = 112, n_alt = 0
   Insn 417: point = 112, n_alt = -2
   Insn 416: point = 113, n_alt = 0
   Insn 415: point = 114, n_alt = 0
   Insn 414: point = 115, n_alt = 0
   Insn 413: point = 116, n_alt = 3
  BB 39
   Insn 411: point = 117, n_alt = -1
   Insn 410: point = 117, n_alt = 0
   Insn 409: point = 118, n_alt = 3
   Insn 408: point = 119, n_alt = 0
   Insn 407: point = 119, n_alt = -2
   Insn 406: point = 120, n_alt = 4
  BB 38
   Insn 403: point = 121, n_alt = 0
   Insn 402: point = 121, n_alt = -2
   Insn 401: point = 122, n_alt = 2
   Insn 400: point = 122, n_alt = 3
  BB 37
   Insn 398: point = 123, n_alt = -1
   Insn 397: point = 123, n_alt = 0
   Insn 396: point = 124, n_alt = 3
  BB 36
   Insn 393: point = 125, n_alt = 0
   Insn 392: point = 125, n_alt = -2
   Insn 391: point = 126, n_alt = 2
   Insn 390: point = 126, n_alt = 3
  BB 35
   Insn 388: point = 127, n_alt = -1
   Insn 387: point = 127, n_alt = 0
   Insn 386: point = 128, n_alt = 3
  BB 56
   Insn 589: point = 129, n_alt = -1
  BB 57
   Insn 593: point = 129, n_alt = -1
  BB 33
   Insn 364: point = 129, n_alt = -1
   Insn 363: point = 129, n_alt = 1
   Insn 360: point = 129, n_alt = 0
   Insn 359: point = 129, n_alt = -2
   Insn 358: point = 130, n_alt = 3
  BB 30
   Insn 584: point = 131, n_alt = -1
   Insn 338: point = 131, n_alt = 1
   Insn 337: point = 132, n_alt = -2
   Insn 336: point = 133, n_alt = 0
   Insn 335: point = 133, n_alt = -2
   Insn 334: point = 134, n_alt = -2
   Insn 333: point = 135, n_alt = 3
   Insn 332: point = 136, n_alt = 3
  BB 32
   Insn 355: point = 137, n_alt = 1
   Insn 354: point = 138, n_alt = -2
   Insn 353: point = 139, n_alt = 0
   Insn 352: point = 139, n_alt = -2
   Insn 351: point = 140, n_alt = -2
   Insn 350: point = 141, n_alt = 3
   Insn 349: point = 142, n_alt = 3
  BB 31
   Insn 347: point = 143, n_alt = -1
   Insn 346: point = 143, n_alt = 0
   Insn 345: point = 144, n_alt = 0
   Insn 344: point = 145, n_alt = 0
   Insn 343: point = 147, n_alt = 3
  BB 29
   Insn 330: point = 148, n_alt = -1
   Insn 329: point = 148, n_alt = 0
   Insn 328: point = 149, n_alt = 0
   Insn 327: point = 150, n_alt = 0
   Insn 326: point = 152, n_alt = 3
  BB 34
   Insn 383: point = 153, n_alt = -1
   Insn 382: point = 153, n_alt = 0
   Insn 380: point = 154, n_alt = 0
   Insn 379: point = 156, n_alt = 0
   Insn 378: point = 158, n_alt = 0
   Insn 375: point = 160, n_alt = -2
   Insn 374: point = 161, n_alt = 0
   Insn 373: point = 161, n_alt = -2
   Insn 372: point = 162, n_alt = -2
   Insn 371: point = 163, n_alt = 3
   Insn 370: point = 164, n_alt = 3
  BB 28
   Insn 582: point = 165, n_alt = -1
  BB 27
   Insn 320: point = 165, n_alt = 0
   Insn 319: point = 165, n_alt = 3
   Insn 318: point = 165, n_alt = -2
   Insn 317: point = 166, n_alt = 4
   Insn 316: point = 167, n_alt = -2
   Insn 315: point = 168, n_alt = -2
   Insn 314: point = 169, n_alt = 3
   Insn 313: point = 170, n_alt = 3
  BB 26
   Insn 311: point = 171, n_alt = -1
   Insn 310: point = 171, n_alt = 0
   Insn 309: point = 172, n_alt = 3
  BB 25
   Insn 306: point = 173, n_alt = 0
   Insn 305: point = 173, n_alt = 3
   Insn 304: point = 173, n_alt = -2
   Insn 303: point = 174, n_alt = 4
   Insn 302: point = 175, n_alt = -2
   Insn 301: point = 176, n_alt = -2
   Insn 300: point = 177, n_alt = 3
   Insn 299: point = 178, n_alt = 3
  BB 24
   Insn 297: point = 179, n_alt = -1
   Insn 296: point = 179, n_alt = 0
   Insn 295: point = 180, n_alt = 3
  BB 21
   Insn 578: point = 181, n_alt = -1
   Insn 271: point = 181, n_alt = 1
   Insn 270: point = 181, n_alt = 0
   Insn 269: point = 181, n_alt = -2
   Insn 268: point = 182, n_alt = 4
   Insn 267: point = 183, n_alt = 2
   Insn 266: point = 183, n_alt = 2
   Insn 265: point = 183, n_alt = -2
   Insn 264: point = 184, n_alt = 3
  BB 19
   Insn 576: point = 185, n_alt = -1
   Insn 252: point = 185, n_alt = 1
   Insn 251: point = 185, n_alt = 0
   Insn 250: point = 185, n_alt = -2
   Insn 249: point = 186, n_alt = 4
   Insn 248: point = 187, n_alt = 2
   Insn 247: point = 187, n_alt = 2
   Insn 246: point = 187, n_alt = -2
   Insn 245: point = 188, n_alt = 3
  BB 16
   Insn 574: point = 189, n_alt = -1
   Insn 225: point = 189, n_alt = 1
   Insn 224: point = 189, n_alt = 0
   Insn 223: point = 189, n_alt = 3
   Insn 222: point = 189, n_alt = -2
   Insn 221: point = 190, n_alt = -2
   Insn 220: point = 191, n_alt = 4
   Insn 219: point = 192, n_alt = -2
   Insn 218: point = 193, n_alt = 3
   Insn 217: point = 194, n_alt = 3
  BB 12
   Insn 572: point = 195, n_alt = -1
   Insn 171: point = 195, n_alt = 0
   Insn 170: point = 195, n_alt = -2
   Insn 169: point = 196, n_alt = 4
   Insn 168: point = 197, n_alt = 2
   Insn 167: point = 197, n_alt = 2
   Insn 166: point = 197, n_alt = -2
   Insn 165: point = 198, n_alt = 3
  BB 10
   Insn 570: point = 199, n_alt = -1
   Insn 132: point = 199, n_alt = 1
   Insn 131: point = 199, n_alt = 0
   Insn 130: point = 199, n_alt = 3
   Insn 129: point = 199, n_alt = -2
   Insn 128: point = 200, n_alt = -2
   Insn 127: point = 201, n_alt = 4
   Insn 126: point = 202, n_alt = -2
   Insn 125: point = 203, n_alt = 3
   Insn 124: point = 204, n_alt = 3
  BB 23
   Insn 580: point = 205, n_alt = -1
   Insn 290: point = 205, n_alt = 1
   Insn 289: point = 205, n_alt = 0
   Insn 288: point = 205, n_alt = -2
   Insn 287: point = 206, n_alt = 4
   Insn 286: point = 207, n_alt = 2
   Insn 285: point = 207, n_alt = 2
   Insn 284: point = 207, n_alt = -2
   Insn 283: point = 208, n_alt = 3
  BB 22
   Insn 281: point = 209, n_alt = -1
   Insn 280: point = 209, n_alt = 0
   Insn 279: point = 210, n_alt = 3
   Insn 278: point = 211, n_alt = 5
   Insn 277: point = 212, n_alt = -2
   Insn 276: point = 213, n_alt = 0
  BB 20
   Insn 262: point = 213, n_alt = -1
   Insn 261: point = 213, n_alt = 0
   Insn 260: point = 214, n_alt = 3
   Insn 259: point = 215, n_alt = 5
   Insn 258: point = 216, n_alt = -2
   Insn 257: point = 217, n_alt = 0
  BB 18
   Insn 243: point = 217, n_alt = -1
   Insn 242: point = 217, n_alt = 0
   Insn 241: point = 218, n_alt = 3
  BB 17
   Insn 239: point = 219, n_alt = -1
   Insn 238: point = 219, n_alt = 0
   Insn 237: point = 220, n_alt = 3
   Insn 236: point = 221, n_alt = 0
   Insn 235: point = 221, n_alt = -2
   Insn 234: point = 222, n_alt = 0
   Insn 233: point = 222, n_alt = -2
   Insn 232: point = 223, n_alt = 0
   Insn 231: point = 223, n_alt = 3
   Insn 230: point = 224, n_alt = 3
  BB 15
   Insn 215: point = 225, n_alt = -1
   Insn 214: point = 225, n_alt = 0
   Insn 213: point = 226, n_alt = 3
   Insn 212: point = 227, n_alt = 5
   Insn 211: point = 228, n_alt = -2
   Insn 210: point = 230, n_alt = -2
   Insn 209: point = 231, n_alt = 0
   Insn 208: point = 231, n_alt = -2
   Insn 207: point = 232, n_alt = -2
   Insn 206: point = 233, n_alt = 4
   Insn 205: point = 234, n_alt = 3
   Insn 204: point = 235, n_alt = 5
   Insn 203: point = 236, n_alt = 3
   Insn 202: point = 238, n_alt = 0
   Insn 201: point = 240, n_alt = 0
   Insn 200: point = 242, n_alt = 1
   Insn 199: point = 244, n_alt = 0
   Insn 198: point = 245, n_alt = 3
   Insn 197: point = 247, n_alt = 3
  BB 14
   Insn 195: point = 248, n_alt = -1
   Insn 194: point = 248, n_alt = 0
   Insn 193: point = 249, n_alt = 0
   Insn 192: point = 251, n_alt = 0
   Insn 191: point = 253, n_alt = 0
   Insn 188: point = 255, n_alt = -2
   Insn 187: point = 256, n_alt = 0
   Insn 186: point = 256, n_alt = -2
   Insn 185: point = 257, n_alt = 4
   Insn 184: point = 258, n_alt = -2
   Insn 183: point = 259, n_alt = 4
   Insn 182: point = 260, n_alt = -2
   Insn 181: point = 261, n_alt = 0
   Insn 180: point = 261, n_alt = 3
  BB 13
   Insn 177: point = 262, n_alt = 1
   Insn 176: point = 263, n_alt = 0
  BB 11
   Insn 163: point = 264, n_alt = -1
   Insn 162: point = 264, n_alt = 1
   Insn 159: point = 264, n_alt = 1
   Insn 158: point = 265, n_alt = -2
   Insn 157: point = 266, n_alt = 0
   Insn 156: point = 266, n_alt = -2
   Insn 155: point = 267, n_alt = 4
   Insn 154: point = 268, n_alt = -2
   Insn 153: point = 269, n_alt = 4
   Insn 152: point = 270, n_alt = -2
   Insn 151: point = 271, n_alt = -2
   Insn 150: point = 272, n_alt = -2
   Insn 149: point = 273, n_alt = 0
   Insn 148: point = 273, n_alt = 0
   Insn 147: point = 274, n_alt = 0
   Insn 146: point = 275, n_alt = 0
   Insn 145: point = 276, n_alt = 1
   Insn 144: point = 277, n_alt = 0
   Insn 143: point = 279, n_alt = 3
   Insn 142: point = 280, n_alt = 1
   Insn 141: point = 281, n_alt = 0
   Insn 140: point = 283, n_alt = 3
   Insn 139: point = 284, n_alt = 1
   Insn 138: point = 285, n_alt = 0
   Insn 137: point = 287, n_alt = 3
  BB 9
   Insn 122: point = 288, n_alt = -1
   Insn 121: point = 288, n_alt = 0
   Insn 120: point = 289, n_alt = 3
   Insn 119: point = 290, n_alt = 5
   Insn 118: point = 291, n_alt = -2
   Insn 117: point = 293, n_alt = -2
   Insn 116: point = 294, n_alt = 0
   Insn 115: point = 294, n_alt = -2
   Insn 114: point = 295, n_alt = -2
   Insn 113: point = 296, n_alt = 4
   Insn 112: point = 297, n_alt = 3
   Insn 111: point = 298, n_alt = 5
   Insn 110: point = 299, n_alt = 3
   Insn 109: point = 301, n_alt = 0
   Insn 108: point = 303, n_alt = 0
   Insn 107: point = 305, n_alt = 1
   Insn 106: point = 307, n_alt = 0
   Insn 105: point = 308, n_alt = 3
   Insn 104: point = 310, n_alt = 3
  BB 8
   Insn 102: point = 311, n_alt = -1
   Insn 101: point = 311, n_alt = 0
   Insn 100: point = 312, n_alt = 0
   Insn 99: point = 314, n_alt = 0
   Insn 98: point = 316, n_alt = 0
   Insn 95: point = 318, n_alt = -2
   Insn 94: point = 319, n_alt = 0
   Insn 93: point = 319, n_alt = -2
   Insn 92: point = 320, n_alt = 4
   Insn 91: point = 321, n_alt = -2
   Insn 90: point = 322, n_alt = 4
   Insn 89: point = 323, n_alt = -2
   Insn 88: point = 324, n_alt = 0
   Insn 87: point = 324, n_alt = 3
  BB 6
   Insn 73: point = 325, n_alt = -1
   Insn 72: point = 325, n_alt = 0
   Insn 71: point = 326, n_alt = 0
   Insn 70: point = 328, n_alt = 0
   Insn 67: point = 330, n_alt = -2
   Insn 66: point = 331, n_alt = 0
   Insn 65: point = 331, n_alt = -2
   Insn 64: point = 332, n_alt = 2
   Insn 63: point = 332, n_alt = 3
  BB 4
   Insn 48: point = 333, n_alt = -1
   Insn 47: point = 333, n_alt = 0
   Insn 46: point = 334, n_alt = 0
   Insn 45: point = 336, n_alt = 0
   Insn 42: point = 338, n_alt = -2
   Insn 41: point = 339, n_alt = 0
   Insn 40: point = 339, n_alt = -2
   Insn 39: point = 340, n_alt = 4
   Insn 38: point = 341, n_alt = -2
   Insn 37: point = 342, n_alt = 2
   Insn 36: point = 342, n_alt = 2
   Insn 35: point = 342, n_alt = 3
   Insn 34: point = 343, n_alt = 5
   Insn 33: point = 344, n_alt = 3
   Insn 32: point = 346, n_alt = 3
   Insn 31: point = 347, n_alt = 5
   Insn 30: point = 348, n_alt = 3
   Insn 29: point = 350, n_alt = 3
   Insn 28: point = 351, n_alt = 5
   Insn 27: point = 352, n_alt = 3
   Insn 26: point = 354, n_alt = 3
  BB 2
   Insn 10: point = 355, n_alt = -1
   Insn 9: point = 355, n_alt = 0
   Insn 8: point = 355, n_alt = 1
   Insn 5: point = 355, n_alt = 0
   Insn 3: point = 357, n_alt = 5
   Insn 2: point = 357, n_alt = 1
 r98: [3..5]
 r99: [0..4]
 r100: [351..352]
 r101: [347..348]
 r102: [343..344]
 r103: [341..342]
 r104: [337..338]
 r105: [11..13]
 r106: [8..12]
 r107: [331..332]
 r108: [329..330]
 r109: [16..17]
 r110: [323..324]
 r111: [317..318]
 r112: [309..310]
 r113: [302..308]
 r114: [306..307]
 r115: [304..305]
 r116: [302..303]
 r117: [300..301]
 r118: [298..299]
 r119: [294..297]
 r120: [290..291]
 r121: [288..289]
 r122: [202..204]
 r123: [199..203]
 r124: [286..287]
 r125: [284..285]
 r126: [282..283]
 r127: [280..281]
 r128: [278..279]
 r129: [276..277]
 r130: [272..275]
 r131: [271..274]
 r132: [270..273]
 r133: [197..198]
 r134: [260..261]
 r135: [254..255]
 r136: [246..247]
 r137: [239..245]
 r138: [243..244]
 r139: [241..242]
 r140: [239..240]
 r141: [237..238]
 r142: [235..236]
 r143: [231..234]
 r144: [227..228]
 r145: [225..226]
 r146: [192..194]
 r147: [189..193]
 r148: [222..224]
 r149: [221..223]
 r150: [219..220]
 r151: [217..218]
 r152: [187..188]
 r153: [215..216]
 r154: [213..214]
 r155: [183..184]
 r156: [211..212]
 r157: [209..210]
 r158: [207..208]
 r159: [179..180]
 r160: [176..178]
 r161: [175..177]
 r162: [171..172]
 r163: [168..170]
 r164: [167..169]
 r165: [151..152]
 r166: [148..150]
 r167: [148..149]
 r168: [134..136]
 r169: [133..135]
 r170: [146..147]
 r171: [143..145]
 r172: [143..144]
 r173: [140..142]
 r174: [139..141]
 r175: [129..130]
 r176: [162..164]
 r177: [161..163]
 r178: [159..160]
 r179: [127..128]
 r180: [125..126]
 r181: [123..124]
 r182: [121..122]
 r183: [117..118]
 r184: [110..116]
 r185: [109..115]
 r186: [108..114]
 r187: [112..113]
 r188: [107..111]
 r189: [103..104]
 r190: [101..102]
 r191: [97..98]
 r192: [91..92]
 r193: [56..62]
 r194: [60..61]
 r195: [55..59]
 r196: [53..58]
 r197: [43..44]
 r198: [41..42]
 r199: [39..40]
 r200: [37..38]
 r201: [31..32]
 r202: [25..26]
 r203: [81..84]
 r204: [333..334]
 r205: [325..326]
 r206: [311..312]
 r207: [264..265]
 r208: [248..249]
 r209: [153..154]
 r210: [137..138]
 r211: [131..132]
 r212: [89..90]
 r213: [85..86]
 r214: [75..76]
 r215: [69..70]
 r216: [63..64]
 r217: [23..24]
 r218: [18..22]
 r219: [355..356]
 r220: [6..7]
 r221: [1..2]
 r222: [353..354]
 r223: [349..350]
 r224: [345..346]
 r225: [339..340]
 r226: [335..336]
 r227: [9..10]
 r228: [327..328]
 r229: [14..15]
 r230: [321..322]
 r231: [319..320]
 r232: [315..316]
 r233: [313..314]
 r234: [295..296]
 r235: [292..293]
 r236: [200..201]
 r237: [268..269]
 r238: [266..267]
 r239: [195..196]
 r240: [262..263]
 r241: [258..259]
 r242: [256..257]
 r243: [252..253]
 r244: [250..251]
 r245: [232..233]
 r246: [229..230]
 r247: [190..191]
 r248: [185..186]
 r249: [181..182]
 r250: [205..206]
 r251: [173..174]
 r252: [165..166]
 r253: [157..158]
 r254: [155..156]
 r255: [119..120]
 r256: [105..106]
 r257: [99..100]
 r258: [95..96]
 r259: [93..94]
 r260: [87..88]
 r261: [79..80]
 r262: [77..78]
 r263: [72..74]
 r264: [71..73]
 r265: [65..66]
 r266: [67..68]
 r267: [54..57]
 r268: [51..52]
 r269: [49..50]
 r270: [47..48]
 r271: [45..46]
 r272: [35..36]
 r273: [33..34]
 r274: [27..28]
 r275: [29..30]
 r277: [20..21]
Compressing live ranges: from 357 to 306 - 85%
Ranges after the compression:
 r98: [2..3]
 r99: [0..3]
 r100: [300..301]
 r101: [296..297]
 r102: [292..293]
 r103: [290..291]
 r104: [286..287]
 r105: [8..9]
 r106: [6..9]
 r107: [280..281]
 r108: [278..279]
 r109: [12..13]
 r110: [272..273]
 r111: [266..267]
 r112: [258..259]
 r113: [252..257]
 r114: [256..257]
 r115: [254..255]
 r116: [252..253]
 r117: [250..251]
 r118: [248..249]
 r119: [246..247]
 r120: [242..243]
 r121: [240..241]
 r122: [164..165]
 r123: [162..165]
 r124: [238..239]
 r125: [236..237]
 r126: [234..235]
 r127: [232..233]
 r128: [230..231]
 r129: [228..229]
 r130: [226..227]
 r131: [226..227]
 r132: [226..227]
 r133: [160..161]
 r134: [216..217]
 r135: [210..211]
 r136: [202..203]
 r137: [196..201]
 r138: [200..201]
 r139: [198..199]
 r140: [196..197]
 r141: [194..195]
 r142: [192..193]
 r143: [190..191]
 r144: [186..187]
 r145: [184..185]
 r146: [156..157]
 r147: [154..157]
 r148: [182..183]
 r149: [182..183]
 r150: [180..181]
 r151: [178..179]
 r152: [152..153]
 r153: [176..177]
 r154: [174..175]
 r155: [148..149]
 r156: [172..173]
 r157: [170..171]
 r158: [168..169]
 r159: [144..145]
 r160: [142..143]
 r161: [142..143]
 r162: [138..139]
 r163: [136..137]
 r164: [136..137]
 r165: [122..123]
 r166: [120..121]
 r167: [120..121]
 r168: [110..111]
 r169: [110..111]
 r170: [118..119]
 r171: [116..117]
 r172: [116..117]
 r173: [114..115]
 r174: [114..115]
 r175: [106..107]
 r176: [132..133]
 r177: [132..133]
 r178: [130..131]
 r179: [104..105]
 r180: [102..103]
 r181: [100..101]
 r182: [98..99]
 r183: [94..95]
 r184: [90..93]
 r185: [90..93]
 r186: [90..93]
 r187: [92..93]
 r188: [90..91]
 r189: [86..87]
 r190: [84..85]
 r191: [80..81]
 r192: [74..75]
 r193: [46..49]
 r194: [48..49]
 r195: [46..47]
 r196: [46..47]
 r197: [36..37]
 r198: [34..35]
 r199: [32..33]
 r200: [30..31]
 r201: [24..25]
 r202: [18..19]
 r203: [66..67]
 r204: [282..283]
 r205: [274..275]
 r206: [260..261]
 r207: [220..221]
 r208: [204..205]
 r209: [124..125]
 r210: [112..113]
 r211: [108..109]
 r212: [72..73]
 r213: [68..69]
 r214: [60..61]
 r215: [56..57]
 r216: [50..51]
 r217: [16..17]
 r218: [14..15]
 r219: [304..305]
 r220: [4..5]
 r221: [0..1]
 r222: [302..303]
 r223: [298..299]
 r224: [294..295]
 r225: [288..289]
 r226: [284..285]
 r227: [6..7]
 r228: [276..277]
 r229: [10..11]
 r230: [270..271]
 r231: [268..269]
 r232: [264..265]
 r233: [262..263]
 r234: [246..247]
 r235: [244..245]
 r236: [162..163]
 r237: [224..225]
 r238: [222..223]
 r239: [158..159]
 r240: [218..219]
 r241: [214..215]
 r242: [212..213]
 r243: [208..209]
 r244: [206..207]
 r245: [190..191]
 r246: [188..189]
 r247: [154..155]
 r248: [150..151]
 r249: [146..147]
 r250: [166..167]
 r251: [140..141]
 r252: [134..135]
 r253: [128..129]
 r254: [126..127]
 r255: [96..97]
 r256: [88..89]
 r257: [82..83]
 r258: [78..79]
 r259: [76..77]
 r260: [70..71]
 r261: [64..65]
 r262: [62..63]
 r263: [58..59]
 r264: [58..59]
 r265: [52..53]
 r266: [54..55]
 r267: [46..47]
 r268: [44..45]
 r269: [42..43]
 r270: [40..41]
 r271: [38..39]
 r272: [28..29]
 r273: [26..27]
 r274: [20..21]
 r275: [22..23]
 r277: [14..15]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=112, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=64, prev_offset=0)
Can eliminate 19 to 6 (offset=-32, prev_offset=-32)
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 18
changing reg in insn 27
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 38
changing reg in insn 42
changing reg in insn 45
changing reg in insn 50
changing reg in insn 52
changing reg in insn 51
changing reg in insn 55
changing reg in insn 63
changing reg in insn 65
changing reg in insn 67
changing reg in insn 70
changing reg in insn 75
changing reg in insn 76
changing reg in insn 87
changing reg in insn 89
changing reg in insn 95
changing reg in insn 98
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 109
changing reg in insn 106
changing reg in insn 107
changing reg in insn 107
changing reg in insn 108
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 110
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 115
changing reg in insn 118
changing reg in insn 119
changing reg in insn 120
changing reg in insn 121
changing reg in insn 124
changing reg in insn 126
changing reg in insn 125
changing reg in insn 129
changing reg in insn 137
changing reg in insn 138
changing reg in insn 138
changing reg in insn 139
changing reg in insn 140
changing reg in insn 141
changing reg in insn 141
changing reg in insn 142
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 145
changing reg in insn 146
changing reg in insn 150
changing reg in insn 147
changing reg in insn 151
changing reg in insn 148
changing reg in insn 152
changing reg in insn 165
changing reg in insn 166
changing reg in insn 180
changing reg in insn 182
changing reg in insn 188
changing reg in insn 191
changing reg in insn 197
changing reg in insn 198
changing reg in insn 198
changing reg in insn 202
changing reg in insn 199
changing reg in insn 200
changing reg in insn 200
changing reg in insn 201
changing reg in insn 201
changing reg in insn 202
changing reg in insn 202
changing reg in insn 203
changing reg in insn 203
changing reg in insn 204
changing reg in insn 205
changing reg in insn 208
changing reg in insn 211
changing reg in insn 212
changing reg in insn 213
changing reg in insn 214
changing reg in insn 217
changing reg in insn 219
changing reg in insn 218
changing reg in insn 222
changing reg in insn 230
changing reg in insn 233
changing reg in insn 231
changing reg in insn 235
changing reg in insn 237
changing reg in insn 238
changing reg in insn 241
changing reg in insn 242
changing reg in insn 245
changing reg in insn 246
changing reg in insn 258
changing reg in insn 259
changing reg in insn 260
changing reg in insn 261
changing reg in insn 264
changing reg in insn 265
changing reg in insn 277
changing reg in insn 278
changing reg in insn 279
changing reg in insn 280
changing reg in insn 283
changing reg in insn 284
changing reg in insn 295
changing reg in insn 296
changing reg in insn 299
changing reg in insn 301
changing reg in insn 300
changing reg in insn 302
changing reg in insn 309
changing reg in insn 310
changing reg in insn 313
changing reg in insn 315
changing reg in insn 314
changing reg in insn 316
changing reg in insn 326
changing reg in insn 327
changing reg in insn 327
changing reg in insn 329
changing reg in insn 328
changing reg in insn 329
changing reg in insn 332
changing reg in insn 334
changing reg in insn 333
changing reg in insn 335
changing reg in insn 343
changing reg in insn 344
changing reg in insn 344
changing reg in insn 346
changing reg in insn 345
changing reg in insn 346
changing reg in insn 349
changing reg in insn 351
changing reg in insn 350
changing reg in insn 352
changing reg in insn 358
changing reg in insn 359
changing reg in insn 370
changing reg in insn 372
changing reg in insn 371
changing reg in insn 373
changing reg in insn 375
changing reg in insn 378
changing reg in insn 386
changing reg in insn 387
changing reg in insn 390
changing reg in insn 392
changing reg in insn 396
changing reg in insn 397
changing reg in insn 400
changing reg in insn 402
changing reg in insn 409
changing reg in insn 410
changing reg in insn 413
changing reg in insn 420
changing reg in insn 414
changing reg in insn 421
changing reg in insn 415
changing reg in insn 422
changing reg in insn 416
changing reg in insn 417
changing reg in insn 419
changing reg in insn 423
changing reg in insn 430
changing reg in insn 431
changing reg in insn 434
changing reg in insn 435
changing reg in insn 437
changing reg in insn 438
changing reg in insn 443
changing reg in insn 444
changing reg in insn 497
changing reg in insn 502
changing reg in insn 498
changing reg in insn 499
changing reg in insn 499
changing reg in insn 503
changing reg in insn 500
changing reg in insn 505
changing reg in insn 521
changing reg in insn 522
changing reg in insn 525
changing reg in insn 526
changing reg in insn 530
changing reg in insn 531
changing reg in insn 534
changing reg in insn 535
changing reg in insn 545
changing reg in insn 546
changing reg in insn 552
changing reg in insn 553
changing reg in insn 462
changing reg in insn 457
changing reg in insn 465
changing reg in insn 46
changing reg in insn 47
changing reg in insn 71
changing reg in insn 72
changing reg in insn 100
changing reg in insn 101
changing reg in insn 158
changing reg in insn 159
changing reg in insn 193
changing reg in insn 194
changing reg in insn 380
changing reg in insn 382
changing reg in insn 354
changing reg in insn 355
changing reg in insn 337
changing reg in insn 338
changing reg in insn 445
changing reg in insn 446
changing reg in insn 452
changing reg in insn 453
changing reg in insn 473
changing reg in insn 474
changing reg in insn 483
changing reg in insn 484
changing reg in insn 489
changing reg in insn 490
changing reg in insn 553
changing reg in insn 556
changing reg in insn 556
changing reg in insn 565
changing reg in insn 5
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 17
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 30
changing reg in insn 32
changing reg in insn 33
changing reg in insn 39
changing reg in insn 40
changing reg in insn 45
changing reg in insn 53
changing reg in insn 54
changing reg in insn 70
changing reg in insn 79
changing reg in insn 80
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 98
changing reg in insn 99
changing reg in insn 99
changing reg in insn 113
changing reg in insn 114
changing reg in insn 117
changing reg in insn 118
changing reg in insn 127
changing reg in insn 128
changing reg in insn 153
changing reg in insn 154
changing reg in insn 155
changing reg in insn 156
changing reg in insn 169
changing reg in insn 170
changing reg in insn 176
changing reg in insn 177
changing reg in insn 183
changing reg in insn 184
changing reg in insn 185
changing reg in insn 186
changing reg in insn 191
changing reg in insn 192
changing reg in insn 192
changing reg in insn 206
changing reg in insn 207
changing reg in insn 210
changing reg in insn 211
changing reg in insn 220
changing reg in insn 221
changing reg in insn 249
changing reg in insn 250
changing reg in insn 268
changing reg in insn 269
changing reg in insn 287
changing reg in insn 288
changing reg in insn 303
changing reg in insn 304
changing reg in insn 317
changing reg in insn 318
changing reg in insn 378
changing reg in insn 379
changing reg in insn 379
changing reg in insn 406
changing reg in insn 407
changing reg in insn 424
changing reg in insn 425
changing reg in insn 435
changing reg in insn 436
changing reg in insn 438
changing reg in insn 439
changing reg in insn 440
changing reg in insn 441
changing reg in insn 449
changing reg in insn 450
changing reg in insn 466
changing reg in insn 467
changing reg in insn 470
changing reg in insn 471
changing reg in insn 478
changing reg in insn 480
changing reg in insn 479
changing reg in insn 481
changing reg in insn 488
changing reg in insn 487
changing reg in insn 488
changing reg in insn 501
changing reg in insn 504
changing reg in insn 506
changing reg in insn 507
changing reg in insn 512
changing reg in insn 513
changing reg in insn 515
changing reg in insn 516
changing reg in insn 518
changing reg in insn 519
changing reg in insn 539
changing reg in insn 540
changing reg in insn 542
changing reg in insn 543
changing reg in insn 551
changing reg in insn 550
changing reg in insn 551
changing reg in insn 560
deleting insn with uid = 15.
deleting insn with uid = 42.
deleting insn with uid = 46.
deleting insn with uid = 52.
deleting insn with uid = 67.
deleting insn with uid = 71.
deleting insn with uid = 95.
deleting insn with uid = 100.
deleting insn with uid = 117.
deleting insn with uid = 118.
deleting insn with uid = 126.
deleting insn with uid = 158.
deleting insn with uid = 188.
deleting insn with uid = 193.
deleting insn with uid = 210.
deleting insn with uid = 211.
deleting insn with uid = 219.
deleting insn with uid = 233.
deleting insn with uid = 258.
deleting insn with uid = 277.
deleting insn with uid = 301.
deleting insn with uid = 315.
deleting insn with uid = 337.
deleting insn with uid = 354.
deleting insn with uid = 375.
deleting insn with uid = 380.
deleting insn with uid = 419.
deleting insn with uid = 443.
deleting insn with uid = 452.
deleting insn with uid = 473.
deleting insn with uid = 483.
deleting insn with uid = 489.
deleting insn with uid = 503.
deleting insn with uid = 504.
deleting insn with uid = 552.
deleting insn with uid = 556.
deleting insn with uid = 565.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 59.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 94.
verify found no changes in insn with uid = 116.
verify found no changes in insn with uid = 131.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 171.
verify found no changes in insn with uid = 187.
verify found no changes in insn with uid = 209.
verify found no changes in insn with uid = 224.
verify found no changes in insn with uid = 236.
verify found no changes in insn with uid = 251.
verify found no changes in insn with uid = 257.
verify found no changes in insn with uid = 270.
verify found no changes in insn with uid = 276.
verify found no changes in insn with uid = 289.
verify found no changes in insn with uid = 306.
verify found no changes in insn with uid = 320.
verify found no changes in insn with uid = 336.
verify found no changes in insn with uid = 353.
verify found no changes in insn with uid = 360.
verify found no changes in insn with uid = 374.
verify found no changes in insn with uid = 393.
verify found no changes in insn with uid = 403.
verify found no changes in insn with uid = 408.
verify found no changes in insn with uid = 418.
verify found no changes in insn with uid = 427.
verify found no changes in insn with uid = 442.
verify found no changes in insn with uid = 451.
verify found no changes in insn with uid = 469.
verify found no changes in insn with uid = 472.
verify found no changes in insn with uid = 482.
verify found no changes in insn with uid = 509.
verify found no changes in insn with uid = 514.
verify found no changes in insn with uid = 517.
verify found no changes in insn with uid = 520.
verify found no changes in insn with uid = 527.
verify found no changes in insn with uid = 536.
verify found no changes in insn with uid = 541.
verify found no changes in insn with uid = 544.
verify found no changes in insn with uid = 547.
verify found no changes in insn with uid = 562.


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 76 [r16] 77 [r17] 78 [r18] 79 [r19] 80 [r20] 81 [r21] 82 [r22] 83 [r23] 84 [r24] 85 [r25] 86 [r26] 87 [r27] 88 [r28] 89 [r29] 90 [r30] 91 [r31]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9] 40 [r12] 41 [r13]
;;  ref usage 	r0={177d,144u} r1={83d,33u} r2={66d,17u} r3={1d,1u} r4={78d,30u} r5={94d,46u} r6={1d,97u} r7={1d,107u} r8={48d} r9={48d} r10={48d} r11={48d} r12={48d} r13={48d} r14={48d} r15={48d} r17={90d,29u} r18={48d} r19={1d,1u,2e} r20={49d} r21={49d} r22={49d} r23={49d} r24={49d} r25={49d} r26={49d} r27={49d} r28={48d} r29={48d} r30={48d} r31={48d} r32={48d} r33={48d} r34={48d} r35={48d} r36={52d,3u} r37={50d,1u} r38={48d} r39={48d} r40={1d,1u} r41={1d,1u} r44={48d} r45={48d} r46={48d} r47={48d} r48={48d} r49={48d} r50={48d} r51={48d} r52={48d} r53={48d} r54={48d} r55={48d} r56={48d} r57={48d} r58={48d} r59={48d} r60={48d} r61={48d} r62={48d} r63={48d} r64={48d} r65={48d} r66={48d} r67={48d} r68={48d} r69={48d} r70={48d} r71={48d} r72={48d} r73={48d} r74={48d} r75={48d} r76={48d} r77={48d} r78={48d} r79={48d} r80={48d} r81={48d} r82={48d} r83={48d} r84={48d} r85={48d} r86={48d} r87={48d} r88={48d} r89={48d} r90={48d} r91={48d} 
;;    total ref usage 4817{4304d,511u,2e} in 410{362 regular + 48 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) "/home/anand/Decode/decode.cpp":238:2 85 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [81 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) "/home/anand/Decode/decode.cpp":238:2 84 {*movdi_internal}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [8 D.37298+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [219])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":238:2 1516 {stack_protect_set_1_di_di}
     (nil))
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":239:10 85 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [1 argc+0 S4 A32])
            (const_int 4 [0x4]))) "/home/anand/Decode/decode.cpp":241:6 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "/home/anand/Decode/decode.cpp":241:6 1130 {*jcc}
     (nil)
 -> 24)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:DI 0 ax [220])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [81 argv+0 S8 A64])) "/home/anand/Decode/decode.cpp":242:17 84 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg/f:DI 1 dx [orig:98 _1 ] [98])
        (mem/f:DI (reg/f:DI 0 ax [220]) [43 *argv_132(D)+0 S8 A64])) "/home/anand/Decode/decode.cpp":242:17 84 {*movdi_internal}
     (nil))
(insn 14 13 16 3 (set (reg/f:DI 0 ax [orig:99 stderr.33_2 ] [99])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":242:17 84 {*movdi_internal}
     (nil))
(insn 16 14 17 3 (set (reg:DI 2 cx [221])
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x75229ec1cf30 *.LC20>)) "/home/anand/Decode/decode.cpp":242:17 84 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 4 si)
        (reg:DI 2 cx [221])) "/home/anand/Decode/decode.cpp":242:17 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x75229ec1cf30 *.LC20>)
        (nil)))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:99 stderr.33_2 ] [99])) "/home/anand/Decode/decode.cpp":242:17 84 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":242:17 87 {*movqi_internal}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":242:17 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 21 20 22 3 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":248:14 85 {*movsi_internal}
     (nil))
(call_insn 22 21 23 3 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7522a1345400 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":248:14 1137 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 23 22 24)
(code_label 24 23 25 4 37 (nil) [1 uses])
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg/f:DI 0 ax [222])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [81 argv+0 S8 A64])) "/home/anand/Decode/decode.cpp":250:19 84 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 0 ax [orig:100 _3 ] [100])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [222])
                (const_int 8 [0x8])) [43 MEM[(char * *)argv_132(D) + 8B]+0 S8 A64])) "/home/anand/Decode/decode.cpp":250:19 84 {*movdi_internal}
     (nil))
(insn 28 27 29 4 (set (mem/f/c:DI (symbol_ref:DI ("_ZL12src_filename") [flags 0x2]  <var_decl 0x75229f05e1b0 src_filename>) [43 src_filename+0 S8 A64])
        (reg/f:DI 0 ax [orig:100 _3 ] [100])) "/home/anand/Decode/decode.cpp":250:19 84 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg/f:DI 0 ax [223])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [81 argv+0 S8 A64])) "/home/anand/Decode/decode.cpp":251:25 84 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (set (reg/f:DI 0 ax [orig:101 _4 ] [101])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [223])
                (const_int 16 [0x10])) [43 MEM[(char * *)argv_132(D) + 16B]+0 S8 A64])) "/home/anand/Decode/decode.cpp":251:25 84 {*movdi_internal}
     (nil))
(insn 31 30 32 4 (set (mem/f/c:DI (symbol_ref:DI ("_ZL18video_dst_filename") [flags 0x2]  <var_decl 0x75229f05e240 video_dst_filename>) [43 video_dst_filename+0 S8 A64])
        (reg/f:DI 0 ax [orig:101 _4 ] [101])) "/home/anand/Decode/decode.cpp":251:25 84 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (set (reg/f:DI 0 ax [224])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [81 argv+0 S8 A64])) "/home/anand/Decode/decode.cpp":252:25 84 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 0 ax [orig:102 _5 ] [102])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [224])
                (const_int 24 [0x18])) [43 MEM[(char * *)argv_132(D) + 24B]+0 S8 A64])) "/home/anand/Decode/decode.cpp":252:25 84 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (set (mem/f/c:DI (symbol_ref:DI ("_ZL18audio_dst_filename") [flags 0x2]  <var_decl 0x75229f05e2d0 audio_dst_filename>) [43 audio_dst_filename+0 S8 A64])
        (reg/f:DI 0 ax [orig:102 _5 ] [102])) "/home/anand/Decode/decode.cpp":252:25 84 {*movdi_internal}
     (nil))
(insn 35 34 36 4 (set (reg/f:DI 0 ax [orig:103 src_filename.35_6 ] [103])
        (mem/f/c:DI (symbol_ref:DI ("_ZL12src_filename") [flags 0x2]  <var_decl 0x75229f05e1b0 src_filename>) [43 src_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":255:29 84 {*movdi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:DI 2 cx)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":255:29 84 {*movdi_internal}
     (nil))
(insn 37 36 38 4 (set (reg:DI 1 dx)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":255:29 84 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:103 src_filename.35_6 ] [103])) "/home/anand/Decode/decode.cpp":255:29 84 {*movdi_internal}
     (nil))
(insn 39 38 40 4 (set (reg:DI 0 ax [225])
        (symbol_ref:DI ("_ZL7fmt_ctx") [flags 0x2]  <var_decl 0x75229f5db5a0 fmt_ctx>)) "/home/anand/Decode/decode.cpp":255:29 84 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [225])) "/home/anand/Decode/decode.cpp":255:29 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL7fmt_ctx") [flags 0x2]  <var_decl 0x75229f5db5a0 fmt_ctx>)
        (nil)))
(call_insn 41 40 45 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("avformat_open_input") [flags 0x41]  <function_decl 0x75229f043b00 avformat_open_input>) [0 avformat_open_input S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":255:29 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 45 41 47 4 (parallel [
            (set (reg:SI 0 ax [226])
                (lshiftrt:SI (reg:SI 0 ax [orig:104 _7 ] [104])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":255:66 discrim 1 979 {*lshrsi3_1}
     (nil))
(insn 47 45 48 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:204 retval.34_138 ] [204])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":255:6 discrim 1 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 48 47 49 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "/home/anand/Decode/decode.cpp":255:6 discrim 1 1130 {*jcc}
     (nil)
 -> 61)
(note 49 48 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 5 (set (reg/f:DI 1 dx [orig:105 src_filename.36_8 ] [105])
        (mem/f/c:DI (symbol_ref:DI ("_ZL12src_filename") [flags 0x2]  <var_decl 0x75229f05e1b0 src_filename>) [43 src_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":256:17 84 {*movdi_internal}
     (nil))
(insn 51 50 53 5 (set (reg/f:DI 0 ax [orig:106 stderr.37_9 ] [106])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":256:17 84 {*movdi_internal}
     (nil))
(insn 53 51 54 5 (set (reg:DI 2 cx [227])
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x75229ec1cd80 *.LC21>)) "/home/anand/Decode/decode.cpp":256:17 84 {*movdi_internal}
     (nil))
(insn 54 53 55 5 (set (reg:DI 4 si)
        (reg:DI 2 cx [227])) "/home/anand/Decode/decode.cpp":256:17 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x75229ec1cd80 *.LC21>)
        (nil)))
(insn 55 54 56 5 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:106 stderr.37_9 ] [106])) "/home/anand/Decode/decode.cpp":256:17 84 {*movdi_internal}
     (nil))
(insn 56 55 57 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":256:17 87 {*movqi_internal}
     (nil))
(call_insn 57 56 58 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":256:17 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 58 57 59 5 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":257:14 85 {*movsi_internal}
     (nil))
(call_insn 59 58 60 5 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7522a1345400 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":257:14 1137 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 60 59 61)
(code_label 61 60 62 6 38 (nil) [1 uses])
(note 62 61 63 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 6 (set (reg/f:DI 0 ax [orig:107 fmt_ctx.39_10 ] [107])
        (mem/f/c:DI (symbol_ref:DI ("_ZL7fmt_ctx") [flags 0x2]  <var_decl 0x75229f5db5a0 fmt_ctx>) [77 fmt_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":261:35 84 {*movdi_internal}
     (nil))
(insn 64 63 65 6 (set (reg:DI 4 si)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":261:35 84 {*movdi_internal}
     (nil))
(insn 65 64 66 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:107 fmt_ctx.39_10 ] [107])) "/home/anand/Decode/decode.cpp":261:35 84 {*movdi_internal}
     (nil))
(call_insn 66 65 70 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("avformat_find_stream_info") [flags 0x41]  <function_decl 0x75229f043c00 avformat_find_stream_info>) [0 avformat_find_stream_info S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":261:35 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 70 66 72 6 (parallel [
            (set (reg:SI 0 ax [228])
                (lshiftrt:SI (reg:SI 0 ax [orig:108 _11 ] [108])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":261:51 discrim 1 979 {*lshrsi3_1}
     (nil))
(insn 72 70 73 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:205 retval.38_141 ] [205])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":261:6 discrim 1 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 73 72 74 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) "/home/anand/Decode/decode.cpp":261:6 discrim 1 1130 {*jcc}
     (nil)
 -> 85)
(note 74 73 75 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 7 (set (reg/f:DI 0 ax [orig:109 stderr.40_12 ] [109])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":262:17 84 {*movdi_internal}
     (nil))
(insn 76 75 77 7 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [orig:109 stderr.40_12 ] [109])) "/home/anand/Decode/decode.cpp":262:17 84 {*movdi_internal}
     (nil))
(insn 77 76 78 7 (set (reg:DI 1 dx)
        (const_int 34 [0x22])) "/home/anand/Decode/decode.cpp":262:17 84 {*movdi_internal}
     (nil))
(insn 78 77 79 7 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":262:17 84 {*movdi_internal}
     (nil))
(insn 79 78 80 7 (set (reg:DI 0 ax [229])
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x75229ec28000 *.LC22>)) "/home/anand/Decode/decode.cpp":262:17 84 {*movdi_internal}
     (nil))
(insn 80 79 81 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [229])) "/home/anand/Decode/decode.cpp":262:17 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x75229ec28000 *.LC22>)
        (nil)))
(call_insn 81 80 82 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7522a1325f00 __builtin_fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":262:17 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 82 81 83 7 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":263:14 85 {*movsi_internal}
     (nil))
(call_insn 83 82 84 7 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7522a1345400 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":263:14 1137 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 84 83 85)
(code_label 85 84 86 8 39 (nil) [1 uses])
(note 86 85 87 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 8 (set (reg/f:DI 0 ax [orig:110 fmt_ctx.42_13 ] [110])
        (mem/f/c:DI (symbol_ref:DI ("_ZL7fmt_ctx") [flags 0x2]  <var_decl 0x75229f5db5a0 fmt_ctx>) [77 fmt_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":266:28 84 {*movdi_internal}
     (nil))
(insn 88 87 89 8 (set (reg:SI 2 cx)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":266:28 85 {*movsi_internal}
     (nil))
(insn 89 88 90 8 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:110 fmt_ctx.42_13 ] [110])) "/home/anand/Decode/decode.cpp":266:28 84 {*movdi_internal}
     (nil))
(insn 90 89 91 8 (set (reg:DI 0 ax [230])
        (symbol_ref:DI ("_ZL13video_dec_ctx") [flags 0x2]  <var_decl 0x75229f5db630 video_dec_ctx>)) "/home/anand/Decode/decode.cpp":266:28 84 {*movdi_internal}
     (nil))
(insn 91 90 92 8 (set (reg:DI 4 si)
        (reg:DI 0 ax [230])) "/home/anand/Decode/decode.cpp":266:28 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL13video_dec_ctx") [flags 0x2]  <var_decl 0x75229f5db630 video_dec_ctx>)
        (nil)))
(insn 92 91 93 8 (set (reg:DI 0 ax [231])
        (symbol_ref:DI ("_ZL16video_stream_idx") [flags 0x2]  <var_decl 0x75229f05e630 video_stream_idx>)) "/home/anand/Decode/decode.cpp":266:28 84 {*movdi_internal}
     (nil))
(insn 93 92 94 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [231])) "/home/anand/Decode/decode.cpp":266:28 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL16video_stream_idx") [flags 0x2]  <var_decl 0x75229f05e630 video_stream_idx>)
        (nil)))
(call_insn 94 93 98 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL18open_codec_contextPiPP14AVCodecContextP15AVFormatContext11AVMediaType") [flags 0x3]  <function_decl 0x75229f06b200 open_codec_context>) [0 open_codec_context S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":266:28 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 98 94 99 8 (set (reg:SI 0 ax [232])
        (not:SI (reg:SI 0 ax [orig:111 _14 ] [111]))) "/home/anand/Decode/decode.cpp":266:93 discrim 1 867 {*one_cmplsi2_1}
     (nil))
(insn 99 98 101 8 (parallel [
            (set (reg:SI 0 ax [233])
                (lshiftrt:SI (reg:SI 0 ax [232])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":266:93 discrim 1 979 {*lshrsi3_1}
     (nil))
(insn 101 99 102 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:206 retval.41_144 ] [206])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":266:6 discrim 1 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 102 101 103 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "/home/anand/Decode/decode.cpp":266:6 discrim 1 1130 {*jcc}
     (nil)
 -> 178)
(note 103 102 104 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 9 (set (reg/f:DI 0 ax [orig:112 fmt_ctx.43_15 ] [112])
        (mem/f/c:DI (symbol_ref:DI ("_ZL7fmt_ctx") [flags 0x2]  <var_decl 0x75229f5db5a0 fmt_ctx>) [77 fmt_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":267:34 84 {*movdi_internal}
     (nil))
(insn 105 104 106 9 (set (reg/f:DI 0 ax [orig:113 _16 ] [113])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:112 fmt_ctx.43_15 ] [112])
                (const_int 48 [0x30])) [56 fmt_ctx.43_15->streams+0 S8 A64])) "/home/anand/Decode/decode.cpp":267:34 84 {*movdi_internal}
     (nil))
(insn 106 105 107 9 (set (reg:SI 1 dx [orig:114 video_stream_idx.44_17 ] [114])
        (mem/c:SI (symbol_ref:DI ("_ZL16video_stream_idx") [flags 0x2]  <var_decl 0x75229f05e630 video_stream_idx>) [1 video_stream_idx+0 S4 A32])) "/home/anand/Decode/decode.cpp":267:42 85 {*movsi_internal}
     (nil))
(insn 107 106 108 9 (set (reg:DI 1 dx [orig:115 _18 ] [115])
        (sign_extend:DI (reg:SI 1 dx [orig:114 video_stream_idx.44_17 ] [114]))) "/home/anand/Decode/decode.cpp":267:42 173 {*extendsidi2_rex64}
     (nil))
(insn 108 107 109 9 (parallel [
            (set (reg:DI 1 dx [orig:116 _19 ] [116])
                (ashift:DI (reg:DI 1 dx [orig:115 _18 ] [115])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":267:58 912 {*ashldi3_1}
     (nil))
(insn 109 108 110 9 (parallel [
            (set (reg/f:DI 0 ax [orig:117 _20 ] [117])
                (plus:DI (reg/f:DI 0 ax [orig:113 _16 ] [113])
                    (reg:DI 1 dx [orig:116 _19 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":267:58 272 {*adddi_1}
     (nil))
(insn 110 109 111 9 (set (reg/f:DI 0 ax [orig:118 _21 ] [118])
        (mem/f:DI (reg/f:DI 0 ax [orig:117 _20 ] [117]) [70 *_20+0 S8 A64])) "/home/anand/Decode/decode.cpp":267:58 84 {*movdi_internal}
     (nil))
(insn 111 110 112 9 (set (mem/f/c:DI (symbol_ref:DI ("_ZL12video_stream") [flags 0x2]  <var_decl 0x75229f05e090 video_stream>) [70 video_stream+0 S8 A64])
        (reg/f:DI 0 ax [orig:118 _21 ] [118])) "/home/anand/Decode/decode.cpp":267:23 84 {*movdi_internal}
     (nil))
(insn 112 111 113 9 (set (reg/f:DI 0 ax [orig:119 video_dst_filename.45_22 ] [119])
        (mem/f/c:DI (symbol_ref:DI ("_ZL18video_dst_filename") [flags 0x2]  <var_decl 0x75229f05e240 video_dst_filename>) [43 video_dst_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":269:32 84 {*movdi_internal}
     (nil))
(insn 113 112 114 9 (set (reg:DI 1 dx [234])
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x75229ec28090 *.LC23>)) "/home/anand/Decode/decode.cpp":269:32 84 {*movdi_internal}
     (nil))
(insn 114 113 115 9 (set (reg:DI 4 si)
        (reg:DI 1 dx [234])) "/home/anand/Decode/decode.cpp":269:32 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x75229ec28090 *.LC23>)
        (nil)))
(insn 115 114 116 9 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:119 video_dst_filename.45_22 ] [119])) "/home/anand/Decode/decode.cpp":269:32 84 {*movdi_internal}
     (nil))
(call_insn 116 115 119 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x75229f230100 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":269:32 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 119 116 120 9 (set (mem/f/c:DI (symbol_ref:DI ("_ZL14video_dst_file") [flags 0x2]  <var_decl 0x75229f05e360 video_dst_file>) [24 video_dst_file+0 S8 A64])
        (reg/f:DI 0 ax [orig:120 _23 ] [120])) "/home/anand/Decode/decode.cpp":269:25 discrim 1 84 {*movdi_internal}
     (nil))
(insn 120 119 121 9 (set (reg/f:DI 0 ax [orig:121 video_dst_file.46_24 ] [121])
        (mem/f/c:DI (symbol_ref:DI ("_ZL14video_dst_file") [flags 0x2]  <var_decl 0x75229f05e360 video_dst_file>) [24 video_dst_file+0 S8 A64])) "/home/anand/Decode/decode.cpp":270:14 84 {*movdi_internal}
     (nil))
(insn 121 120 122 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:121 video_dst_file.46_24 ] [121])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":270:10 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 122 121 123 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "/home/anand/Decode/decode.cpp":270:10 1130 {*jcc}
     (nil)
 -> 135)
(note 123 122 124 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 10 (set (reg/f:DI 1 dx [orig:122 video_dst_filename.47_25 ] [122])
        (mem/f/c:DI (symbol_ref:DI ("_ZL18video_dst_filename") [flags 0x2]  <var_decl 0x75229f05e240 video_dst_filename>) [43 video_dst_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":271:21 84 {*movdi_internal}
     (nil))
(insn 125 124 127 10 (set (reg/f:DI 0 ax [orig:123 stderr.48_26 ] [123])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":271:21 84 {*movdi_internal}
     (nil))
(insn 127 125 128 10 (set (reg:DI 2 cx [236])
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x75229ec28120 *.LC24>)) "/home/anand/Decode/decode.cpp":271:21 84 {*movdi_internal}
     (nil))
(insn 128 127 129 10 (set (reg:DI 4 si)
        (reg:DI 2 cx [236])) "/home/anand/Decode/decode.cpp":271:21 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x75229ec28120 *.LC24>)
        (nil)))
(insn 129 128 130 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:123 stderr.48_26 ] [123])) "/home/anand/Decode/decode.cpp":271:21 84 {*movdi_internal}
     (nil))
(insn 130 129 131 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":271:21 87 {*movqi_internal}
     (nil))
(call_insn 131 130 132 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":271:21 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 132 131 570 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":272:18 85 {*movsi_internal}
     (nil))
(jump_insn 570 132 571 10 (set (pc)
        (label_ref 510)) "/home/anand/Decode/decode.cpp":273:19 1131 {jump}
     (nil)
 -> 510)
(barrier 571 570 135)
(code_label 135 571 136 11 41 (nil) [1 uses])
(note 136 135 137 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 11 (set (reg/f:DI 0 ax [orig:124 video_dec_ctx.49_27 ] [124])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13video_dec_ctx") [flags 0x2]  <var_decl 0x75229f5db630 video_dec_ctx>) [25 video_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":277:33 84 {*movdi_internal}
     (nil))
(insn 138 137 139 11 (set (reg:SI 0 ax [orig:125 _28 ] [125])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:124 video_dec_ctx.49_27 ] [124])
                (const_int 112 [0x70])) [1 video_dec_ctx.49_27->width+0 S4 A64])) "/home/anand/Decode/decode.cpp":277:33 85 {*movsi_internal}
     (nil))
(insn 139 138 140 11 (set (mem/c:SI (symbol_ref:DI ("_ZL5width") [flags 0x2]  <var_decl 0x75229f5dbea0 width>) [1 width+0 S4 A32])
        (reg:SI 0 ax [orig:125 _28 ] [125])) "/home/anand/Decode/decode.cpp":277:16 85 {*movsi_internal}
     (nil))
(insn 140 139 141 11 (set (reg/f:DI 0 ax [orig:126 video_dec_ctx.50_29 ] [126])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13video_dec_ctx") [flags 0x2]  <var_decl 0x75229f5db630 video_dec_ctx>) [25 video_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":278:34 84 {*movdi_internal}
     (nil))
(insn 141 140 142 11 (set (reg:SI 0 ax [orig:127 _30 ] [127])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:126 video_dec_ctx.50_29 ] [126])
                (const_int 116 [0x74])) [1 video_dec_ctx.50_29->height+0 S4 A32])) "/home/anand/Decode/decode.cpp":278:34 85 {*movsi_internal}
     (nil))
(insn 142 141 143 11 (set (mem/c:SI (symbol_ref:DI ("_ZL6height") [flags 0x2]  <var_decl 0x75229f5dbf30 height>) [1 height+0 S4 A32])
        (reg:SI 0 ax [orig:127 _30 ] [127])) "/home/anand/Decode/decode.cpp":278:17 85 {*movsi_internal}
     (nil))
(insn 143 142 144 11 (set (reg/f:DI 0 ax [orig:128 video_dec_ctx.51_31 ] [128])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13video_dec_ctx") [flags 0x2]  <var_decl 0x75229f5db630 video_dec_ctx>) [25 video_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":279:35 84 {*movdi_internal}
     (nil))
(insn 144 143 145 11 (set (reg:SI 0 ax [orig:129 _32 ] [129])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:128 video_dec_ctx.51_31 ] [128])
                (const_int 136 [0x88])) [22 video_dec_ctx.51_31->pix_fmt+0 S4 A64])) "/home/anand/Decode/decode.cpp":279:35 85 {*movsi_internal}
     (nil))
(insn 145 144 146 11 (set (mem/c:SI (symbol_ref:DI ("_ZL7pix_fmt") [flags 0x2]  <var_decl 0x75229f05e000 pix_fmt>) [22 pix_fmt+0 S4 A32])
        (reg:SI 0 ax [orig:129 _32 ] [129])) "/home/anand/Decode/decode.cpp":279:18 85 {*movsi_internal}
     (nil))
(insn 146 145 147 11 (set (reg:SI 2 cx [orig:130 pix_fmt.52_33 ] [130])
        (mem/c:SI (symbol_ref:DI ("_ZL7pix_fmt") [flags 0x2]  <var_decl 0x75229f05e000 pix_fmt>) [22 pix_fmt+0 S4 A32])) "/home/anand/Decode/decode.cpp":280:30 85 {*movsi_internal}
     (nil))
(insn 147 146 148 11 (set (reg:SI 1 dx [orig:131 height.53_34 ] [131])
        (mem/c:SI (symbol_ref:DI ("_ZL6height") [flags 0x2]  <var_decl 0x75229f5dbf30 height>) [1 height+0 S4 A32])) "/home/anand/Decode/decode.cpp":280:30 85 {*movsi_internal}
     (nil))
(insn 148 147 149 11 (set (reg:SI 0 ax [orig:132 width.54_35 ] [132])
        (mem/c:SI (symbol_ref:DI ("_ZL5width") [flags 0x2]  <var_decl 0x75229f5dbea0 width>) [1 width+0 S4 A32])) "/home/anand/Decode/decode.cpp":280:30 85 {*movsi_internal}
     (nil))
(insn 149 148 150 11 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":280:30 85 {*movsi_internal}
     (nil))
(insn 150 149 151 11 (set (reg:SI 36 r8)
        (reg:SI 2 cx [orig:130 pix_fmt.52_33 ] [130])) "/home/anand/Decode/decode.cpp":280:30 85 {*movsi_internal}
     (nil))
(insn 151 150 152 11 (set (reg:SI 2 cx)
        (reg:SI 1 dx [orig:131 height.53_34 ] [131])) "/home/anand/Decode/decode.cpp":280:30 85 {*movsi_internal}
     (nil))
(insn 152 151 153 11 (set (reg:SI 1 dx)
        (reg:SI 0 ax [orig:132 width.54_35 ] [132])) "/home/anand/Decode/decode.cpp":280:30 85 {*movsi_internal}
     (nil))
(insn 153 152 154 11 (set (reg:DI 0 ax [237])
        (symbol_ref:DI ("_ZL18video_dst_linesize") [flags 0x2]  <var_decl 0x75229f05e510 video_dst_linesize>)) "/home/anand/Decode/decode.cpp":280:30 84 {*movdi_internal}
     (nil))
(insn 154 153 155 11 (set (reg:DI 4 si)
        (reg:DI 0 ax [237])) "/home/anand/Decode/decode.cpp":280:30 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL18video_dst_linesize") [flags 0x2]  <var_decl 0x75229f05e510 video_dst_linesize>)
        (nil)))
(insn 155 154 156 11 (set (reg:DI 0 ax [238])
        (symbol_ref:DI ("_ZL14video_dst_data") [flags 0x2]  <var_decl 0x75229f05e480 video_dst_data>)) "/home/anand/Decode/decode.cpp":280:30 84 {*movdi_internal}
     (nil))
(insn 156 155 157 11 (set (reg:DI 5 di)
        (reg:DI 0 ax [238])) "/home/anand/Decode/decode.cpp":280:30 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL14video_dst_data") [flags 0x2]  <var_decl 0x75229f05e480 video_dst_data>)
        (nil)))
(call_insn 157 156 159 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_image_alloc") [flags 0x41]  <function_decl 0x7522a0d49900 av_image_alloc>) [0 av_image_alloc S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":280:30 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 159 157 162 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])
        (reg:SI 0 ax [orig:207 _153 ] [207])) "/home/anand/Decode/decode.cpp":280:30 discrim 1 85 {*movsi_internal}
     (nil))
(insn 162 159 163 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":282:10 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 163 162 164 11 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "/home/anand/Decode/decode.cpp":282:10 1130 {*jcc}
     (nil)
 -> 174)
(note 164 163 165 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 12 (set (reg/f:DI 0 ax [orig:133 stderr.55_36 ] [133])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":283:21 84 {*movdi_internal}
     (nil))
(insn 166 165 167 12 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [orig:133 stderr.55_36 ] [133])) "/home/anand/Decode/decode.cpp":283:21 84 {*movdi_internal}
     (nil))
(insn 167 166 168 12 (set (reg:DI 1 dx)
        (const_int 36 [0x24])) "/home/anand/Decode/decode.cpp":283:21 84 {*movdi_internal}
     (nil))
(insn 168 167 169 12 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":283:21 84 {*movdi_internal}
     (nil))
(insn 169 168 170 12 (set (reg:DI 0 ax [239])
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x75229ec281b0 *.LC25>)) "/home/anand/Decode/decode.cpp":283:21 84 {*movdi_internal}
     (nil))
(insn 170 169 171 12 (set (reg:DI 5 di)
        (reg:DI 0 ax [239])) "/home/anand/Decode/decode.cpp":283:21 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x75229ec281b0 *.LC25>)
        (nil)))
(call_insn 171 170 572 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7522a1325f00 __builtin_fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":283:21 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 572 171 573 12 (set (pc)
        (label_ref 510)) "/home/anand/Decode/decode.cpp":284:19 1131 {jump}
     (nil)
 -> 510)
(barrier 573 572 174)
(code_label 174 573 175 13 43 (nil) [1 uses])
(note 175 174 176 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 13 (set (reg:SI 0 ax [240])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])) "/home/anand/Decode/decode.cpp":286:28 85 {*movsi_internal}
     (nil))
(insn 177 176 178 13 (set (mem/c:SI (symbol_ref:DI ("_ZL17video_dst_bufsize") [flags 0x2]  <var_decl 0x75229f05e5a0 video_dst_bufsize>) [1 video_dst_bufsize+0 S4 A32])
        (reg:SI 0 ax [240])) "/home/anand/Decode/decode.cpp":286:28 85 {*movsi_internal}
     (nil))
(code_label 178 177 179 14 40 (nil) [1 uses])
(note 179 178 180 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 14 (set (reg/f:DI 0 ax [orig:134 fmt_ctx.57_37 ] [134])
        (mem/f/c:DI (symbol_ref:DI ("_ZL7fmt_ctx") [flags 0x2]  <var_decl 0x75229f5db5a0 fmt_ctx>) [77 fmt_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":289:28 84 {*movdi_internal}
     (nil))
(insn 181 180 182 14 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":289:28 85 {*movsi_internal}
     (nil))
(insn 182 181 183 14 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:134 fmt_ctx.57_37 ] [134])) "/home/anand/Decode/decode.cpp":289:28 84 {*movdi_internal}
     (nil))
(insn 183 182 184 14 (set (reg:DI 0 ax [241])
        (symbol_ref:DI ("_ZL13audio_dec_ctx") [flags 0x2]  <var_decl 0x75229f5dbd80 audio_dec_ctx>)) "/home/anand/Decode/decode.cpp":289:28 84 {*movdi_internal}
     (nil))
(insn 184 183 185 14 (set (reg:DI 4 si)
        (reg:DI 0 ax [241])) "/home/anand/Decode/decode.cpp":289:28 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL13audio_dec_ctx") [flags 0x2]  <var_decl 0x75229f5dbd80 audio_dec_ctx>)
        (nil)))
(insn 185 184 186 14 (set (reg:DI 0 ax [242])
        (symbol_ref:DI ("_ZL16audio_stream_idx") [flags 0x2]  <var_decl 0x75229f05e6c0 audio_stream_idx>)) "/home/anand/Decode/decode.cpp":289:28 84 {*movdi_internal}
     (nil))
(insn 186 185 187 14 (set (reg:DI 5 di)
        (reg:DI 0 ax [242])) "/home/anand/Decode/decode.cpp":289:28 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL16audio_stream_idx") [flags 0x2]  <var_decl 0x75229f05e6c0 audio_stream_idx>)
        (nil)))
(call_insn 187 186 191 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL18open_codec_contextPiPP14AVCodecContextP15AVFormatContext11AVMediaType") [flags 0x3]  <function_decl 0x75229f06b200 open_codec_context>) [0 open_codec_context S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":289:28 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 191 187 192 14 (set (reg:SI 0 ax [243])
        (not:SI (reg:SI 0 ax [orig:135 _38 ] [135]))) "/home/anand/Decode/decode.cpp":289:93 discrim 1 867 {*one_cmplsi2_1}
     (nil))
(insn 192 191 194 14 (parallel [
            (set (reg:SI 0 ax [244])
                (lshiftrt:SI (reg:SI 0 ax [243])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":289:93 discrim 1 979 {*lshrsi3_1}
     (nil))
(insn 194 192 195 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:208 retval.56_161 ] [208])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":289:6 discrim 1 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 195 194 196 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) "/home/anand/Decode/decode.cpp":289:6 discrim 1 1130 {*jcc}
     (nil)
 -> 228)
(note 196 195 197 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 15 (set (reg/f:DI 0 ax [orig:136 fmt_ctx.58_39 ] [136])
        (mem/f/c:DI (symbol_ref:DI ("_ZL7fmt_ctx") [flags 0x2]  <var_decl 0x75229f5db5a0 fmt_ctx>) [77 fmt_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":290:34 84 {*movdi_internal}
     (nil))
(insn 198 197 199 15 (set (reg/f:DI 0 ax [orig:137 _40 ] [137])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:136 fmt_ctx.58_39 ] [136])
                (const_int 48 [0x30])) [56 fmt_ctx.58_39->streams+0 S8 A64])) "/home/anand/Decode/decode.cpp":290:34 84 {*movdi_internal}
     (nil))
(insn 199 198 200 15 (set (reg:SI 1 dx [orig:138 audio_stream_idx.59_41 ] [138])
        (mem/c:SI (symbol_ref:DI ("_ZL16audio_stream_idx") [flags 0x2]  <var_decl 0x75229f05e6c0 audio_stream_idx>) [1 audio_stream_idx+0 S4 A32])) "/home/anand/Decode/decode.cpp":290:42 85 {*movsi_internal}
     (nil))
(insn 200 199 201 15 (set (reg:DI 1 dx [orig:139 _42 ] [139])
        (sign_extend:DI (reg:SI 1 dx [orig:138 audio_stream_idx.59_41 ] [138]))) "/home/anand/Decode/decode.cpp":290:42 173 {*extendsidi2_rex64}
     (nil))
(insn 201 200 202 15 (parallel [
            (set (reg:DI 1 dx [orig:140 _43 ] [140])
                (ashift:DI (reg:DI 1 dx [orig:139 _42 ] [139])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":290:58 912 {*ashldi3_1}
     (nil))
(insn 202 201 203 15 (parallel [
            (set (reg/f:DI 0 ax [orig:141 _44 ] [141])
                (plus:DI (reg/f:DI 0 ax [orig:137 _40 ] [137])
                    (reg:DI 1 dx [orig:140 _43 ] [140])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":290:58 272 {*adddi_1}
     (nil))
(insn 203 202 204 15 (set (reg/f:DI 0 ax [orig:142 _45 ] [142])
        (mem/f:DI (reg/f:DI 0 ax [orig:141 _44 ] [141]) [70 *_44+0 S8 A64])) "/home/anand/Decode/decode.cpp":290:58 84 {*movdi_internal}
     (nil))
(insn 204 203 205 15 (set (mem/f/c:DI (symbol_ref:DI ("_ZL12audio_stream") [flags 0x2]  <var_decl 0x75229f05e120 audio_stream>) [70 audio_stream+0 S8 A64])
        (reg/f:DI 0 ax [orig:142 _45 ] [142])) "/home/anand/Decode/decode.cpp":290:23 84 {*movdi_internal}
     (nil))
(insn 205 204 206 15 (set (reg/f:DI 0 ax [orig:143 audio_dst_filename.60_46 ] [143])
        (mem/f/c:DI (symbol_ref:DI ("_ZL18audio_dst_filename") [flags 0x2]  <var_decl 0x75229f05e2d0 audio_dst_filename>) [43 audio_dst_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":291:32 84 {*movdi_internal}
     (nil))
(insn 206 205 207 15 (set (reg:DI 1 dx [245])
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x75229ec28090 *.LC23>)) "/home/anand/Decode/decode.cpp":291:32 84 {*movdi_internal}
     (nil))
(insn 207 206 208 15 (set (reg:DI 4 si)
        (reg:DI 1 dx [245])) "/home/anand/Decode/decode.cpp":291:32 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x75229ec28090 *.LC23>)
        (nil)))
(insn 208 207 209 15 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:143 audio_dst_filename.60_46 ] [143])) "/home/anand/Decode/decode.cpp":291:32 84 {*movdi_internal}
     (nil))
(call_insn 209 208 212 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x75229f230100 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":291:32 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 212 209 213 15 (set (mem/f/c:DI (symbol_ref:DI ("_ZL14audio_dst_file") [flags 0x2]  <var_decl 0x75229f05e3f0 audio_dst_file>) [24 audio_dst_file+0 S8 A64])
        (reg/f:DI 0 ax [orig:144 _47 ] [144])) "/home/anand/Decode/decode.cpp":291:25 discrim 1 84 {*movdi_internal}
     (nil))
(insn 213 212 214 15 (set (reg/f:DI 0 ax [orig:145 audio_dst_file.61_48 ] [145])
        (mem/f/c:DI (symbol_ref:DI ("_ZL14audio_dst_file") [flags 0x2]  <var_decl 0x75229f05e3f0 audio_dst_file>) [24 audio_dst_file+0 S8 A64])) "/home/anand/Decode/decode.cpp":292:14 84 {*movdi_internal}
     (nil))
(insn 214 213 215 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:145 audio_dst_file.61_48 ] [145])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":292:10 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 215 214 216 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) "/home/anand/Decode/decode.cpp":292:10 1130 {*jcc}
     (nil)
 -> 228)
(note 216 215 217 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 16 (set (reg/f:DI 1 dx [orig:146 audio_dst_filename.62_49 ] [146])
        (mem/f/c:DI (symbol_ref:DI ("_ZL18audio_dst_filename") [flags 0x2]  <var_decl 0x75229f05e2d0 audio_dst_filename>) [43 audio_dst_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":293:21 84 {*movdi_internal}
     (nil))
(insn 218 217 220 16 (set (reg/f:DI 0 ax [orig:147 stderr.63_50 ] [147])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":293:21 84 {*movdi_internal}
     (nil))
(insn 220 218 221 16 (set (reg:DI 2 cx [247])
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x75229ec28120 *.LC24>)) "/home/anand/Decode/decode.cpp":293:21 84 {*movdi_internal}
     (nil))
(insn 221 220 222 16 (set (reg:DI 4 si)
        (reg:DI 2 cx [247])) "/home/anand/Decode/decode.cpp":293:21 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x75229ec28120 *.LC24>)
        (nil)))
(insn 222 221 223 16 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:147 stderr.63_50 ] [147])) "/home/anand/Decode/decode.cpp":293:21 84 {*movdi_internal}
     (nil))
(insn 223 222 224 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":293:21 87 {*movqi_internal}
     (nil))
(call_insn 224 223 225 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41]  <function_decl 0x7522a1322500 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":293:21 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 225 224 574 16 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":294:18 85 {*movsi_internal}
     (nil))
(jump_insn 574 225 575 16 (set (pc)
        (label_ref 510)) "/home/anand/Decode/decode.cpp":295:19 1131 {jump}
     (nil)
 -> 510)
(barrier 575 574 228)
(code_label 228 575 229 17 44 (nil) [2 uses])
(note 229 228 230 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 17 (set (reg/f:DI 1 dx [orig:148 src_filename.64_51 ] [148])
        (mem/f/c:DI (symbol_ref:DI ("_ZL12src_filename") [flags 0x2]  <var_decl 0x75229f05e1b0 src_filename>) [43 src_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":300:20 84 {*movdi_internal}
     (nil))
(insn 231 230 232 17 (set (reg/f:DI 0 ax [orig:149 fmt_ctx.65_52 ] [149])
        (mem/f/c:DI (symbol_ref:DI ("_ZL7fmt_ctx") [flags 0x2]  <var_decl 0x75229f5db5a0 fmt_ctx>) [77 fmt_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":300:20 84 {*movdi_internal}
     (nil))
(insn 232 231 234 17 (set (reg:SI 2 cx)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":300:20 85 {*movsi_internal}
     (nil))
(insn 234 232 235 17 (set (reg:SI 4 si)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":300:20 85 {*movsi_internal}
     (nil))
(insn 235 234 236 17 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:149 fmt_ctx.65_52 ] [149])) "/home/anand/Decode/decode.cpp":300:20 84 {*movdi_internal}
     (nil))
(call_insn 236 235 237 17 (call (mem:QI (symbol_ref:DI ("av_dump_format") [flags 0x41]  <function_decl 0x75229f056000 av_dump_format>) [0 av_dump_format S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":300:20 1137 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 237 236 238 17 (set (reg/f:DI 0 ax [orig:150 audio_stream.66_53 ] [150])
        (mem/f/c:DI (symbol_ref:DI ("_ZL12audio_stream") [flags 0x2]  <var_decl 0x75229f05e120 audio_stream>) [70 audio_stream+0 S8 A64])) "/home/anand/Decode/decode.cpp":302:10 84 {*movdi_internal}
     (nil))
(insn 238 237 239 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:150 audio_stream.66_53 ] [150])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":302:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 239 238 240 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) "/home/anand/Decode/decode.cpp":302:6 1130 {*jcc}
     (nil)
 -> 255)
(note 240 239 241 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 18 (set (reg/f:DI 0 ax [orig:151 video_stream.67_54 ] [151])
        (mem/f/c:DI (symbol_ref:DI ("_ZL12video_stream") [flags 0x2]  <var_decl 0x75229f05e090 video_stream>) [70 video_stream+0 S8 A64])) "/home/anand/Decode/decode.cpp":302:27 discrim 1 84 {*movdi_internal}
     (nil))
(insn 242 241 243 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:151 video_stream.67_54 ] [151])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":302:24 discrim 1 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 243 242 244 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) "/home/anand/Decode/decode.cpp":302:24 discrim 1 1130 {*jcc}
     (nil)
 -> 255)
(note 244 243 245 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 19 (set (reg/f:DI 0 ax [orig:152 stderr.68_55 ] [152])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":303:17 84 {*movdi_internal}
     (nil))
(insn 246 245 247 19 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [orig:152 stderr.68_55 ] [152])) "/home/anand/Decode/decode.cpp":303:17 84 {*movdi_internal}
     (nil))
(insn 247 246 248 19 (set (reg:DI 1 dx)
        (const_int 60 [0x3c])) "/home/anand/Decode/decode.cpp":303:17 84 {*movdi_internal}
     (nil))
(insn 248 247 249 19 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":303:17 84 {*movdi_internal}
     (nil))
(insn 249 248 250 19 (set (reg:DI 0 ax [248])
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x75229ec28240 *.LC26>)) "/home/anand/Decode/decode.cpp":303:17 84 {*movdi_internal}
     (nil))
(insn 250 249 251 19 (set (reg:DI 5 di)
        (reg:DI 0 ax [248])) "/home/anand/Decode/decode.cpp":303:17 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x75229ec28240 *.LC26>)
        (nil)))
(call_insn 251 250 252 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7522a1325f00 __builtin_fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":303:17 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 252 251 576 19 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":304:14 85 {*movsi_internal}
     (nil))
(jump_insn 576 252 577 19 (set (pc)
        (label_ref 510)) "/home/anand/Decode/decode.cpp":305:15 1131 {jump}
     (nil)
 -> 510)
(barrier 577 576 255)
(code_label 255 577 256 20 45 (nil) [2 uses])
(note 256 255 257 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 257 256 259 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_frame_alloc") [flags 0x41]  <function_decl 0x75229f2f0600 av_frame_alloc>) [0 av_frame_alloc S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":308:28 1148 {*call_value}
     (nil)
    (nil))
(insn 259 257 260 20 (set (mem/f/c:DI (symbol_ref:DI ("_ZL5frame") [flags 0x2]  <var_decl 0x75229f05e750 frame>) [27 frame+0 S8 A64])
        (reg/f:DI 0 ax [orig:153 _56 ] [153])) "/home/anand/Decode/decode.cpp":308:12 discrim 1 84 {*movdi_internal}
     (nil))
(insn 260 259 261 20 (set (reg/f:DI 0 ax [orig:154 frame.69_57 ] [154])
        (mem/f/c:DI (symbol_ref:DI ("_ZL5frame") [flags 0x2]  <var_decl 0x75229f05e750 frame>) [27 frame+0 S8 A64])) "/home/anand/Decode/decode.cpp":309:10 84 {*movdi_internal}
     (nil))
(insn 261 260 262 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:154 frame.69_57 ] [154])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":309:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 262 261 263 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 274)
            (pc))) "/home/anand/Decode/decode.cpp":309:6 1130 {*jcc}
     (nil)
 -> 274)
(note 263 262 264 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 21 (set (reg/f:DI 0 ax [orig:155 stderr.70_58 ] [155])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":310:17 84 {*movdi_internal}
     (nil))
(insn 265 264 266 21 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [orig:155 stderr.70_58 ] [155])) "/home/anand/Decode/decode.cpp":310:17 84 {*movdi_internal}
     (nil))
(insn 266 265 267 21 (set (reg:DI 1 dx)
        (const_int 25 [0x19])) "/home/anand/Decode/decode.cpp":310:17 84 {*movdi_internal}
     (nil))
(insn 267 266 268 21 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":310:17 84 {*movdi_internal}
     (nil))
(insn 268 267 269 21 (set (reg:DI 0 ax [249])
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x75229ec282d0 *.LC27>)) "/home/anand/Decode/decode.cpp":310:17 84 {*movdi_internal}
     (nil))
(insn 269 268 270 21 (set (reg:DI 5 di)
        (reg:DI 0 ax [249])) "/home/anand/Decode/decode.cpp":310:17 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x75229ec282d0 *.LC27>)
        (nil)))
(call_insn 270 269 271 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7522a1325f00 __builtin_fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":310:17 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 271 270 578 21 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])
        (const_int -12 [0xfffffffffffffff4])) "/home/anand/Decode/decode.cpp":311:14 85 {*movsi_internal}
     (nil))
(jump_insn 578 271 579 21 (set (pc)
        (label_ref 510)) "/home/anand/Decode/decode.cpp":312:15 1131 {jump}
     (nil)
 -> 510)
(barrier 579 578 274)
(code_label 274 579 275 22 46 (nil) [1 uses])
(note 275 274 276 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(call_insn 276 275 278 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_packet_alloc") [flags 0x41]  <function_decl 0x75229f372c00 av_packet_alloc>) [0 av_packet_alloc S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":315:27 1148 {*call_value}
     (nil)
    (nil))
(insn 278 276 279 22 (set (mem/f/c:DI (symbol_ref:DI ("_ZL3pkt") [flags 0x2]  <var_decl 0x75229f05e7e0 pkt>) [78 pkt+0 S8 A64])
        (reg/f:DI 0 ax [orig:156 _59 ] [156])) "/home/anand/Decode/decode.cpp":315:10 discrim 1 84 {*movdi_internal}
     (nil))
(insn 279 278 280 22 (set (reg/f:DI 0 ax [orig:157 pkt.71_60 ] [157])
        (mem/f/c:DI (symbol_ref:DI ("_ZL3pkt") [flags 0x2]  <var_decl 0x75229f05e7e0 pkt>) [78 pkt+0 S8 A64])) "/home/anand/Decode/decode.cpp":316:10 84 {*movdi_internal}
     (nil))
(insn 280 279 281 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:157 pkt.71_60 ] [157])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":316:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 281 280 282 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 293)
            (pc))) "/home/anand/Decode/decode.cpp":316:6 1130 {*jcc}
     (nil)
 -> 293)
(note 282 281 283 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 23 (set (reg/f:DI 0 ax [orig:158 stderr.72_61 ] [158])
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x75229f5db7e0 stderr>) [24 stderr+0 S8 A64])) "/home/anand/Decode/decode.cpp":317:17 84 {*movdi_internal}
     (nil))
(insn 284 283 285 23 (set (reg:DI 2 cx)
        (reg/f:DI 0 ax [orig:158 stderr.72_61 ] [158])) "/home/anand/Decode/decode.cpp":317:17 84 {*movdi_internal}
     (nil))
(insn 285 284 286 23 (set (reg:DI 1 dx)
        (const_int 26 [0x1a])) "/home/anand/Decode/decode.cpp":317:17 84 {*movdi_internal}
     (nil))
(insn 286 285 287 23 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":317:17 84 {*movdi_internal}
     (nil))
(insn 287 286 288 23 (set (reg:DI 0 ax [250])
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x75229ec28360 *.LC28>)) "/home/anand/Decode/decode.cpp":317:17 84 {*movdi_internal}
     (nil))
(insn 288 287 289 23 (set (reg:DI 5 di)
        (reg:DI 0 ax [250])) "/home/anand/Decode/decode.cpp":317:17 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x75229ec28360 *.LC28>)
        (nil)))
(call_insn 289 288 290 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7522a1325f00 __builtin_fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":317:17 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 290 289 580 23 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])
        (const_int -12 [0xfffffffffffffff4])) "/home/anand/Decode/decode.cpp":318:14 85 {*movsi_internal}
     (nil))
(jump_insn 580 290 581 23 (set (pc)
        (label_ref 510)) "/home/anand/Decode/decode.cpp":319:15 1131 {jump}
     (nil)
 -> 510)
(barrier 581 580 293)
(code_label 293 581 294 24 47 (nil) [1 uses])
(note 294 293 295 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 24 (set (reg/f:DI 0 ax [orig:159 video_stream.73_62 ] [159])
        (mem/f/c:DI (symbol_ref:DI ("_ZL12video_stream") [flags 0x2]  <var_decl 0x75229f05e090 video_stream>) [70 video_stream+0 S8 A64])) "/home/anand/Decode/decode.cpp":322:10 84 {*movdi_internal}
     (nil))
(insn 296 295 297 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:159 video_stream.73_62 ] [159])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":322:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 297 296 298 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 307)
            (pc))) "/home/anand/Decode/decode.cpp":322:6 1130 {*jcc}
     (nil)
 -> 307)
(note 298 297 299 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 25 (set (reg/f:DI 1 dx [orig:160 video_dst_filename.74_63 ] [160])
        (mem/f/c:DI (symbol_ref:DI ("_ZL18video_dst_filename") [flags 0x2]  <var_decl 0x75229f05e240 video_dst_filename>) [43 video_dst_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":323:16 84 {*movdi_internal}
     (nil))
(insn 300 299 302 25 (set (reg/f:DI 0 ax [orig:161 src_filename.75_64 ] [161])
        (mem/f/c:DI (symbol_ref:DI ("_ZL12src_filename") [flags 0x2]  <var_decl 0x75229f05e1b0 src_filename>) [43 src_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":323:16 84 {*movdi_internal}
     (nil))
(insn 302 300 303 25 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:161 src_filename.75_64 ] [161])) "/home/anand/Decode/decode.cpp":323:16 84 {*movdi_internal}
     (nil))
(insn 303 302 304 25 (set (reg:DI 0 ax [251])
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x75229ec283f0 *.LC29>)) "/home/anand/Decode/decode.cpp":323:16 84 {*movdi_internal}
     (nil))
(insn 304 303 305 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [251])) "/home/anand/Decode/decode.cpp":323:16 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x75229ec283f0 *.LC29>)
        (nil)))
(insn 305 304 306 25 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":323:16 87 {*movqi_internal}
     (nil))
(call_insn 306 305 307 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7522a1326600 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":323:16 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 307 306 308 26 48 (nil) [1 uses])
(note 308 307 309 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 26 (set (reg/f:DI 0 ax [orig:162 audio_stream.76_65 ] [162])
        (mem/f/c:DI (symbol_ref:DI ("_ZL12audio_stream") [flags 0x2]  <var_decl 0x75229f05e120 audio_stream>) [70 audio_stream+0 S8 A64])) "/home/anand/Decode/decode.cpp":324:10 84 {*movdi_internal}
     (nil))
(insn 310 309 311 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:162 audio_stream.76_65 ] [162])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":324:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 311 310 312 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 321)
            (pc))) "/home/anand/Decode/decode.cpp":324:6 1130 {*jcc}
     (nil)
 -> 321)
(note 312 311 313 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 314 27 (set (reg/f:DI 1 dx [orig:163 audio_dst_filename.77_66 ] [163])
        (mem/f/c:DI (symbol_ref:DI ("_ZL18audio_dst_filename") [flags 0x2]  <var_decl 0x75229f05e2d0 audio_dst_filename>) [43 audio_dst_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":325:16 84 {*movdi_internal}
     (nil))
(insn 314 313 316 27 (set (reg/f:DI 0 ax [orig:164 src_filename.78_67 ] [164])
        (mem/f/c:DI (symbol_ref:DI ("_ZL12src_filename") [flags 0x2]  <var_decl 0x75229f05e1b0 src_filename>) [43 src_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":325:16 84 {*movdi_internal}
     (nil))
(insn 316 314 317 27 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:164 src_filename.78_67 ] [164])) "/home/anand/Decode/decode.cpp":325:16 84 {*movdi_internal}
     (nil))
(insn 317 316 318 27 (set (reg:DI 0 ax [252])
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x75229ec28480 *.LC30>)) "/home/anand/Decode/decode.cpp":325:16 84 {*movdi_internal}
     (nil))
(insn 318 317 319 27 (set (reg:DI 5 di)
        (reg:DI 0 ax [252])) "/home/anand/Decode/decode.cpp":325:16 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x75229ec28480 *.LC30>)
        (nil)))
(insn 319 318 320 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":325:16 87 {*movqi_internal}
     (nil))
(call_insn 320 319 321 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7522a1326600 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":325:16 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 321 320 322 28 49 (nil) [1 uses])
(note 322 321 582 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 582 322 583 28 (set (pc)
        (label_ref 368)) "/home/anand/Decode/decode.cpp":328:6 1131 {jump}
     (nil)
 -> 368)
(barrier 583 582 381)
(code_label 381 583 325 29 54 (nil) [1 uses])
(note 325 381 326 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 29 (set (reg/f:DI 0 ax [orig:165 pkt.79_68 ] [165])
        (mem/f/c:DI (symbol_ref:DI ("_ZL3pkt") [flags 0x2]  <var_decl 0x75229f05e7e0 pkt>) [78 pkt+0 S8 A64])) "/home/anand/Decode/decode.cpp":331:19 84 {*movdi_internal}
     (nil))
(insn 327 326 328 29 (set (reg:SI 1 dx [orig:166 _69 ] [166])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:165 pkt.79_68 ] [165])
                (const_int 36 [0x24])) [1 pkt.79_68->stream_index+0 S4 A32])) "/home/anand/Decode/decode.cpp":331:19 85 {*movsi_internal}
     (nil))
(insn 328 327 329 29 (set (reg:SI 0 ax [orig:167 video_stream_idx.80_70 ] [167])
        (mem/c:SI (symbol_ref:DI ("_ZL16video_stream_idx") [flags 0x2]  <var_decl 0x75229f05e630 video_stream_idx>) [1 video_stream_idx+0 S4 A32])) "/home/anand/Decode/decode.cpp":331:32 85 {*movsi_internal}
     (nil))
(insn 329 328 330 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:166 _69 ] [166])
            (reg:SI 0 ax [orig:167 video_stream_idx.80_70 ] [167]))) "/home/anand/Decode/decode.cpp":331:10 11 {*cmpsi_1}
     (nil))
(jump_insn 330 329 331 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 341)
            (pc))) "/home/anand/Decode/decode.cpp":331:10 1130 {*jcc}
     (nil)
 -> 341)
(note 331 330 332 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 333 30 (set (reg/f:DI 1 dx [orig:168 pkt.81_71 ] [168])
        (mem/f/c:DI (symbol_ref:DI ("_ZL3pkt") [flags 0x2]  <var_decl 0x75229f05e7e0 pkt>) [78 pkt+0 S8 A64])) "/home/anand/Decode/decode.cpp":332:33 84 {*movdi_internal}
     (nil))
(insn 333 332 334 30 (set (reg/f:DI 0 ax [orig:169 video_dec_ctx.82_72 ] [169])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13video_dec_ctx") [flags 0x2]  <var_decl 0x75229f5db630 video_dec_ctx>) [25 video_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":332:33 84 {*movdi_internal}
     (nil))
(insn 334 333 335 30 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:168 pkt.81_71 ] [168])) "/home/anand/Decode/decode.cpp":332:33 84 {*movdi_internal}
     (nil))
(insn 335 334 336 30 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:169 video_dec_ctx.82_72 ] [169])) "/home/anand/Decode/decode.cpp":332:33 84 {*movdi_internal}
     (nil))
(call_insn 336 335 338 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL13decode_packetP14AVCodecContextPK8AVPacket") [flags 0x3]  <function_decl 0x75229f06b000 decode_packet>) [0 decode_packet S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":332:33 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 338 336 584 30 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])
        (reg:SI 0 ax [orig:211 _186 ] [211])) "/home/anand/Decode/decode.cpp":332:33 discrim 1 85 {*movsi_internal}
     (nil))
(jump_insn 584 338 585 30 (set (pc)
        (label_ref 356)) 1131 {jump}
     (nil)
 -> 356)
(barrier 585 584 341)
(code_label 341 585 342 31 51 (nil) [1 uses])
(note 342 341 343 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 343 342 344 31 (set (reg/f:DI 0 ax [orig:170 pkt.83_73 ] [170])
        (mem/f/c:DI (symbol_ref:DI ("_ZL3pkt") [flags 0x2]  <var_decl 0x75229f05e7e0 pkt>) [78 pkt+0 S8 A64])) "/home/anand/Decode/decode.cpp":333:24 84 {*movdi_internal}
     (nil))
(insn 344 343 345 31 (set (reg:SI 1 dx [orig:171 _74 ] [171])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:170 pkt.83_73 ] [170])
                (const_int 36 [0x24])) [1 pkt.83_73->stream_index+0 S4 A32])) "/home/anand/Decode/decode.cpp":333:24 85 {*movsi_internal}
     (nil))
(insn 345 344 346 31 (set (reg:SI 0 ax [orig:172 audio_stream_idx.84_75 ] [172])
        (mem/c:SI (symbol_ref:DI ("_ZL16audio_stream_idx") [flags 0x2]  <var_decl 0x75229f05e6c0 audio_stream_idx>) [1 audio_stream_idx+0 S4 A32])) "/home/anand/Decode/decode.cpp":333:37 85 {*movsi_internal}
     (nil))
(insn 346 345 347 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:171 _74 ] [171])
            (reg:SI 0 ax [orig:172 audio_stream_idx.84_75 ] [172]))) "/home/anand/Decode/decode.cpp":333:15 11 {*cmpsi_1}
     (nil))
(jump_insn 347 346 348 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 356)
            (pc))) "/home/anand/Decode/decode.cpp":333:15 1130 {*jcc}
     (nil)
 -> 356)
(note 348 347 349 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 32 (set (reg/f:DI 1 dx [orig:173 pkt.85_76 ] [173])
        (mem/f/c:DI (symbol_ref:DI ("_ZL3pkt") [flags 0x2]  <var_decl 0x75229f05e7e0 pkt>) [78 pkt+0 S8 A64])) "/home/anand/Decode/decode.cpp":334:33 84 {*movdi_internal}
     (nil))
(insn 350 349 351 32 (set (reg/f:DI 0 ax [orig:174 audio_dec_ctx.86_77 ] [174])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13audio_dec_ctx") [flags 0x2]  <var_decl 0x75229f5dbd80 audio_dec_ctx>) [25 audio_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":334:33 84 {*movdi_internal}
     (nil))
(insn 351 350 352 32 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:173 pkt.85_76 ] [173])) "/home/anand/Decode/decode.cpp":334:33 84 {*movdi_internal}
     (nil))
(insn 352 351 353 32 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:174 audio_dec_ctx.86_77 ] [174])) "/home/anand/Decode/decode.cpp":334:33 84 {*movdi_internal}
     (nil))
(call_insn 353 352 355 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL13decode_packetP14AVCodecContextPK8AVPacket") [flags 0x3]  <function_decl 0x75229f06b000 decode_packet>) [0 decode_packet S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":334:33 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 355 353 356 32 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])
        (reg:SI 0 ax [orig:210 _183 ] [210])) "/home/anand/Decode/decode.cpp":334:33 discrim 1 85 {*movsi_internal}
     (nil))
(code_label 356 355 357 33 52 (nil) [2 uses])
(note 357 356 358 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 33 (set (reg/f:DI 0 ax [orig:175 pkt.87_78 ] [175])
        (mem/f/c:DI (symbol_ref:DI ("_ZL3pkt") [flags 0x2]  <var_decl 0x75229f05e7e0 pkt>) [78 pkt+0 S8 A64])) "/home/anand/Decode/decode.cpp":335:25 84 {*movdi_internal}
     (nil))
(insn 359 358 360 33 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:175 pkt.87_78 ] [175])) "/home/anand/Decode/decode.cpp":335:25 84 {*movdi_internal}
     (nil))
(call_insn 360 359 363 33 (call (mem:QI (symbol_ref:DI ("av_packet_unref") [flags 0x41]  <function_decl 0x75229f38dc00 av_packet_unref>) [0 av_packet_unref S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":335:25 1137 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 363 360 364 33 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":336:10 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 364 363 368 33 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 592)
            (pc))) "/home/anand/Decode/decode.cpp":336:10 1130 {*jcc}
     (nil)
 -> 592)
(code_label 368 364 369 34 50 (nil) [1 uses])
(note 369 368 370 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 34 (set (reg/f:DI 1 dx [orig:176 pkt.89_79 ] [176])
        (mem/f/c:DI (symbol_ref:DI ("_ZL3pkt") [flags 0x2]  <var_decl 0x75229f05e7e0 pkt>) [78 pkt+0 S8 A64])) "/home/anand/Decode/decode.cpp":328:26 84 {*movdi_internal}
     (nil))
(insn 371 370 372 34 (set (reg/f:DI 0 ax [orig:177 fmt_ctx.90_80 ] [177])
        (mem/f/c:DI (symbol_ref:DI ("_ZL7fmt_ctx") [flags 0x2]  <var_decl 0x75229f5db5a0 fmt_ctx>) [77 fmt_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":328:26 84 {*movdi_internal}
     (nil))
(insn 372 371 373 34 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:176 pkt.89_79 ] [176])) "/home/anand/Decode/decode.cpp":328:26 84 {*movdi_internal}
     (nil))
(insn 373 372 374 34 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:177 fmt_ctx.90_80 ] [177])) "/home/anand/Decode/decode.cpp":328:26 84 {*movdi_internal}
     (nil))
(call_insn 374 373 378 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_read_frame") [flags 0x41]  <function_decl 0x75229f04a000 av_read_frame>) [0 av_read_frame S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":328:26 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 378 374 379 34 (set (reg:SI 0 ax [253])
        (not:SI (reg:SI 0 ax [orig:178 _81 ] [178]))) "/home/anand/Decode/decode.cpp":328:41 discrim 1 867 {*one_cmplsi2_1}
     (nil))
(insn 379 378 382 34 (parallel [
            (set (reg:SI 0 ax [254])
                (lshiftrt:SI (reg:SI 0 ax [253])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":328:41 discrim 1 979 {*lshrsi3_1}
     (nil))
(insn 382 379 383 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:209 retval.88_181 ] [209])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":328:41 discrim 1 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 383 382 588 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 381)
            (pc))) "/home/anand/Decode/decode.cpp":328:41 discrim 1 1130 {*jcc}
     (nil)
 -> 381)
(note 588 383 589 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(jump_insn 589 588 590 56 (set (pc)
        (label_ref 384)) 1131 {jump}
     (nil)
 -> 384)
(barrier 590 589 592)
(code_label 592 590 591 57 66 (nil) [1 uses])
(note 591 592 593 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 593 591 384 57 (const_int 0 [0]) "/home/anand/Decode/decode.cpp":337:14 1167 {nop}
     (nil))
(code_label 384 593 385 35 53 (nil) [1 uses])
(note 385 384 386 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 35 (set (reg/f:DI 0 ax [orig:179 video_dec_ctx.91_82 ] [179])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13video_dec_ctx") [flags 0x2]  <var_decl 0x75229f5db630 video_dec_ctx>) [25 video_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":341:10 84 {*movdi_internal}
     (nil))
(insn 387 386 388 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:179 video_dec_ctx.91_82 ] [179])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":341:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 388 387 389 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 394)
            (pc))) "/home/anand/Decode/decode.cpp":341:6 1130 {*jcc}
     (nil)
 -> 394)
(note 389 388 390 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 36 (set (reg/f:DI 0 ax [orig:180 video_dec_ctx.92_83 ] [180])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13video_dec_ctx") [flags 0x2]  <var_decl 0x75229f5db630 video_dec_ctx>) [25 video_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":342:23 84 {*movdi_internal}
     (nil))
(insn 391 390 392 36 (set (reg:DI 4 si)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":342:23 84 {*movdi_internal}
     (nil))
(insn 392 391 393 36 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:180 video_dec_ctx.92_83 ] [180])) "/home/anand/Decode/decode.cpp":342:23 84 {*movdi_internal}
     (nil))
(call_insn 393 392 394 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL13decode_packetP14AVCodecContextPK8AVPacket") [flags 0x3]  <function_decl 0x75229f06b000 decode_packet>) [0 decode_packet S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":342:23 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(code_label 394 393 395 37 55 (nil) [1 uses])
(note 395 394 396 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 37 (set (reg/f:DI 0 ax [orig:181 audio_dec_ctx.93_84 ] [181])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13audio_dec_ctx") [flags 0x2]  <var_decl 0x75229f5dbd80 audio_dec_ctx>) [25 audio_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":343:10 84 {*movdi_internal}
     (nil))
(insn 397 396 398 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:181 audio_dec_ctx.93_84 ] [181])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":343:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 398 397 399 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) "/home/anand/Decode/decode.cpp":343:6 1130 {*jcc}
     (nil)
 -> 404)
(note 399 398 400 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 400 399 401 38 (set (reg/f:DI 0 ax [orig:182 audio_dec_ctx.94_85 ] [182])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13audio_dec_ctx") [flags 0x2]  <var_decl 0x75229f5dbd80 audio_dec_ctx>) [25 audio_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":344:23 84 {*movdi_internal}
     (nil))
(insn 401 400 402 38 (set (reg:DI 4 si)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":344:23 84 {*movdi_internal}
     (nil))
(insn 402 401 403 38 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:182 audio_dec_ctx.94_85 ] [182])) "/home/anand/Decode/decode.cpp":344:23 84 {*movdi_internal}
     (nil))
(call_insn 403 402 404 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL13decode_packetP14AVCodecContextPK8AVPacket") [flags 0x3]  <function_decl 0x75229f06b000 decode_packet>) [0 decode_packet S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":344:23 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(code_label 404 403 405 39 56 (nil) [1 uses])
(note 405 404 406 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 39 (set (reg:DI 0 ax [255])
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x75229ec28510 *.LC31>)) "/home/anand/Decode/decode.cpp":346:12 84 {*movdi_internal}
     (nil))
(insn 407 406 408 39 (set (reg:DI 5 di)
        (reg:DI 0 ax [255])) "/home/anand/Decode/decode.cpp":346:12 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x75229ec28510 *.LC31>)
        (nil)))
(call_insn 408 407 409 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7522a1329100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":346:12 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 409 408 410 39 (set (reg/f:DI 0 ax [orig:183 video_stream.95_86 ] [183])
        (mem/f/c:DI (symbol_ref:DI ("_ZL12video_stream") [flags 0x2]  <var_decl 0x75229f05e090 video_stream>) [70 video_stream+0 S8 A64])) "/home/anand/Decode/decode.cpp":348:10 84 {*movdi_internal}
     (nil))
(insn 410 409 411 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:183 video_stream.95_86 ] [183])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":348:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 411 410 412 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 428)
            (pc))) "/home/anand/Decode/decode.cpp":348:6 1130 {*jcc}
     (nil)
 -> 428)
(note 412 411 413 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 40 (set (reg/f:DI 41 r13 [orig:184 video_dst_filename.96_87 ] [184])
        (mem/f/c:DI (symbol_ref:DI ("_ZL18video_dst_filename") [flags 0x2]  <var_decl 0x75229f05e240 video_dst_filename>) [43 video_dst_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":349:16 84 {*movdi_internal}
     (nil))
(insn 414 413 415 40 (set (reg:SI 40 r12 [orig:185 height.97_88 ] [185])
        (mem/c:SI (symbol_ref:DI ("_ZL6height") [flags 0x2]  <var_decl 0x75229f5dbf30 height>) [1 height+0 S4 A32])) "/home/anand/Decode/decode.cpp":349:16 85 {*movsi_internal}
     (nil))
(insn 415 414 416 40 (set (reg:SI 3 bx [orig:186 width.98_89 ] [186])
        (mem/c:SI (symbol_ref:DI ("_ZL5width") [flags 0x2]  <var_decl 0x75229f5dbea0 width>) [1 width+0 S4 A32])) "/home/anand/Decode/decode.cpp":349:16 85 {*movsi_internal}
     (nil))
(insn 416 415 417 40 (set (reg:SI 0 ax [orig:187 pix_fmt.99_90 ] [187])
        (mem/c:SI (symbol_ref:DI ("_ZL7pix_fmt") [flags 0x2]  <var_decl 0x75229f05e000 pix_fmt>) [22 pix_fmt+0 S4 A32])) "/home/anand/Decode/decode.cpp":349:16 85 {*movsi_internal}
     (nil))
(insn 417 416 418 40 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:187 pix_fmt.99_90 ] [187])) "/home/anand/Decode/decode.cpp":349:16 85 {*movsi_internal}
     (nil))
(call_insn 418 417 420 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_get_pix_fmt_name") [flags 0x41]  <function_decl 0x7522a0d30900 av_get_pix_fmt_name>) [0 av_get_pix_fmt_name S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":349:16 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 420 418 421 40 (set (reg:DI 36 r8)
        (reg/f:DI 41 r13 [orig:184 video_dst_filename.96_87 ] [184])) "/home/anand/Decode/decode.cpp":349:16 discrim 1 84 {*movdi_internal}
     (nil))
(insn 421 420 422 40 (set (reg:SI 2 cx)
        (reg:SI 40 r12 [orig:185 height.97_88 ] [185])) "/home/anand/Decode/decode.cpp":349:16 discrim 1 85 {*movsi_internal}
     (nil))
(insn 422 421 423 40 (set (reg:SI 1 dx)
        (reg:SI 3 bx [orig:186 width.98_89 ] [186])) "/home/anand/Decode/decode.cpp":349:16 discrim 1 85 {*movsi_internal}
     (nil))
(insn 423 422 424 40 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:188 _91 ] [188])) "/home/anand/Decode/decode.cpp":349:16 discrim 1 84 {*movdi_internal}
     (nil))
(insn 424 423 425 40 (set (reg:DI 0 ax [256])
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x75229ec285a0 *.LC32>)) "/home/anand/Decode/decode.cpp":349:16 discrim 1 84 {*movdi_internal}
     (nil))
(insn 425 424 426 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [256])) "/home/anand/Decode/decode.cpp":349:16 discrim 1 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x75229ec285a0 *.LC32>)
        (nil)))
(insn 426 425 427 40 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":349:16 discrim 1 87 {*movqi_internal}
     (nil))
(call_insn 427 426 428 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7522a1326600 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":349:16 discrim 1 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:DI (use (reg:DI 36 r8))
                            (nil))))))))
(code_label 428 427 429 41 57 (nil) [1 uses])
(note 429 428 430 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 41 (set (reg/f:DI 0 ax [orig:189 audio_stream.100_92 ] [189])
        (mem/f/c:DI (symbol_ref:DI ("_ZL12audio_stream") [flags 0x2]  <var_decl 0x75229f05e120 audio_stream>) [70 audio_stream+0 S8 A64])) "/home/anand/Decode/decode.cpp":355:10 84 {*movdi_internal}
     (nil))
(insn 431 430 432 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:189 audio_stream.100_92 ] [189])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":355:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 432 431 433 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 597)
            (pc))) "/home/anand/Decode/decode.cpp":355:6 1130 {*jcc}
     (nil)
 -> 597)
(note 433 432 434 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 434 433 435 42 (set (reg/f:DI 0 ax [orig:190 audio_dec_ctx.101_93 ] [190])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13audio_dec_ctx") [flags 0x2]  <var_decl 0x75229f5dbd80 audio_dec_ctx>) [25 audio_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":356:52 84 {*movdi_internal}
     (nil))
(insn 435 434 436 42 (set (reg:SI 0 ax [257])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:190 audio_dec_ctx.101_93 ] [190])
                (const_int 348 [0x15c])) [39 audio_dec_ctx.101_93->sample_fmt+0 S4 A32])) "/home/anand/Decode/decode.cpp":356:30 85 {*movsi_internal}
     (nil))
(insn 436 435 437 42 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [39 sfmt+0 S4 A64])
        (reg:SI 0 ax [257])) "/home/anand/Decode/decode.cpp":356:30 85 {*movsi_internal}
     (nil))
(insn 437 436 438 42 (set (reg/f:DI 0 ax [orig:191 audio_dec_ctx.102_94 ] [191])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13audio_dec_ctx") [flags 0x2]  <var_decl 0x75229f5dbd80 audio_dec_ctx>) [25 audio_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":357:52 84 {*movdi_internal}
     (nil))
(insn 438 437 439 42 (set (reg:SI 0 ax [258])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:191 audio_dec_ctx.102_94 ] [191])
                (const_int 356 [0x164])) [1 audio_dec_ctx.102_94->ch_layout.nb_channels+0 S4 A32])) "/home/anand/Decode/decode.cpp":357:14 85 {*movsi_internal}
     (nil))
(insn 439 438 440 42 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 n_channels+0 S4 A32])
        (reg:SI 0 ax [258])) "/home/anand/Decode/decode.cpp":357:14 85 {*movsi_internal}
     (nil))
(insn 440 439 441 42 (set (reg:SI 0 ax [259])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [39 sfmt+0 S4 A64])) "/home/anand/Decode/decode.cpp":360:37 85 {*movsi_internal}
     (nil))
(insn 441 440 442 42 (set (reg:SI 5 di)
        (reg:SI 0 ax [259])) "/home/anand/Decode/decode.cpp":360:37 85 {*movsi_internal}
     (nil))
(call_insn 442 441 444 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_sample_fmt_is_planar") [flags 0x41]  <function_decl 0x7522a0d55f00 av_sample_fmt_is_planar>) [0 av_sample_fmt_is_planar S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":360:37 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 444 442 445 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:192 _95 ] [192])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":360:37 discrim 1 7 {*cmpsi_ccno_1}
     (nil))
(insn 445 444 446 42 (set (reg:QI 0 ax [orig:212 retval.103_199 ] [212])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":360:37 discrim 1 1125 {*setcc_qi}
     (nil))
(insn 446 445 447 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:212 retval.103_199 ] [212])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":360:10 discrim 1 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 447 446 448 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 476)
            (pc))) "/home/anand/Decode/decode.cpp":360:10 discrim 1 1130 {*jcc}
     (nil)
 -> 476)
(note 448 447 449 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 449 448 450 43 (set (reg:SI 0 ax [260])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [39 sfmt+0 S4 A64])) "/home/anand/Decode/decode.cpp":361:57 85 {*movsi_internal}
     (nil))
(insn 450 449 451 43 (set (reg:SI 5 di)
        (reg:SI 0 ax [260])) "/home/anand/Decode/decode.cpp":361:57 85 {*movsi_internal}
     (nil))
(call_insn 451 450 453 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_get_sample_fmt_name") [flags 0x41]  <function_decl 0x7522a0d55800 av_get_sample_fmt_name>) [0 av_get_sample_fmt_name S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":361:57 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 453 451 454 43 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [43 packed+0 S8 A64])
        (reg/f:DI 0 ax [orig:213 _201 ] [213])) "/home/anand/Decode/decode.cpp":361:57 discrim 1 84 {*movdi_internal}
     (nil))
(insn 454 453 455 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [43 packed+0 S8 A64])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":362:20 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 455 454 456 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 460)
            (pc))) "/home/anand/Decode/decode.cpp":362:20 1130 {*jcc}
     (nil)
 -> 460)
(note 456 455 457 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 457 456 586 44 (set (reg/f:DI 0 ax [orig:203 iftmp.104_113 ] [203])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [43 packed+0 S8 A64])) "/home/anand/Decode/decode.cpp":362:20 discrim 1 84 {*movdi_internal}
     (nil))
(jump_insn 586 457 587 44 (set (pc)
        (label_ref 463)) 1131 {jump}
     (nil)
 -> 463)
(barrier 587 586 460)
(code_label 460 587 461 45 59 (nil) [1 uses])
(note 461 460 462 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 462 461 463 45 (set (reg/f:DI 0 ax [orig:203 iftmp.104_113 ] [203])
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x75229ec28630 *.LC33>)) "/home/anand/Decode/decode.cpp":362:20 discrim 2 84 {*movdi_internal}
     (nil))
(code_label 463 462 464 46 60 (nil) [1 uses])
(note 464 463 465 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 46 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:203 iftmp.104_113 ] [203])) "/home/anand/Decode/decode.cpp":362:20 discrim 4 84 {*movdi_internal}
     (nil))
(insn 466 465 467 46 (set (reg:DI 0 ax [261])
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x75229ec286c0 *.LC34>)) "/home/anand/Decode/decode.cpp":362:20 discrim 4 84 {*movdi_internal}
     (nil))
(insn 467 466 468 46 (set (reg:DI 5 di)
        (reg:DI 0 ax [261])) "/home/anand/Decode/decode.cpp":362:20 discrim 4 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x75229ec286c0 *.LC34>)
        (nil)))
(insn 468 467 469 46 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":362:20 discrim 4 87 {*movqi_internal}
     (nil))
(call_insn 469 468 470 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7522a1326600 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":362:20 discrim 4 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 470 469 471 46 (set (reg:SI 0 ax [262])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [39 sfmt+0 S4 A64])) "/home/anand/Decode/decode.cpp":365:45 85 {*movsi_internal}
     (nil))
(insn 471 470 472 46 (set (reg:SI 5 di)
        (reg:SI 0 ax [262])) "/home/anand/Decode/decode.cpp":365:45 85 {*movsi_internal}
     (nil))
(call_insn 472 471 474 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("av_get_packed_sample_fmt") [flags 0x41]  <function_decl 0x7522a0d55b00 av_get_packed_sample_fmt>) [0 av_get_packed_sample_fmt S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":365:45 1148 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 474 472 475 46 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [39 sfmt+0 S4 A64])
        (reg:SI 0 ax [orig:214 _207 ] [214])) "/home/anand/Decode/decode.cpp":365:45 discrim 1 85 {*movsi_internal}
     (nil))
(insn 475 474 476 46 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 n_channels+0 S4 A32])
        (const_int 1 [0x1])) "/home/anand/Decode/decode.cpp":366:25 85 {*movsi_internal}
     (nil))
(code_label 476 475 477 47 58 (nil) [1 uses])
(note 477 476 478 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 478 477 479 47 (set (reg:SI 1 dx [263])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [39 sfmt+0 S4 A64])) "/home/anand/Decode/decode.cpp":369:47 85 {*movsi_internal}
     (nil))
(insn 479 478 480 47 (parallel [
            (set (reg:DI 0 ax [264])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":369:47 272 {*adddi_1}
     (nil))
(insn 480 479 481 47 (set (reg:SI 4 si)
        (reg:SI 1 dx [263])) "/home/anand/Decode/decode.cpp":369:47 85 {*movsi_internal}
     (nil))
(insn 481 480 482 47 (set (reg:DI 5 di)
        (reg:DI 0 ax [264])) "/home/anand/Decode/decode.cpp":369:47 84 {*movdi_internal}
     (nil))
(call_insn 482 481 484 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL26get_format_from_sample_fmtPPKc14AVSampleFormat") [flags 0x3]  <function_decl 0x75229f06b400 get_format_from_sample_fmt>) [0 get_format_from_sample_fmt S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":369:47 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 484 482 487 47 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])
        (reg:SI 0 ax [orig:215 _211 ] [215])) "/home/anand/Decode/decode.cpp":369:47 discrim 1 85 {*movsi_internal}
     (nil))
(insn 487 484 488 47 (set (reg:SI 0 ax [266])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])) "/home/anand/Decode/decode.cpp":369:61 discrim 1 85 {*movsi_internal}
     (nil))
(insn 488 487 490 47 (parallel [
            (set (reg:SI 0 ax [265])
                (lshiftrt:SI (reg:SI 0 ax [266])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":369:61 discrim 1 979 {*lshrsi3_1}
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -36 [0xffffffffffffffdc])) [1 ret+0 S4 A32])
            (const_int 31 [0x1f]))
        (nil)))
(insn 490 488 491 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:216 retval.105_213 ] [216])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":369:10 discrim 1 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 491 490 496 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 602)
            (pc))) "/home/anand/Decode/decode.cpp":369:10 discrim 1 1130 {*jcc}
     (nil)
 -> 602)
(note 496 491 497 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 497 496 498 48 (set (reg/f:DI 4 si [orig:193 audio_dst_filename.106_96 ] [193])
        (mem/f/c:DI (symbol_ref:DI ("_ZL18audio_dst_filename") [flags 0x2]  <var_decl 0x75229f05e2d0 audio_dst_filename>) [43 audio_dst_filename+0 S8 A64])) "/home/anand/Decode/decode.cpp":372:16 84 {*movdi_internal}
     (nil))
(insn 498 497 499 48 (set (reg/f:DI 0 ax [orig:194 audio_dec_ctx.107_97 ] [194])
        (mem/f/c:DI (symbol_ref:DI ("_ZL13audio_dec_ctx") [flags 0x2]  <var_decl 0x75229f5dbd80 audio_dec_ctx>) [25 audio_dec_ctx+0 S8 A64])) "/home/anand/Decode/decode.cpp":372:16 84 {*movdi_internal}
     (nil))
(insn 499 498 500 48 (set (reg:SI 2 cx [orig:195 _98 ] [195])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:194 audio_dec_ctx.107_97 ] [194])
                (const_int 344 [0x158])) [1 audio_dec_ctx.107_97->sample_rate+0 S4 A64])) "/home/anand/Decode/decode.cpp":372:16 85 {*movsi_internal}
     (nil))
(insn 500 499 501 48 (set (reg/f:DI 0 ax [orig:196 fmt.108_99 ] [196])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [43 fmt+0 S8 A64])) "/home/anand/Decode/decode.cpp":372:16 84 {*movdi_internal}
     (nil))
(insn 501 500 502 48 (set (reg:SI 1 dx [267])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 n_channels+0 S4 A32])) "/home/anand/Decode/decode.cpp":372:16 85 {*movsi_internal}
     (nil))
(insn 502 501 505 48 (set (reg:DI 36 r8)
        (reg/f:DI 4 si [orig:193 audio_dst_filename.106_96 ] [193])) "/home/anand/Decode/decode.cpp":372:16 84 {*movdi_internal}
     (nil))
(insn 505 502 506 48 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:196 fmt.108_99 ] [196])) "/home/anand/Decode/decode.cpp":372:16 84 {*movdi_internal}
     (nil))
(insn 506 505 507 48 (set (reg:DI 0 ax [268])
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x75229ec28750 *.LC35>)) "/home/anand/Decode/decode.cpp":372:16 84 {*movdi_internal}
     (nil))
(insn 507 506 508 48 (set (reg:DI 5 di)
        (reg:DI 0 ax [268])) "/home/anand/Decode/decode.cpp":372:16 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x75229ec28750 *.LC35>)
        (nil)))
(insn 508 507 509 48 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":372:16 87 {*movqi_internal}
     (nil))
(call_insn 509 508 594 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7522a1326600 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":372:16 1148 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:DI (use (reg:DI 36 r8))
                            (nil))))))))
(jump_insn 594 509 595 48 (set (pc)
        (label_ref 510)) 1131 {jump}
     (nil)
 -> 510)
(barrier 595 594 597)
(code_label 597 595 596 58 67 (nil) [1 uses])
(note 596 597 598 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 598 596 599 58 (const_int 0 [0]) "/home/anand/Decode/decode.cpp":378:2 1167 {nop}
     (nil))
(jump_insn 599 598 600 58 (set (pc)
        (label_ref 510)) 1131 {jump}
     (nil)
 -> 510)
(barrier 600 599 602)
(code_label 602 600 601 59 68 (nil) [1 uses])
(note 601 602 603 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 603 601 510 59 (const_int 0 [0]) "/home/anand/Decode/decode.cpp":370:19 discrim 1 1167 {nop}
     (nil))
(code_label 510 603 511 49 42 ("end") [8 uses])
(note 511 510 512 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 49 (set (reg:DI 0 ax [269])
        (symbol_ref:DI ("_ZL13video_dec_ctx") [flags 0x2]  <var_decl 0x75229f5db630 video_dec_ctx>)) "/home/anand/Decode/decode.cpp":379:26 84 {*movdi_internal}
     (nil))
(insn 513 512 514 49 (set (reg:DI 5 di)
        (reg:DI 0 ax [269])) "/home/anand/Decode/decode.cpp":379:26 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL13video_dec_ctx") [flags 0x2]  <var_decl 0x75229f5db630 video_dec_ctx>)
        (nil)))
(call_insn 514 513 515 49 (call (mem:QI (symbol_ref:DI ("avcodec_free_context") [flags 0x41]  <function_decl 0x75229f392e00 avcodec_free_context>) [0 avcodec_free_context S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":379:26 1137 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 515 514 516 49 (set (reg:DI 0 ax [270])
        (symbol_ref:DI ("_ZL13audio_dec_ctx") [flags 0x2]  <var_decl 0x75229f5dbd80 audio_dec_ctx>)) "/home/anand/Decode/decode.cpp":380:26 84 {*movdi_internal}
     (nil))
(insn 516 515 517 49 (set (reg:DI 5 di)
        (reg:DI 0 ax [270])) "/home/anand/Decode/decode.cpp":380:26 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL13audio_dec_ctx") [flags 0x2]  <var_decl 0x75229f5dbd80 audio_dec_ctx>)
        (nil)))
(call_insn 517 516 518 49 (call (mem:QI (symbol_ref:DI ("avcodec_free_context") [flags 0x41]  <function_decl 0x75229f392e00 avcodec_free_context>) [0 avcodec_free_context S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":380:26 1137 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 518 517 519 49 (set (reg:DI 0 ax [271])
        (symbol_ref:DI ("_ZL7fmt_ctx") [flags 0x2]  <var_decl 0x75229f5db5a0 fmt_ctx>)) "/home/anand/Decode/decode.cpp":381:26 84 {*movdi_internal}
     (nil))
(insn 519 518 520 49 (set (reg:DI 5 di)
        (reg:DI 0 ax [271])) "/home/anand/Decode/decode.cpp":381:26 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL7fmt_ctx") [flags 0x2]  <var_decl 0x75229f5db5a0 fmt_ctx>)
        (nil)))
(call_insn 520 519 521 49 (call (mem:QI (symbol_ref:DI ("avformat_close_input") [flags 0x41]  <function_decl 0x75229f04a600 avformat_close_input>) [0 avformat_close_input S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":381:26 1137 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 521 520 522 49 (set (reg/f:DI 0 ax [orig:197 video_dst_file.109_100 ] [197])
        (mem/f/c:DI (symbol_ref:DI ("_ZL14video_dst_file") [flags 0x2]  <var_decl 0x75229f05e360 video_dst_file>) [24 video_dst_file+0 S8 A64])) "/home/anand/Decode/decode.cpp":382:10 84 {*movdi_internal}
     (nil))
(insn 522 521 523 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:197 video_dst_file.109_100 ] [197])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":382:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 523 522 524 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 528)
            (pc))) "/home/anand/Decode/decode.cpp":382:6 1130 {*jcc}
     (nil)
 -> 528)
(note 524 523 525 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 525 524 526 50 (set (reg/f:DI 0 ax [orig:198 video_dst_file.110_101 ] [198])
        (mem/f/c:DI (symbol_ref:DI ("_ZL14video_dst_file") [flags 0x2]  <var_decl 0x75229f05e360 video_dst_file>) [24 video_dst_file+0 S8 A64])) "/home/anand/Decode/decode.cpp":383:16 84 {*movdi_internal}
     (nil))
(insn 526 525 527 50 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:198 video_dst_file.110_101 ] [198])) "/home/anand/Decode/decode.cpp":383:16 84 {*movdi_internal}
     (nil))
(call_insn 527 526 528 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x75229f5e4800 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":383:16 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 528 527 529 51 62 (nil) [1 uses])
(note 529 528 530 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 530 529 531 51 (set (reg/f:DI 0 ax [orig:199 audio_dst_file.111_102 ] [199])
        (mem/f/c:DI (symbol_ref:DI ("_ZL14audio_dst_file") [flags 0x2]  <var_decl 0x75229f05e3f0 audio_dst_file>) [24 audio_dst_file+0 S8 A64])) "/home/anand/Decode/decode.cpp":384:10 84 {*movdi_internal}
     (nil))
(insn 531 530 532 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:199 audio_dst_file.111_102 ] [199])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":384:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 532 531 533 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) "/home/anand/Decode/decode.cpp":384:6 1130 {*jcc}
     (nil)
 -> 537)
(note 533 532 534 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 534 533 535 52 (set (reg/f:DI 0 ax [orig:200 audio_dst_file.112_103 ] [200])
        (mem/f/c:DI (symbol_ref:DI ("_ZL14audio_dst_file") [flags 0x2]  <var_decl 0x75229f05e3f0 audio_dst_file>) [24 audio_dst_file+0 S8 A64])) "/home/anand/Decode/decode.cpp":385:16 84 {*movdi_internal}
     (nil))
(insn 535 534 536 52 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:200 audio_dst_file.112_103 ] [200])) "/home/anand/Decode/decode.cpp":385:16 84 {*movdi_internal}
     (nil))
(call_insn 536 535 537 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x75229f5e4800 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "/home/anand/Decode/decode.cpp":385:16 1148 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 537 536 538 53 63 (nil) [1 uses])
(note 538 537 539 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 539 538 540 53 (set (reg:DI 0 ax [272])
        (symbol_ref:DI ("_ZL3pkt") [flags 0x2]  <var_decl 0x75229f05e7e0 pkt>)) "/home/anand/Decode/decode.cpp":386:20 84 {*movdi_internal}
     (nil))
(insn 540 539 541 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [272])) "/home/anand/Decode/decode.cpp":386:20 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL3pkt") [flags 0x2]  <var_decl 0x75229f05e7e0 pkt>)
        (nil)))
(call_insn 541 540 542 53 (call (mem:QI (symbol_ref:DI ("av_packet_free") [flags 0x41]  <function_decl 0x75229f372e00 av_packet_free>) [0 av_packet_free S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":386:20 1137 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 542 541 543 53 (set (reg:DI 0 ax [273])
        (symbol_ref:DI ("_ZL5frame") [flags 0x2]  <var_decl 0x75229f05e750 frame>)) "/home/anand/Decode/decode.cpp":387:19 84 {*movdi_internal}
     (nil))
(insn 543 542 544 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [273])) "/home/anand/Decode/decode.cpp":387:19 84 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZL5frame") [flags 0x2]  <var_decl 0x75229f05e750 frame>)
        (nil)))
(call_insn 544 543 545 53 (call (mem:QI (symbol_ref:DI ("av_frame_free") [flags 0x41]  <function_decl 0x75229f2f0700 av_frame_free>) [0 av_frame_free S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":387:19 1137 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 545 544 546 53 (set (reg/f:DI 0 ax [orig:201 _104 ] [201])
        (mem/f/c:DI (symbol_ref:DI ("_ZL14video_dst_data") [flags 0x2]  <var_decl 0x75229f05e480 video_dst_data>) [3 video_dst_data[0]+0 S8 A256])) "/home/anand/Decode/decode.cpp":388:30 84 {*movdi_internal}
     (nil))
(insn 546 545 547 53 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:201 _104 ] [201])) "/home/anand/Decode/decode.cpp":388:13 84 {*movdi_internal}
     (nil))
(call_insn 547 546 550 53 (call (mem:QI (symbol_ref:DI ("av_free") [flags 0x41]  <function_decl 0x75229f287900 av_free>) [0 av_free S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":388:13 1137 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 550 547 551 53 (set (reg:SI 0 ax [275])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 ret+0 S4 A32])) "/home/anand/Decode/decode.cpp":390:17 85 {*movsi_internal}
     (nil))
(insn 551 550 553 53 (parallel [
            (set (reg:SI 0 ax [274])
                (lshiftrt:SI (reg:SI 0 ax [275])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "/home/anand/Decode/decode.cpp":390:17 979 {*lshrsi3_1}
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -36 [0xffffffffffffffdc])) [1 ret+0 S4 A32])
            (const_int 31 [0x1f]))
        (nil)))
(insn 553 551 560 53 (set (reg:SI 0 ax [orig:217 _230 ] [217])
        (zero_extend:SI (reg:QI 0 ax [orig:202 _105 ] [202]))) "/home/anand/Decode/decode.cpp":390:19 169 {*zero_extendqisi2}
     (nil))
(insn 560 553 561 53 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -40 [0xffffffffffffffd8])) [8 D.37298+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 1 dx [277]))
        ]) "/home/anand/Decode/decode.cpp":391:2 1530 {stack_protect_test_1_di}
     (nil))
(jump_insn 561 560 568 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 564)
            (pc))) "/home/anand/Decode/decode.cpp":391:2 1130 {*jcc}
     (nil)
 -> 564)
(note 568 561 562 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(call_insn 562 568 563 54 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x75229ec0b500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/home/anand/Decode/decode.cpp":391:2 1137 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 563 562 564)
(code_label 564 563 569 55 65 (nil) [1 uses])
(note 569 564 566 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 566 569 604 55 (use (reg/i:SI 0 ax)) "/home/anand/Decode/decode.cpp":391:2 -1
     (nil))
(note 604 566 0 NOTE_INSN_DELETED)
